

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0613 */
/* @@MIDL_FILE_HEADING(  ) */



/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Emedia2Ecore_h__
#define __windows2Emedia2Ecore_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CAudioTrack __FIIterator_1_Windows__CMedia__CCore__CAudioTrack;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CAudioTrack __FIIterable_1_Windows__CMedia__CCore__CAudioTrack;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CIMediaCue __FIIterator_1_Windows__CMedia__CCore__CIMediaCue;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CIMediaCue __FIIterable_1_Windows__CMedia__CCore__CIMediaCue;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CMedia__CCore__CVideoTrack __FIIterator_1_Windows__CMedia__CCore__CVideoTrack;

#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CMedia__CCore__CVideoTrack __FIIterable_1_Windows__CMedia__CCore__CVideoTrack;

#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
typedef interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#endif 	/* ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
typedef interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#endif 	/* ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSource __FIVector_1_Windows__CMedia__CCore__CTimedTextSource;

#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__ */


#ifndef ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
typedef interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource;

#endif 	/* ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__ */


#ifndef ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
typedef interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource;

#endif 	/* ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack;

#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CMedia__CCore__CTimedTextLine __FIVector_1_Windows__CMedia__CCore__CTimedTextLine;

#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat;

#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__ */


#ifndef ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__
typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample;

#endif 	/* ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__ */


#ifndef ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__
#define ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__
typedef interface __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample;

#endif 	/* ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSource;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamDescriptor;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IAudioStreamDescriptor;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IAudioStreamDescriptorFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IVideoStreamDescriptor;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IVideoStreamDescriptorFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSource;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSample;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSampleStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSampleProtectionProperties;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceClosedRequest;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceClosedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceStartingRequestDeferral;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceStartingRequest;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceStartingEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceSampleRequestDeferral;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceSampleRequest;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceSampleRequestedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceSwitchStreamsRequestDeferral;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceSwitchStreamsRequest;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaStreamSourceSwitchStreamsRequestedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMseStreamSourceStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMseStreamSource;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMseSourceBuffer;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMseSourceBufferList;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IHighDynamicRangeControl;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ISceneAnalysisEffect;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IHighDynamicRangeOutput;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ISceneAnalysisEffectFrame;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ISceneAnalyzedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IFaceDetectionEffectFrame;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IFaceDetectedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IFaceDetectionEffect;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IFaceDetectionEffectDefinition;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IVideoStabilizationEffectEnabledChangedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IVideoStabilizationEffect;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSourceError;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSourceOpenOperationCompletedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSourceStateChangedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSourceStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSourceStatics2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaBinder __x_ABI_CWindows_CMedia_CCore_CIMediaBinder;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaBinder;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaBindingEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 __x_ABI_CWindows_CMedia_CCore_CIMediaSource2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSource2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 __x_ABI_CWindows_CMedia_CCore_CIMediaSource3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSource3;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaCue_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaCue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaCue __x_ABI_CWindows_CMedia_CCore_CIMediaCue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaCue;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaCue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextCue __x_ABI_CWindows_CMedia_CCore_CITimedTextCue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextCue;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextRegion;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextStyle;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextSubformat;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextLine __x_ABI_CWindows_CMedia_CCore_CITimedTextLine;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextLine;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ISingleSelectMediaTrackList;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaTrack __x_ABI_CWindows_CMedia_CCore_CIMediaTrack;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaTrack;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedMetadataTrackError;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaCueEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedMetadataTrackFailedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CIDataCue_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIDataCue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIDataCue __x_ABI_CWindows_CMedia_CCore_CIDataCue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IDataCue;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIDataCue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedMetadataTrackFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedMetadataTrack;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextSourceResolveResultEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSource __x_ABI_CWindows_CMedia_CCore_CITimedTextSource;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextSource;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface ITimedTextSourceStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.Media.h"
#include "Windows.Media.Capture.h"
#include "Windows.Media.FaceAnalysis.h"
#include "Windows.Media.Playback.h"
#include "Windows.Media.Streaming.Adaptive.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class AudioStreamDescriptor;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IAudioStreamDescriptor;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3113 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3113 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3113_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a61a11cd-b32e-518b-a6a7-5472cbe00e83"))
IIterator<ABI::Windows::Media::Core::AudioStreamDescriptor*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioStreamDescriptor*, ABI::Windows::Media::Core::IAudioStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.AudioStreamDescriptor>"; }
};
typedef IIterator<ABI::Windows::Media::Core::AudioStreamDescriptor*> __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3114 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3114 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3114_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a3e2c972-a171-5b94-8389-e983ebc3f3b9"))
IIterable<ABI::Windows::Media::Core::AudioStreamDescriptor*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioStreamDescriptor*, ABI::Windows::Media::Core::IAudioStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.AudioStreamDescriptor>"; }
};
typedef IIterable<ABI::Windows::Media::Core::AudioStreamDescriptor*> __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class AudioTrack;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaTrack;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3115 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3115 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3115_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0003 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CAudioTrack_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CAudioTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("138064ef-8693-5303-8a75-eba494d06342"))
IIterator<ABI::Windows::Media::Core::AudioTrack*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioTrack*, ABI::Windows::Media::Core::IMediaTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.AudioTrack>"; }
};
typedef IIterator<ABI::Windows::Media::Core::AudioTrack*> __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CAudioTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CAudioTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3116 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3116 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3116_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CAudioTrack_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CAudioTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b3be50a8-9856-5656-ab6d-cd58f9de0a4f"))
IIterable<ABI::Windows::Media::Core::AudioTrack*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioTrack*, ABI::Windows::Media::Core::IMediaTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.AudioTrack>"; }
};
typedef IIterable<ABI::Windows::Media::Core::AudioTrack*> __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CAudioTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CAudioTrack_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaCue;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0004 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3117 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3117 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3117_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0005 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CIMediaCue_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CIMediaCue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1a594dc8-a64b-55ed-9b34-7b274e1d5c70"))
IIterator<ABI::Windows::Media::Core::IMediaCue*> : IIterator_impl<ABI::Windows::Media::Core::IMediaCue*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.IMediaCue>"; }
};
typedef IIterator<ABI::Windows::Media::Core::IMediaCue*> __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CIMediaCue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CIMediaCue_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3118 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3118 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3118_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0006 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CIMediaCue_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CIMediaCue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("737a2098-41bf-5d9f-a1d2-2f171c578b3c"))
IIterable<ABI::Windows::Media::Core::IMediaCue*> : IIterable_impl<ABI::Windows::Media::Core::IMediaCue*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.IMediaCue>"; }
};
typedef IIterable<ABI::Windows::Media::Core::IMediaCue*> __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CIMediaCue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CIMediaCue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MseSourceBuffer;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMseSourceBuffer;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0006 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3119 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3119 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3119_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0007 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("53076581-01a9-51b9-98cc-5265504cd352"))
IIterator<ABI::Windows::Media::Core::MseSourceBuffer*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MseSourceBuffer*, ABI::Windows::Media::Core::IMseSourceBuffer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.MseSourceBuffer>"; }
};
typedef IIterator<ABI::Windows::Media::Core::MseSourceBuffer*> __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0007 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3120 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3120 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3120_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0008 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5ca0da86-6307-558a-865f-3a1ef9fe56b3"))
IIterable<ABI::Windows::Media::Core::MseSourceBuffer*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MseSourceBuffer*, ABI::Windows::Media::Core::IMseSourceBuffer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.MseSourceBuffer>"; }
};
typedef IIterable<ABI::Windows::Media::Core::MseSourceBuffer*> __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
struct MseTimeRange;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0008 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3121 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3121 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3121_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("92a36852-fbb3-5b48-b4ec-01dda0972a5c"))
IIterator<struct ABI::Windows::Media::Core::MseTimeRange> : IIterator_impl<struct ABI::Windows::Media::Core::MseTimeRange> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.MseTimeRange>"; }
};
typedef IIterator<struct ABI::Windows::Media::Core::MseTimeRange> __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0009 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3122 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3122 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3122_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ed0c6e08-e22f-5ac2-ba14-e0ff1df3467f"))
IIterable<struct ABI::Windows::Media::Core::MseTimeRange> : IIterable_impl<struct ABI::Windows::Media::Core::MseTimeRange> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.MseTimeRange>"; }
};
typedef IIterable<struct ABI::Windows::Media::Core::MseTimeRange> __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedMetadataTrack;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ITimedMetadataTrack;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0010 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3123 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3123 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3123_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0011 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("859354e5-077b-5d53-b297-1a07b97f09c3"))
IIterator<ABI::Windows::Media::Core::TimedMetadataTrack*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.TimedMetadataTrack>"; }
};
typedef IIterator<ABI::Windows::Media::Core::TimedMetadataTrack*> __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0011 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3124 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3124 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3124_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("150a4454-03bb-5dd1-8153-6a600e851f71"))
IIterable<ABI::Windows::Media::Core::TimedMetadataTrack*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.TimedMetadataTrack>"; }
};
typedef IIterable<ABI::Windows::Media::Core::TimedMetadataTrack*> __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextLine;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ITimedTextLine;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0012 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0012_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3125 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3125 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3125_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0013 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("84c4fcac-86d8-5c74-a138-d9bf37b749ec"))
IIterator<ABI::Windows::Media::Core::TimedTextLine*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextLine*, ABI::Windows::Media::Core::ITimedTextLine*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.TimedTextLine>"; }
};
typedef IIterator<ABI::Windows::Media::Core::TimedTextLine*> __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0013 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3126 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3126 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3126_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0014 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("aec710ad-3bd8-5a59-ae77-e7fc46fb105b"))
IIterable<ABI::Windows::Media::Core::TimedTextLine*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextLine*, ABI::Windows::Media::Core::ITimedTextLine*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.TimedTextLine>"; }
};
typedef IIterable<ABI::Windows::Media::Core::TimedTextLine*> __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ITimedTextSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0014 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0014_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3127 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3127 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3127_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0015 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bdded7c0-5c73-57f5-9b08-652933586dd5"))
IIterator<ABI::Windows::Media::Core::TimedTextSource*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.TimedTextSource>"; }
};
typedef IIterator<ABI::Windows::Media::Core::TimedTextSource*> __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0015 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3128 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3128 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3128_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0016 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4fc57282-0edf-5d85-9d89-ddc2a5692c13"))
IIterable<ABI::Windows::Media::Core::TimedTextSource*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.TimedTextSource>"; }
};
typedef IIterable<ABI::Windows::Media::Core::TimedTextSource*> __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextSubformat;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ITimedTextSubformat;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0016 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0016_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3129 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3129 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3129_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0017 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("65105e50-865c-591d-9bf4-96237de2533f"))
IIterator<ABI::Windows::Media::Core::TimedTextSubformat*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSubformat*, ABI::Windows::Media::Core::ITimedTextSubformat*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.TimedTextSubformat>"; }
};
typedef IIterator<ABI::Windows::Media::Core::TimedTextSubformat*> __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0017 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3130 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3130 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3130_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0018 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cee3ae43-c93c-56f7-8c55-9024ded72c76"))
IIterable<ABI::Windows::Media::Core::TimedTextSubformat*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSubformat*, ABI::Windows::Media::Core::ITimedTextSubformat*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.TimedTextSubformat>"; }
};
typedef IIterable<ABI::Windows::Media::Core::TimedTextSubformat*> __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class VideoStreamDescriptor;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IVideoStreamDescriptor;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0018 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0018_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3131 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3131 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3131_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0019 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("da51ab3c-3c64-545c-a3f4-f9b055aaf7d9"))
IIterator<ABI::Windows::Media::Core::VideoStreamDescriptor*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoStreamDescriptor*, ABI::Windows::Media::Core::IVideoStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.VideoStreamDescriptor>"; }
};
typedef IIterator<ABI::Windows::Media::Core::VideoStreamDescriptor*> __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0019 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3132 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3132 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3132_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0020 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3acbf03c-0a79-5823-aaa9-d88bc3f8f594"))
IIterable<ABI::Windows::Media::Core::VideoStreamDescriptor*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoStreamDescriptor*, ABI::Windows::Media::Core::IVideoStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.VideoStreamDescriptor>"; }
};
typedef IIterable<ABI::Windows::Media::Core::VideoStreamDescriptor*> __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class VideoTrack;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0020 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0020_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3133 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3133 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3133_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0021 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CVideoTrack_USE
#define DEF___FIIterator_1_Windows__CMedia__CCore__CVideoTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a7c8d22c-b59d-5d7a-8d70-67f898a0b877"))
IIterator<ABI::Windows::Media::Core::VideoTrack*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoTrack*, ABI::Windows::Media::Core::IMediaTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Core.VideoTrack>"; }
};
typedef IIterator<ABI::Windows::Media::Core::VideoTrack*> __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_t;
#define ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CCore__CVideoTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CVideoTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0021 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3134 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3134 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3134_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0022 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CVideoTrack_USE
#define DEF___FIIterable_1_Windows__CMedia__CCore__CVideoTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("84413442-a2e3-5e0f-936d-bc40b0fb2dcd"))
IIterable<ABI::Windows::Media::Core::VideoTrack*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoTrack*, ABI::Windows::Media::Core::IMediaTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Core.VideoTrack>"; }
};
typedef IIterable<ABI::Windows::Media::Core::VideoTrack*> __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_t;
#define ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CCore__CVideoTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CVideoTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0022 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0022_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3135 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3135 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3135_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0023 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0313ae7a-2803-5d45-b5a1-a0fc5cd55e7c"))
IVectorView<ABI::Windows::Media::Core::TimedMetadataTrack*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.TimedMetadataTrack>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::TimedMetadataTrack*> __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0023 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3136 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3136 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3136_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0024 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c46d9e34-ea11-5bb2-9744-1617417ef016"))
IVector<ABI::Windows::Media::Core::TimedMetadataTrack*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Media.Core.TimedMetadataTrack>"; }
};
typedef IVector<ABI::Windows::Media::Core::TimedMetadataTrack*> __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_t;
#define ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0024 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0024_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3137 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3137 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3137_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0025 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#define DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bd1dc81c-23c4-5b4b-ac38-c5d34cdf34e4"))
VectorChangedEventHandler<ABI::Windows::Media::Core::TimedMetadataTrack*> : VectorChangedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.Media.Core.TimedMetadataTrack>"; }
};
typedef VectorChangedEventHandler<ABI::Windows::Media::Core::TimedMetadataTrack*> __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_t;
#define ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0025 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3138 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3138 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3138_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0026 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#define DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("98ebeba8-6659-5af2-be4f-32fdeede3b77"))
IObservableVector<ABI::Windows::Media::Core::TimedMetadataTrack*> : IObservableVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableVector`1<Windows.Media.Core.TimedMetadataTrack>"; }
};
typedef IObservableVector<ABI::Windows::Media::Core::TimedMetadataTrack*> __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_t;
#define ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_FWD_DEFINED__
#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack ABI::Windows::Foundation::Collections::__FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0026 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0026_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3139 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3139 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3139_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0027 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("edcd634e-b7e4-5ff8-b8c2-8493849b2c0d"))
IVectorView<ABI::Windows::Media::Core::TimedTextSource*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.TimedTextSource>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::TimedTextSource*> __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0027 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0027_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3140 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3140 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3140_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0028 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSource_USE
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSource_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d0a72378-5432-50bf-93c3-c5f35fc93517"))
IVector<ABI::Windows::Media::Core::TimedTextSource*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Media.Core.TimedTextSource>"; }
};
typedef IVector<ABI::Windows::Media::Core::TimedTextSource*> __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_t;
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CMedia__CCore__CTimedTextSource_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSource_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0028 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0028_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3141 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3141 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3141_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0029 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_USE
#define DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e12e6261-b198-56e0-9822-ba2d3bb6f8fe"))
VectorChangedEventHandler<ABI::Windows::Media::Core::TimedTextSource*> : VectorChangedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.Media.Core.TimedTextSource>"; }
};
typedef VectorChangedEventHandler<ABI::Windows::Media::Core::TimedTextSource*> __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_t;
#define ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0029 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0029_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3142 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3142 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3142_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0030 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_USE
#define DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("95e6c852-6e9c-50a9-8935-054320242945"))
IObservableVector<ABI::Windows::Media::Core::TimedTextSource*> : IObservableVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableVector`1<Windows.Media.Core.TimedTextSource>"; }
};
typedef IObservableVector<ABI::Windows::Media::Core::TimedTextSource*> __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_t;
#define ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_FWD_DEFINED__
#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource ABI::Windows::Foundation::Collections::__FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0030 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0030_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3143 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3143 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3143_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0031 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("340f4fed-1288-5b89-be7c-c355fe1ce4d9"))
IVectorView<ABI::Windows::Media::Core::AudioStreamDescriptor*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioStreamDescriptor*, ABI::Windows::Media::Core::IAudioStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.AudioStreamDescriptor>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::AudioStreamDescriptor*> __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0031 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0031_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3144 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3144 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3144_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0032 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e71ffa4a-14a7-5068-891c-6e717af8bf8d"))
IVectorView<ABI::Windows::Media::Core::AudioTrack*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioTrack*, ABI::Windows::Media::Core::IMediaTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.AudioTrack>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::AudioTrack*> __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0032 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0032_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3145 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3145 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3145_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0033 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("996421a1-625c-5d92-ad68-8b3911d294b0"))
IVectorView<ABI::Windows::Media::Core::IMediaCue*> : IVectorView_impl<ABI::Windows::Media::Core::IMediaCue*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.IMediaCue>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::IMediaCue*> __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0033 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0033_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3146 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3146 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3146_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0034 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("85318263-1360-5c78-b0ad-52d6b45b19f3"))
IVectorView<ABI::Windows::Media::Core::MseSourceBuffer*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MseSourceBuffer*, ABI::Windows::Media::Core::IMseSourceBuffer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.MseSourceBuffer>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::MseSourceBuffer*> __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0034 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0034_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3147 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3147 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3147_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0035 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("87ff1dd1-7ec3-5bc5-b558-0425d806bf4b"))
IVectorView<struct ABI::Windows::Media::Core::MseTimeRange> : IVectorView_impl<struct ABI::Windows::Media::Core::MseTimeRange> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.MseTimeRange>"; }
};
typedef IVectorView<struct ABI::Windows::Media::Core::MseTimeRange> __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0035 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0035_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3148 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3148 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3148_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0036 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9532b5cc-73fc-5e3a-8531-794c30d7a1ae"))
IVectorView<ABI::Windows::Media::Core::TimedTextLine*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextLine*, ABI::Windows::Media::Core::ITimedTextLine*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.TimedTextLine>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::TimedTextLine*> __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0036 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0036_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3149 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3149 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3149_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0037 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("411a0e26-42e2-5e65-b9c4-980c4c3f31f7"))
IVectorView<ABI::Windows::Media::Core::TimedTextSubformat*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSubformat*, ABI::Windows::Media::Core::ITimedTextSubformat*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.TimedTextSubformat>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::TimedTextSubformat*> __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0037 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0037_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3150 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3150 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3150_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0038 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e965c8af-d211-52f0-838b-4637469da7af"))
IVectorView<ABI::Windows::Media::Core::VideoStreamDescriptor*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoStreamDescriptor*, ABI::Windows::Media::Core::IVideoStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.VideoStreamDescriptor>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::VideoStreamDescriptor*> __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0038 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0038_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3151 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3151 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3151_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0039 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_USE
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("200c6224-0b43-54fb-995f-fd8688bf24de"))
IVectorView<ABI::Windows::Media::Core::VideoTrack*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoTrack*, ABI::Windows::Media::Core::IMediaTrack*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Core.VideoTrack>"; }
};
typedef IVectorView<ABI::Windows::Media::Core::VideoTrack*> __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_t;
#define ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0039 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0039_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3152 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3152 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3152_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0040 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#define DEF___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("45afc129-988c-5f1e-9c17-6e34b917cd1b"))
IVector<ABI::Windows::Media::Core::AudioStreamDescriptor*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::AudioStreamDescriptor*, ABI::Windows::Media::Core::IAudioStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Media.Core.AudioStreamDescriptor>"; }
};
typedef IVector<ABI::Windows::Media::Core::AudioStreamDescriptor*> __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t;
#define ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_FWD_DEFINED__
#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0040 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0040_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3153 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3153 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3153_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0041 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextLine_USE
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextLine_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("284f0441-e96d-58ad-9188-7bf46514dfcc"))
IVector<ABI::Windows::Media::Core::TimedTextLine*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextLine*, ABI::Windows::Media::Core::ITimedTextLine*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Media.Core.TimedTextLine>"; }
};
typedef IVector<ABI::Windows::Media::Core::TimedTextLine*> __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_t;
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_FWD_DEFINED__
#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CMedia__CCore__CTimedTextLine_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextLine_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0041 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0041_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3154 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3154 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3154_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0042 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8786f392-f369-57ea-a16e-75870246a8c9"))
IVector<ABI::Windows::Media::Core::TimedTextSubformat*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSubformat*, ABI::Windows::Media::Core::ITimedTextSubformat*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Media.Core.TimedTextSubformat>"; }
};
typedef IVector<ABI::Windows::Media::Core::TimedTextSubformat*> __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_t;
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_FWD_DEFINED__
#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0042 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0042_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3155 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3155 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3155_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0043 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#define DEF___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1fb064b3-636c-5988-9c97-02a9b76150f6"))
IVector<ABI::Windows::Media::Core::VideoStreamDescriptor*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoStreamDescriptor*, ABI::Windows::Media::Core::IVideoStreamDescriptor*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Media.Core.VideoStreamDescriptor>"; }
};
typedef IVector<ABI::Windows::Media::Core::VideoStreamDescriptor*> __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t;
#define ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_FWD_DEFINED__
#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSample;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaStreamSample;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0043 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0043_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3156 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3156 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3156_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0044 */
/* [local] */ 

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("df7aacc9-a86c-5c7d-bf98-cc371c97c67b"))
IAsyncOperationCompletedHandler<ABI::Windows::Media::Core::MediaStreamSample*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSample*, ABI::Windows::Media::Core::IMediaStreamSample*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Media.Core.MediaStreamSample>"; }
};
typedef IAsyncOperationCompletedHandler<ABI::Windows::Media::Core::MediaStreamSample*> __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_t;
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__
#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0044 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0044_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3157 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3157 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3157_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0045 */
/* [local] */ 

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_USE
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3cdc5e86-4ada-5ef7-967a-e137a4621907"))
IAsyncOperation<ABI::Windows::Media::Core::MediaStreamSample*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSample*, ABI::Windows::Media::Core::IMediaStreamSample*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IAsyncOperation`1<Windows.Media.Core.MediaStreamSample>"; }
};
typedef IAsyncOperation<ABI::Windows::Media::Core::MediaStreamSample*> __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_t;
#define ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_FWD_DEFINED__
#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class FaceDetectionEffect;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IFaceDetectionEffect;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class FaceDetectedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IFaceDetectedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0045 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0045_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3158 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3158 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3158_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0046 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("01f0d7a6-f9bd-5bc1-aaa9-dff396f72f87"))
ITypedEventHandler<ABI::Windows::Media::Core::FaceDetectionEffect*,ABI::Windows::Media::Core::FaceDetectedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::FaceDetectionEffect*, ABI::Windows::Media::Core::IFaceDetectionEffect*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::FaceDetectedEventArgs*, ABI::Windows::Media::Core::IFaceDetectedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.FaceDetectionEffect, Windows.Media.Core.FaceDetectedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::FaceDetectionEffect*,ABI::Windows::Media::Core::FaceDetectedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ISingleSelectMediaTrackList;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

interface IInspectable;


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0046 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0046_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3159 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3159 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3159_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0047 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("21eb6e39-728a-56a9-8dce-062ba4c81bf5"))
ITypedEventHandler<ABI::Windows::Media::Core::ISingleSelectMediaTrackList*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Media::Core::ISingleSelectMediaTrackList*,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.ISingleSelectMediaTrackList, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::ISingleSelectMediaTrackList*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaBinder;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaBinder;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaBindingEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaBindingEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0047 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0047_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3160 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3160 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3160_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0048 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5b133719-ee98-59b2-b432-1c9a5a56ab05"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaBinder*,ABI::Windows::Media::Core::MediaBindingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaBinder*, ABI::Windows::Media::Core::IMediaBinder*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaBindingEventArgs*, ABI::Windows::Media::Core::IMediaBindingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaBinder, Windows.Media.Core.MediaBindingEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaBinder*,ABI::Windows::Media::Core::MediaBindingEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0048 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0048_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3161 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3161 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3161_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0049 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3f3b10e2-b2e9-55c6-abb3-4a258072ebb9"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaBindingEventArgs*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaBindingEventArgs*, ABI::Windows::Media::Core::IMediaBindingEventArgs*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaBindingEventArgs, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaBindingEventArgs*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaSource2;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaSourceOpenOperationCompletedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaSourceOpenOperationCompletedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0049 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0049_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3162 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3162 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3162_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0050 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("425d53e3-fba6-5ea3-b713-db4d70787436"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaSource*,ABI::Windows::Media::Core::MediaSourceOpenOperationCompletedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaSource*, ABI::Windows::Media::Core::IMediaSource2*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaSourceOpenOperationCompletedEventArgs*, ABI::Windows::Media::Core::IMediaSourceOpenOperationCompletedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaSource, Windows.Media.Core.MediaSourceOpenOperationCompletedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaSource*,ABI::Windows::Media::Core::MediaSourceOpenOperationCompletedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaSourceStateChangedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaSourceStateChangedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0050 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0050_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3163 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3163 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3163_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0051 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2274d3a6-1ba0-5230-bb86-de90058b6403"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaSource*,ABI::Windows::Media::Core::MediaSourceStateChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaSource*, ABI::Windows::Media::Core::IMediaSource2*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaSourceStateChangedEventArgs*, ABI::Windows::Media::Core::IMediaSourceStateChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaSource, Windows.Media.Core.MediaSourceStateChangedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaSource*,ABI::Windows::Media::Core::MediaSourceStateChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0051 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0051_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3164 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3164 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3164_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0052 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d4dc5ef1-c1cb-5c32-803d-f2f9a7ad9916"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSample*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSample*, ABI::Windows::Media::Core::IMediaStreamSample*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaStreamSample, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSample*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaStreamSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0052 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0052_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3165 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3165 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3165_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0053 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6fd6ded7-421b-5ef5-8bf5-edea45401665"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSource*, ABI::Windows::Media::Core::IMediaStreamSource*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaStreamSource, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceClosedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaStreamSourceClosedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0053 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0053_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3166 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3166 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3166_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0054 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("238cc251-d0b8-5a34-81d4-0dd1f936a20d"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceClosedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSource*, ABI::Windows::Media::Core::IMediaStreamSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSourceClosedEventArgs*, ABI::Windows::Media::Core::IMediaStreamSourceClosedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaStreamSource, Windows.Media.Core.MediaStreamSourceClosedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceClosedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceSampleRequestedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaStreamSourceSampleRequestedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0054 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0054_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3167 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3167 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3167_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0055 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4f1a3ae3-b8b7-5689-901d-b0b623f5a172"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceSampleRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSource*, ABI::Windows::Media::Core::IMediaStreamSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSourceSampleRequestedEventArgs*, ABI::Windows::Media::Core::IMediaStreamSourceSampleRequestedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaStreamSource, Windows.Media.Core.MediaStreamSourceSampleRequestedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceSampleRequestedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceStartingEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaStreamSourceStartingEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0055 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0055_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3168 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3168 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3168_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0056 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a93d5846-c660-586e-b6b5-a52fb81f9240"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceStartingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSource*, ABI::Windows::Media::Core::IMediaStreamSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSourceStartingEventArgs*, ABI::Windows::Media::Core::IMediaStreamSourceStartingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaStreamSource, Windows.Media.Core.MediaStreamSourceStartingEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceStartingEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceSwitchStreamsRequestedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaStreamSourceSwitchStreamsRequestedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0056 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0056_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3169 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3169 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3169_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0057 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("452b2e4a-5511-5b3c-8a8e-ee659576a4c1"))
ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceSwitchStreamsRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSource*, ABI::Windows::Media::Core::IMediaStreamSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaStreamSourceSwitchStreamsRequestedEventArgs*, ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequestedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MediaStreamSource, Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MediaStreamSource*,ABI::Windows::Media::Core::MediaStreamSourceSwitchStreamsRequestedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0057 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0057_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3170 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3170 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3170_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0058 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("187fd3d7-bb9d-541a-94fd-43c31dd84a67"))
ITypedEventHandler<ABI::Windows::Media::Core::MseSourceBuffer*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MseSourceBuffer*, ABI::Windows::Media::Core::IMseSourceBuffer*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MseSourceBuffer, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MseSourceBuffer*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MseSourceBufferList;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMseSourceBufferList;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0058 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0058_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3171 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3171 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3171_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0059 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0ff01695-fbb2-5e95-8ec7-da17d8e99f16"))
ITypedEventHandler<ABI::Windows::Media::Core::MseSourceBufferList*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MseSourceBufferList*, ABI::Windows::Media::Core::IMseSourceBufferList*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MseSourceBufferList, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MseSourceBufferList*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MseStreamSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMseStreamSource;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0059 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0059_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3172 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3172 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3172_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0060 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("724bf4ef-de7a-5dbd-815e-522a87bc3344"))
ITypedEventHandler<ABI::Windows::Media::Core::MseStreamSource*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MseStreamSource*, ABI::Windows::Media::Core::IMseStreamSource*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.MseStreamSource, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::MseStreamSource*,IInspectable*> __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class SceneAnalysisEffect;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ISceneAnalysisEffect;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class SceneAnalyzedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ISceneAnalyzedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0060 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0060_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3173 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3173 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3173_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0061 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("48630f8c-dbde-569e-a0c8-7588d1d2bd03"))
ITypedEventHandler<ABI::Windows::Media::Core::SceneAnalysisEffect*,ABI::Windows::Media::Core::SceneAnalyzedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::SceneAnalysisEffect*, ABI::Windows::Media::Core::ISceneAnalysisEffect*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::SceneAnalyzedEventArgs*, ABI::Windows::Media::Core::ISceneAnalyzedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.SceneAnalysisEffect, Windows.Media.Core.SceneAnalyzedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::SceneAnalysisEffect*,ABI::Windows::Media::Core::SceneAnalyzedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaCueEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IMediaCueEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0061 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0061_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3174 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3174 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3174_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0062 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4aac9411-c355-5c95-8c78-5a0f5ca1a54d"))
ITypedEventHandler<ABI::Windows::Media::Core::TimedMetadataTrack*,ABI::Windows::Media::Core::MediaCueEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::MediaCueEventArgs*, ABI::Windows::Media::Core::IMediaCueEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.TimedMetadataTrack, Windows.Media.Core.MediaCueEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::TimedMetadataTrack*,ABI::Windows::Media::Core::MediaCueEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedMetadataTrackFailedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ITimedMetadataTrackFailedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0062 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0062_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3175 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3175 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3175_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0063 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8dc73162-255b-532e-b0c7-9a6d70b4bb9e"))
ITypedEventHandler<ABI::Windows::Media::Core::TimedMetadataTrack*,ABI::Windows::Media::Core::TimedMetadataTrackFailedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrack*, ABI::Windows::Media::Core::ITimedMetadataTrack*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedMetadataTrackFailedEventArgs*, ABI::Windows::Media::Core::ITimedMetadataTrackFailedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.TimedMetadataTrack, Windows.Media.Core.TimedMetadataTrackFailedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::TimedMetadataTrack*,ABI::Windows::Media::Core::TimedMetadataTrackFailedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextSourceResolveResultEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface ITimedTextSourceResolveResultEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0063 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0063_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3176 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3176 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3176_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0064 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0220562a-5de4-5ad2-ac20-6cd26f111745"))
ITypedEventHandler<ABI::Windows::Media::Core::TimedTextSource*,ABI::Windows::Media::Core::TimedTextSourceResolveResultEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSource*, ABI::Windows::Media::Core::ITimedTextSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::TimedTextSourceResolveResultEventArgs*, ABI::Windows::Media::Core::ITimedTextSourceResolveResultEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.TimedTextSource, Windows.Media.Core.TimedTextSourceResolveResultEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::TimedTextSource*,ABI::Windows::Media::Core::TimedTextSourceResolveResultEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class VideoStabilizationEffect;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IVideoStabilizationEffect;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class VideoStabilizationEffectEnabledChangedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
interface IVideoStabilizationEffectEnabledChangedEventArgs;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0064 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0064_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3177 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3177 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3177_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0065 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("897592e2-bfcc-5f16-8834-2c9c4f20559b"))
ITypedEventHandler<ABI::Windows::Media::Core::VideoStabilizationEffect*,ABI::Windows::Media::Core::VideoStabilizationEffectEnabledChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoStabilizationEffect*, ABI::Windows::Media::Core::IVideoStabilizationEffect*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Core::VideoStabilizationEffectEnabledChangedEventArgs*, ABI::Windows::Media::Core::IVideoStabilizationEffectEnabledChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.Media.Core.VideoStabilizationEffect, Windows.Media.Core.VideoStabilizationEffectEnabledChangedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::Media::Core::VideoStabilizationEffect*,ABI::Windows::Media::Core::VideoStabilizationEffectEnabledChangedEventArgs*> __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0065 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0065_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3178 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3178 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3178_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0066 */
/* [local] */ 

#ifndef DEF___FIKeyValuePair_2_GUID_IInspectable_USE
#define DEF___FIKeyValuePair_2_GUID_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3bda1540-d089-5a1a-8f0d-94eba8068e58"))
IKeyValuePair<GUID,IInspectable*> : IKeyValuePair_impl<GUID,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IKeyValuePair`2<Guid, Object>"; }
};
typedef IKeyValuePair<GUID,IInspectable*> __FIKeyValuePair_2_GUID_IInspectable_t;
#define ____FIKeyValuePair_2_GUID_IInspectable_FWD_DEFINED__
#define __FIKeyValuePair_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_GUID_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIKeyValuePair_2_GUID_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0066 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0066_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3179 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3179 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3179_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0067 */
/* [local] */ 

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4f25059a-0b9a-5f25-9b9e-4b9f1d22ff65"))
IIterator<__FIKeyValuePair_2_GUID_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_GUID_IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, Object>>"; }
};
typedef IIterator<__FIKeyValuePair_2_GUID_IInspectable*> __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_t;
#define ____FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_FWD_DEFINED__
#define __FIIterator_1___FIKeyValuePair_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_GUID_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0067 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0067_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3180 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3180 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3180_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0068 */
/* [local] */ 

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f3b20528-e3b3-5331-b2d0-0c2623aee785"))
IIterable<__FIKeyValuePair_2_GUID_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_GUID_IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, Object>>"; }
};
typedef IIterable<__FIKeyValuePair_2_GUID_IInspectable*> __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_t;
#define ____FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_FWD_DEFINED__
#define __FIIterable_1___FIKeyValuePair_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_GUID_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0068 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0068_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3181 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3181 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3181_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0069 */
/* [local] */ 

#ifndef DEF___FIMapView_2_GUID_IInspectable_USE
#define DEF___FIMapView_2_GUID_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e4d2c732-bbc1-5ef4-869f-5007ceb55f6e"))
IMapView<GUID,IInspectable*> : IMapView_impl<GUID,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMapView`2<Guid, Object>"; }
};
typedef IMapView<GUID,IInspectable*> __FIMapView_2_GUID_IInspectable_t;
#define ____FIMapView_2_GUID_IInspectable_FWD_DEFINED__
#define __FIMapView_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_GUID_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMapView_2_GUID_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0069 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0069_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3182 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3182 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3182_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0070 */
/* [local] */ 

#ifndef DEF___FIMap_2_GUID_IInspectable_USE
#define DEF___FIMap_2_GUID_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5ee3189c-7dbf-5998-ad07-5414fb82567c"))
IMap<GUID,IInspectable*> : IMap_impl<GUID,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMap`2<Guid, Object>"; }
};
typedef IMap<GUID,IInspectable*> __FIMap_2_GUID_IInspectable_t;
#define ____FIMap_2_GUID_IInspectable_FWD_DEFINED__
#define __FIMap_2_GUID_IInspectable ABI::Windows::Foundation::Collections::__FIMap_2_GUID_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMap_2_GUID_IInspectable_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct TimeSpan;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0070 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0070_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3183 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3183 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3183_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0071 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#define DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("604d0c4c-91de-5c2a-935f-362f13eaf800"))
IReference<struct ABI::Windows::Foundation::TimeSpan> : IReference_impl<struct ABI::Windows::Foundation::TimeSpan> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>"; }
};
typedef IReference<struct ABI::Windows::Foundation::TimeSpan> __FIReference_1_Windows__CFoundation__CTimeSpan_t;
#define ____FIReference_1_Windows__CFoundation__CTimeSpan_FWD_DEFINED__
#define __FIReference_1_Windows__CFoundation__CTimeSpan ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CTimeSpan_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Devices {
namespace Core {
class FrameController;
} /*Core*/
} /*Devices*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Devices {
namespace Core {
interface IFrameController;
} /*Core*/
} /*Devices*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0071 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0071_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3184 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3184 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3184_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0072 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController_USE
#define DEF___FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1440dc88-63ff-5a01-bb93-390c76742488"))
IIterator<ABI::Windows::Media::Devices::Core::FrameController*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Devices::Core::FrameController*, ABI::Windows::Media::Devices::Core::IFrameController*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.Devices.Core.FrameController>"; }
};
typedef IIterator<ABI::Windows::Media::Devices::Core::FrameController*> __FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController_t;
#define ____FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CDevices__CCore__CFrameController_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0072 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0072_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3185 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3185 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3185_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0073 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController_USE
#define DEF___FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bd8eeadc-2dd9-5ad8-ac5d-f3b13b94b9c2"))
IIterable<ABI::Windows::Media::Devices::Core::FrameController*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Devices::Core::FrameController*, ABI::Windows::Media::Devices::Core::IFrameController*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.Devices.Core.FrameController>"; }
};
typedef IIterable<ABI::Windows::Media::Devices::Core::FrameController*> __FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController_t;
#define ____FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CDevices__CCore__CFrameController_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0073 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0073_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3186 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3186 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3186_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0074 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController_USE
#define DEF___FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fcd6a2a3-b6ff-5572-912b-99ebaf95165d"))
IVectorView<ABI::Windows::Media::Devices::Core::FrameController*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::Devices::Core::FrameController*, ABI::Windows::Media::Devices::Core::IFrameController*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.Devices.Core.FrameController>"; }
};
typedef IVectorView<ABI::Windows::Media::Devices::Core::FrameController*> __FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController_t;
#define ____FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace FaceAnalysis {
class DetectedFace;
} /*FaceAnalysis*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace FaceAnalysis {
interface IDetectedFace;
} /*FaceAnalysis*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0074 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0074_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3187 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3187 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3187_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0075 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE
#define DEF___FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a0cf090e-0340-531f-898b-c21eafb9f4ae"))
IIterator<ABI::Windows::Media::FaceAnalysis::DetectedFace*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::FaceAnalysis::DetectedFace*, ABI::Windows::Media::FaceAnalysis::IDetectedFace*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Media.FaceAnalysis.DetectedFace>"; }
};
typedef IIterator<ABI::Windows::Media::FaceAnalysis::DetectedFace*> __FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_t;
#define ____FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_FWD_DEFINED__
#define __FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0075 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0075_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3188 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3188 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3188_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0076 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE
#define DEF___FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("25347323-3556-5cbb-9855-2b5856437f4d"))
IIterable<ABI::Windows::Media::FaceAnalysis::DetectedFace*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::FaceAnalysis::DetectedFace*, ABI::Windows::Media::FaceAnalysis::IDetectedFace*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Media.FaceAnalysis.DetectedFace>"; }
};
typedef IIterable<ABI::Windows::Media::FaceAnalysis::DetectedFace*> __FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_t;
#define ____FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_FWD_DEFINED__
#define __FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0076 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0076_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3189 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3189 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3189_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3189_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0077 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE
#define DEF___FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("39ef4411-0618-5b8d-8ea2-81c637f823f8"))
IVectorView<ABI::Windows::Media::FaceAnalysis::DetectedFace*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Media::FaceAnalysis::DetectedFace*, ABI::Windows::Media::FaceAnalysis::IDetectedFace*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Media.FaceAnalysis.DetectedFace>"; }
};
typedef IVectorView<ABI::Windows::Media::FaceAnalysis::DetectedFace*> __FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_t;
#define ____FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_FWD_DEFINED__
#define __FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0077 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0077_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3190 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3190 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3190_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3190_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0078 */
/* [local] */ 

#ifndef DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("09335560-6c6b-5a26-9348-97b781132b20"))
IKeyValuePair<HSTRING,IInspectable*> : IKeyValuePair_impl<HSTRING,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Object>"; }
};
typedef IKeyValuePair<HSTRING,IInspectable*> __FIKeyValuePair_2_HSTRING_IInspectable_t;
#define ____FIKeyValuePair_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0078 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0078_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3191 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3191 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3191_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3191_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0079 */
/* [local] */ 

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5db5fa32-707c-5849-a06b-91c8eb9d10e8"))
IIterator<__FIKeyValuePair_2_HSTRING_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>"; }
};
typedef IIterator<__FIKeyValuePair_2_HSTRING_IInspectable*> __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t;
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0079 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0079_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3192 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3192 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3192_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3192_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0080 */
/* [local] */ 

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe2f3d47-5d47-5499-8374-430c7cda0204"))
IIterable<__FIKeyValuePair_2_HSTRING_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>"; }
};
typedef IIterable<__FIKeyValuePair_2_HSTRING_IInspectable*> __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t;
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0080 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0080_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3193 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3193 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3193_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3193_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0081 */
/* [local] */ 

#ifndef DEF___FIMapView_2_HSTRING_IInspectable_USE
#define DEF___FIMapView_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb78502a-f79d-54fa-92c9-90c5039fdf7e"))
IMapView<HSTRING,IInspectable*> : IMapView_impl<HSTRING,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMapView`2<String, Object>"; }
};
typedef IMapView<HSTRING,IInspectable*> __FIMapView_2_HSTRING_IInspectable_t;
#define ____FIMapView_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FIMapView_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMapView_2_HSTRING_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0081 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0081_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3194 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3194 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3194_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3194_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0082 */
/* [local] */ 

#ifndef DEF___FIMap_2_HSTRING_IInspectable_USE
#define DEF___FIMap_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1b0d3570-0877-5ec2-8a2c-3b9539506aca"))
IMap<HSTRING,IInspectable*> : IMap_impl<HSTRING,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMap`2<String, Object>"; }
};
typedef IMap<HSTRING,IInspectable*> __FIMap_2_HSTRING_IInspectable_t;
#define ____FIMap_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FIMap_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMap_2_HSTRING_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0082 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0082_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3195 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3195 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3195_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3195_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0083 */
/* [local] */ 

#ifndef DEF___FIMapChangedEventArgs_1_HSTRING_USE
#define DEF___FIMapChangedEventArgs_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60141efb-f2f9-5377-96fd-f8c60d9558b5"))
IMapChangedEventArgs<HSTRING> : IMapChangedEventArgs_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMapChangedEventArgs`1<String>"; }
};
typedef IMapChangedEventArgs<HSTRING> __FIMapChangedEventArgs_1_HSTRING_t;
#define ____FIMapChangedEventArgs_1_HSTRING_FWD_DEFINED__
#define __FIMapChangedEventArgs_1_HSTRING ABI::Windows::Foundation::Collections::__FIMapChangedEventArgs_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMapChangedEventArgs_1_HSTRING_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0083 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0083_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3196 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3196 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3196_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3196_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0084 */
/* [local] */ 

#ifndef DEF___FMapChangedEventHandler_2_HSTRING_IInspectable_USE
#define DEF___FMapChangedEventHandler_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("24f981e5-ddca-538d-aada-a59906084cf1"))
MapChangedEventHandler<HSTRING,IInspectable*> : MapChangedEventHandler_impl<HSTRING,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.MapChangedEventHandler`2<String, Object>"; }
};
typedef MapChangedEventHandler<HSTRING,IInspectable*> __FMapChangedEventHandler_2_HSTRING_IInspectable_t;
#define ____FMapChangedEventHandler_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FMapChangedEventHandler_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FMapChangedEventHandler_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FMapChangedEventHandler_2_HSTRING_IInspectable_USE */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0084 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0084_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3197 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3197 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3197_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3197_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0085 */
/* [local] */ 

#ifndef DEF___FIObservableMap_2_HSTRING_IInspectable_USE
#define DEF___FIObservableMap_2_HSTRING_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("236aac9d-fb12-5c4d-a41c-9e445fb4d7ec"))
IObservableMap<HSTRING,IInspectable*> : IObservableMap_impl<HSTRING,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableMap`2<String, Object>"; }
};
typedef IObservableMap<HSTRING,IInspectable*> __FIObservableMap_2_HSTRING_IInspectable_t;
#define ____FIObservableMap_2_HSTRING_IInspectable_FWD_DEFINED__
#define __FIObservableMap_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIObservableMap_2_HSTRING_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableMap_2_HSTRING_IInspectable_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Emedia_h__)
#include <Windows.Media.h>
#endif // !defined(__windows2Emedia_h__)
#if !defined(__windows2Emedia2Ecapture_h__)
#include <Windows.Media.Capture.h>
#endif // !defined(__windows2Emedia2Ecapture_h__)
#if !defined(__windows2Emedia2Edevices_h__)
#include <Windows.Media.Devices.h>
#endif // !defined(__windows2Emedia2Edevices_h__)
#if !defined(__windows2Emedia2Edevices2Ecore_h__)
#include <Windows.Media.Devices.Core.h>
#endif // !defined(__windows2Emedia2Edevices2Ecore_h__)
#if !defined(__windows2Emedia2Eeffects_h__)
#include <Windows.Media.Effects.h>
#endif // !defined(__windows2Emedia2Eeffects_h__)
#if !defined(__windows2Emedia2Efaceanalysis_h__)
#include <Windows.Media.FaceAnalysis.h>
#endif // !defined(__windows2Emedia2Efaceanalysis_h__)
#if !defined(__windows2Emedia2Emediaproperties_h__)
#include <Windows.Media.MediaProperties.h>
#endif // !defined(__windows2Emedia2Emediaproperties_h__)
#if !defined(__windows2Emedia2Eplayback_h__)
#include <Windows.Media.Playback.h>
#endif // !defined(__windows2Emedia2Eplayback_h__)
#if !defined(__windows2Emedia2Eprotection_h__)
#include <Windows.Media.Protection.h>
#endif // !defined(__windows2Emedia2Eprotection_h__)
#if !defined(__windows2Emedia2Estreaming2Eadaptive_h__)
#include <Windows.Media.Streaming.Adaptive.h>
#endif // !defined(__windows2Emedia2Estreaming2Eadaptive_h__)
#if !defined(__windows2Estorage_h__)
#include <Windows.Storage.h>
#endif // !defined(__windows2Estorage_h__)
#if !defined(__windows2Estorage2Efileproperties_h__)
#include <Windows.Storage.FileProperties.h>
#endif // !defined(__windows2Estorage2Efileproperties_h__)
#if !defined(__windows2Estorage2Estreams_h__)
#include <Windows.Storage.Streams.h>
#endif // !defined(__windows2Estorage2Estreams_h__)
#if !defined(__windows2Eui_h__)
#include <Windows.UI.h>
#endif // !defined(__windows2Eui_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
namespace Collections {
class ValueSet;
} /*Collections*/
} /*Foundation*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
class Deferral;
} /*Foundation*/
} /*Windows*/
}
#endif


#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
class Uri;
} /*Foundation*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Capture {
class CapturedFrameControlValues;
} /*Capture*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Capture {
class VideoStreamConfiguration;
} /*Capture*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Devices {
class VideoDeviceController;
} /*Devices*/
} /*Media*/
} /*Windows*/
}
#endif




#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace MediaProperties {
class AudioEncodingProperties;
} /*MediaProperties*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace MediaProperties {
class VideoEncodingProperties;
} /*MediaProperties*/
} /*Media*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Protection {
class MediaProtectionManager;
} /*Protection*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Streaming {
namespace Adaptive {
class AdaptiveMediaSource;
} /*Adaptive*/
} /*Streaming*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Storage {
namespace FileProperties {
class MusicProperties;
} /*FileProperties*/
} /*Storage*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Storage {
namespace FileProperties {
class VideoProperties;
} /*FileProperties*/
} /*Storage*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Storage {
namespace Streams {
class Buffer;
} /*Streams*/
} /*Storage*/
} /*Windows*/
}
#endif




#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceClosedReason __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceClosedReason;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceErrorStatus __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceErrorStatus;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMseReadyState __x_ABI_CWindows_CMedia_CCore_CMseReadyState;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMseEndOfStreamStatus __x_ABI_CWindows_CMedia_CCore_CMseEndOfStreamStatus;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMseAppendMode __x_ABI_CWindows_CMedia_CCore_CMseAppendMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CFaceDetectionMode __x_ABI_CWindows_CMedia_CCore_CFaceDetectionMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CVideoStabilizationEffectEnabledChangedReason __x_ABI_CWindows_CMedia_CCore_CVideoStabilizationEffectEnabledChangedReason;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMediaTrackKind __x_ABI_CWindows_CMedia_CCore_CMediaTrackKind;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedMetadataKind __x_ABI_CWindows_CMedia_CCore_CTimedMetadataKind;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedMetadataTrackErrorCode __x_ABI_CWindows_CMedia_CCore_CTimedMetadataTrackErrorCode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextScrollMode __x_ABI_CWindows_CMedia_CCore_CTimedTextScrollMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextWritingMode __x_ABI_CWindows_CMedia_CCore_CTimedTextWritingMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextDisplayAlignment __x_ABI_CWindows_CMedia_CCore_CTimedTextDisplayAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextLineAlignment __x_ABI_CWindows_CMedia_CCore_CTimedTextLineAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextWrapping __x_ABI_CWindows_CMedia_CCore_CTimedTextWrapping;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextWeight __x_ABI_CWindows_CMedia_CCore_CTimedTextWeight;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CTimedTextFlowDirection __x_ABI_CWindows_CMedia_CCore_CTimedTextFlowDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CCore_CMediaSourceState __x_ABI_CWindows_CMedia_CCore_CMediaSourceState;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange __x_ABI_CWindows_CMedia_CCore_CMseTimeRange;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CMedia_CCore_CTimedTextPadding __x_ABI_CWindows_CMedia_CCore_CTimedTextPadding;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CMedia_CCore_CTimedTextSize __x_ABI_CWindows_CMedia_CCore_CTimedTextSize;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CMedia_CCore_CTimedTextPoint __x_ABI_CWindows_CMedia_CCore_CTimedTextPoint;

#endif































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSamplePropertySet;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSampleProtectionProperties;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceClosedRequest;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceStartingRequestDeferral;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceStartingRequest;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceSampleRequestDeferral;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceSampleRequest;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceSwitchStreamsRequestDeferral;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaStreamSourceSwitchStreamsRequest;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class HighDynamicRangeControl;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class HighDynamicRangeOutput;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class SceneAnalysisEffectFrame;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class SceneAnalysisEffectDefinition;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class FaceDetectionEffectFrame;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class FaceDetectionEffectDefinition;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class VideoStabilizationEffectDefinition;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class MediaSourceError;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextRegion;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextStyle;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedMetadataTrackError;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class TimedTextCue;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Core {
class DataCue;
} /*Core*/
} /*Media*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0085 */
/* [local] */ 





#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif




















#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            
            typedef struct Color Color;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MediaStreamSourceClosedReason MediaStreamSourceClosedReason;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MediaStreamSourceErrorStatus MediaStreamSourceErrorStatus;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MseReadyState MseReadyState;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MseEndOfStreamStatus MseEndOfStreamStatus;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MseAppendMode MseAppendMode;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum FaceDetectionMode FaceDetectionMode;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum VideoStabilizationEffectEnabledChangedReason VideoStabilizationEffectEnabledChangedReason;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MediaTrackKind MediaTrackKind;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedMetadataKind TimedMetadataKind;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedMetadataTrackErrorCode TimedMetadataTrackErrorCode;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextScrollMode TimedTextScrollMode;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextUnit TimedTextUnit;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextWritingMode TimedTextWritingMode;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextDisplayAlignment TimedTextDisplayAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextLineAlignment TimedTextLineAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextWrapping TimedTextWrapping;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextWeight TimedTextWeight;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum TimedTextFlowDirection TimedTextFlowDirection;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef enum MediaSourceState MediaSourceState;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef struct MseTimeRange MseTimeRange;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef struct TimedTextPadding TimedTextPadding;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef struct TimedTextSize TimedTextSize;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef struct TimedTextDouble TimedTextDouble;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                typedef struct TimedTextPoint TimedTextPoint;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


































extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0085_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3198 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3198 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3198_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3198_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0086 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#define DEF___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0086 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0086_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a61a11cd-b32e-518b-a6a7-5472cbe00e83")
    __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IAudioStreamDescriptor **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IAudioStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0087 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0087 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0087_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3199 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3199 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3199_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3199_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0088 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#define DEF___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0088 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0088_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a3e2c972-a171-5b94-8389-e983ebc3f3b9")
    __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CAudioStreamDescriptor **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0089 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CAudioStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0089 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0089_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3200 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3200 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3200_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3200_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0090 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CAudioTrack
#define DEF___FIIterator_1_Windows__CMedia__CCore__CAudioTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0090 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0090_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0090_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CAudioTrack */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CAudioTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CAudioTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("138064ef-8693-5303-8a75-eba494d06342")
    __FIIterator_1_Windows__CMedia__CCore__CAudioTrack : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaTrack **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CAudioTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CAudioTrackVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CAudioTrack
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CAudioTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CAudioTrack_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0091 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CAudioTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0091 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0091_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3201 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3201 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3201_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3201_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0092 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CAudioTrack
#define DEF___FIIterable_1_Windows__CMedia__CCore__CAudioTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0092 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0092_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CAudioTrack */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CAudioTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CAudioTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b3be50a8-9856-5656-ab6d-cd58f9de0a4f")
    __FIIterable_1_Windows__CMedia__CCore__CAudioTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CAudioTrack **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CAudioTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CAudioTrack **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CAudioTrackVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CAudioTrack
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CAudioTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CAudioTrack_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0093 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CAudioTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0093 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0093_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3202 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3202 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3202_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3202_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0094 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CIMediaCue
#define DEF___FIIterator_1_Windows__CMedia__CCore__CIMediaCue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0094 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0094_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CIMediaCue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CIMediaCue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CIMediaCue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1a594dc8-a64b-55ed-9b34-7b274e1d5c70")
    __FIIterator_1_Windows__CMedia__CCore__CIMediaCue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaCue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMediaCue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CIMediaCueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMediaCue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CIMediaCueVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CIMediaCue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CIMediaCueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CIMediaCue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0095 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CIMediaCue */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0095 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0095_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3203 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3203 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3203_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3203_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0096 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CIMediaCue
#define DEF___FIIterable_1_Windows__CMedia__CCore__CIMediaCue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0096 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0096_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CIMediaCue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CIMediaCue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CIMediaCue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("737a2098-41bf-5d9f-a1d2-2f171c578b3c")
    __FIIterable_1_Windows__CMedia__CCore__CIMediaCue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CIMediaCue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CIMediaCueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CIMediaCue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CIMediaCueVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CIMediaCue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CIMediaCueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CIMediaCue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0097 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CIMediaCue */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0097_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3204 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3204 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3204_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3204_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0098 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer
#define DEF___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0098_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("53076581-01a9-51b9-98cc-5265504cd352")
    __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMseSourceBuffer **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMseSourceBuffer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CMseSourceBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CMseSourceBufferVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CMseSourceBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0099 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0099_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3205 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3205 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3205_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3205_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0100 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer
#define DEF___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0100_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5ca0da86-6307-558a-865f-3a1ef9fe56b3")
    __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CMseSourceBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CMseSourceBuffer **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CMseSourceBufferVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CMseSourceBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0101 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CMseSourceBuffer */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0101_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3206 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3206 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3206_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3206_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0102 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange
#define DEF___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0102_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("92a36852-fbb3-5b48-b4ec-01dda0972a5c")
    __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__out struct ABI::Windows::Media::Core::MseTimeRange *current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) struct ABI::Windows::Media::Core::MseTimeRange *items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CMseTimeRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange *current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CMseTimeRangeVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CMseTimeRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0103 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CMseTimeRange */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0103_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3207 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3207 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3207_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3207_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0104 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange
#define DEF___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0104_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ed0c6e08-e22f-5ac2-ba14-e0ff1df3467f")
    __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CMseTimeRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CMseTimeRange **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CMseTimeRangeVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CMseTimeRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0105 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CMseTimeRange */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0105_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3208 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3208 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3208_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3208_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0106 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0106_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("859354e5-077b-5d53-b297-1a07b97f09c3")
    __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedMetadataTrack **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedMetadataTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0107 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0107_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3209 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3209 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3209_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3209_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0108 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0108_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("150a4454-03bb-5dd1-8153-6a600e851f71")
    __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedMetadataTrack **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0109 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedMetadataTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0109_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3210 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3210 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3210_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3210_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0110 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0110_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84c4fcac-86d8-5c74-a138-d9bf37b749ec")
    __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextLine **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextLine **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CTimedTextLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CTimedTextLineVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CTimedTextLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0111 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextLine */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0111_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3211 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3211 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3211_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3211_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0112 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0112 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0112_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("aec710ad-3bd8-5a59-ae77-e7fc46fb105b")
    __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CTimedTextLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedTextLine **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CTimedTextLineVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CTimedTextLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0113 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextLine */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0113_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3212 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3212 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3212_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3212_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0114 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0114_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bdded7c0-5c73-57f5-9b08-652933586dd5")
    __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextSource **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CTimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CTimedTextSourceVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CTimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0115 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSource */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0115_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3213 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3213 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3213_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3213_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0116 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0116_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4fc57282-0edf-5d85-9d89-ddc2a5692c13")
    __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CTimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedTextSource **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CTimedTextSourceVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CTimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0117 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSource */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0117_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3214 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3214 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3214_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3214_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0118 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat
#define DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0118_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("65105e50-865c-591d-9bf4-96237de2533f")
    __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSubformat **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextSubformat **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0119 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0119_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3215 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3215 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3215_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3215_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0120 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat
#define DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0120_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cee3ae43-c93c-56f7-8c55-9024ded72c76")
    __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CTimedTextSubformat **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0121 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CTimedTextSubformat */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0121_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3216 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3216 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3216_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3216_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0122 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#define DEF___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0122_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("da51ab3c-3c64-545c-a3f4-f9b055aaf7d9")
    __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IVideoStreamDescriptor **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IVideoStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0123 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0123_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3217 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3217 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3217_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3217_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0124 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#define DEF___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0124_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3acbf03c-0a79-5823-aaa9-d88bc3f8f594")
    __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CVideoStreamDescriptor **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0125 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CVideoStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0125 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0125_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3218 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3218 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3218_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3218_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0126 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CMedia__CCore__CVideoTrack
#define DEF___FIIterator_1_Windows__CMedia__CCore__CVideoTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0126_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CMedia__CCore__CVideoTrack */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CMedia__CCore__CVideoTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CMedia__CCore__CVideoTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a7c8d22c-b59d-5d7a-8d70-67f898a0b877")
    __FIIterator_1_Windows__CMedia__CCore__CVideoTrack : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaTrack **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CMedia__CCore__CVideoTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CMedia__CCore__CVideoTrackVtbl;

    interface __FIIterator_1_Windows__CMedia__CCore__CVideoTrack
    {
        CONST_VTBL struct __FIIterator_1_Windows__CMedia__CCore__CVideoTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CMedia__CCore__CVideoTrack_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0127 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CMedia__CCore__CVideoTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0127_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3219 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3219 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3219_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3219_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0128 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CMedia__CCore__CVideoTrack
#define DEF___FIIterable_1_Windows__CMedia__CCore__CVideoTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0128_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CMedia__CCore__CVideoTrack */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CMedia__CCore__CVideoTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CMedia__CCore__CVideoTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84413442-a2e3-5e0f-936d-bc40b0fb2dcd")
    __FIIterable_1_Windows__CMedia__CCore__CVideoTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CVideoTrack **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CMedia__CCore__CVideoTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CMedia__CCore__CVideoTrack **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CMedia__CCore__CVideoTrackVtbl;

    interface __FIIterable_1_Windows__CMedia__CCore__CVideoTrack
    {
        CONST_VTBL struct __FIIterable_1_Windows__CMedia__CCore__CVideoTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CMedia__CCore__CVideoTrack_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0129 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CMedia__CCore__CVideoTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0129_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3220 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3220 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3220_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3220_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0130 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0130_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0313ae7a-2803-5d45-b5a1-a0fc5cd55e7c")
    __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedMetadataTrack **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedMetadataTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0131 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0131_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3221 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3221 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3221_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3221_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0132 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0132_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c46d9e34-ea11-5bb2-9744-1617417ef016")
    __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedMetadataTrack **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedMetadataTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Media::Core::ITimedMetadataTrack **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl;

    interface __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack
    {
        CONST_VTBL struct __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0133 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedMetadataTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0133 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0133_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3222 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3222 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3222_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3222_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0134 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack
#define DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)



/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0134 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0134_v0_0_s_ifspec;

#ifndef ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__

/* interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 



/* interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bd1dc81c-23c4-5b4b-ac38-c5d34cdf34e4")
    __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IVectorChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
        
        END_INTERFACE
    } __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl;

    interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack
    {
        CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0135 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0135_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3223 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3223 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3223_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3223_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0136 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack
#define DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0136_v0_0_s_ifspec;

#ifndef ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__
#define ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__

/* interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 



/* interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98ebeba8-6659-5af2-be4f-32fdeede3b77")
    __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE add_VectorChanged( 
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE remove_VectorChanged( 
            /* [in] */ EventRegistrationToken token) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedMetadataTrack *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl;

    interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack
    {
        CONST_VTBL struct __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_add_VectorChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_remove_VectorChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0137 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0137_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3224 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3224 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3224_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3224_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0138 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0138_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("edcd634e-b7e4-5ff8-b8c2-8493849b2c0d")
    __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSource *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextSource **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSourceVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0139 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0139_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3225 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3225 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3225_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3225_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0140 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSource
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSource
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0140_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CMedia__CCore__CTimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d0a72378-5432-50bf-93c3-c5f35fc93517")
    __FIVector_1_Windows__CMedia__CCore__CTimedTextSource : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSource *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSource *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSource *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSource *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextSource **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Media::Core::ITimedTextSource **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CMedia__CCore__CTimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSource **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CMedia__CCore__CTimedTextSourceVtbl;

    interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSource
    {
        CONST_VTBL struct __FIVector_1_Windows__CMedia__CCore__CTimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSource_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0141 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSource */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0141_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3226 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3226 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3226_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3226_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0142 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource
#define DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)



/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0142 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0142_v0_0_s_ifspec;

#ifndef ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__

/* interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 



/* interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e12e6261-b198-56e0-9822-ba2d3bb6f8fe")
    __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IVectorChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
        
        END_INTERFACE
    } __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSourceVtbl;

    interface __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource
    {
        CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0143 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0143_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3227 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3227 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3227_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3227_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0144 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource
#define DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0144_v0_0_s_ifspec;

#ifndef ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__
#define ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__

/* interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 



/* interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95e6c852-6e9c-50a9-8935-054320242945")
    __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE add_VectorChanged( 
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE remove_VectorChanged( 
            /* [in] */ EventRegistrationToken token) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CMedia__CCore__CTimedTextSource *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSourceVtbl;

    interface __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource
    {
        CONST_VTBL struct __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_add_VectorChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) ) 

#define __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_remove_VectorChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0145 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0145_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3228 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3228 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3228_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3228_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0146 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0146_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("340f4fed-1288-5b89-be7c-c355fe1ce4d9")
    __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IAudioStreamDescriptor **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IAudioStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IAudioStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0147 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0147_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3229 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3229 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3229_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3229_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0148 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0148_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e71ffa4a-14a7-5068-891c-6e717af8bf8d")
    __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaTrack **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CAudioTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CAudioTrackVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CAudioTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CAudioTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0149 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CAudioTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0149_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3230 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3230 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3230_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3230_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0150 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0150_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("996421a1-625c-5d92-ad68-8b3911d294b0")
    __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaCue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaCue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMediaCue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CIMediaCueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMediaCue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CIMediaCueVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CIMediaCueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CIMediaCue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0151 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CIMediaCue */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0151_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3231 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3231 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3231_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3231_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0152 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0152_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85318263-1360-5c78-b0ad-52d6b45b19f3")
    __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMseSourceBuffer **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMseSourceBuffer *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMseSourceBuffer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBufferVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0153 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0153_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3232 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3232 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3232_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3232_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0154 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0154_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("87ff1dd1-7ec3-5bc5-b558-0425d806bf4b")
    __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__out struct ABI::Windows::Media::Core::MseTimeRange *item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ struct ABI::Windows::Media::Core::MseTimeRange item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) struct ABI::Windows::Media::Core::MseTimeRange *items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange *item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRangeVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0155 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0155_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3233 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3233 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3233_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3233_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0156 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0156_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9532b5cc-73fc-5e3a-8531-794c30d7a1ae")
    __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextLine **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextLine *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextLine **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLineVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0157 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0157_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3234 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3234 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3234_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3234_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0158 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0158_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("411a0e26-42e2-5e65-b9c4-980c4c3f31f7")
    __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSubformat **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSubformat *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextSubformat **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0159 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0159_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3235 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3235 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3235_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3235_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0160 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0160_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e965c8af-d211-52f0-838b-4637469da7af")
    __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IVideoStreamDescriptor **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IVideoStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0161 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0161_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3236 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3236 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3236_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3236_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0162 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack
#define DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0162_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("200c6224-0b43-54fb-995f-fd8688bf24de")
    __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaTrack **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CMedia__CCore__CVideoTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaTrack *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIMediaTrack **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CMedia__CCore__CVideoTrackVtbl;

    interface __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CMedia__CCore__CVideoTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CMedia__CCore__CVideoTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0163 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CMedia__CCore__CVideoTrack */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0163 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0163_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3237 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3237 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3237_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3237_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0164 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#define DEF___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0164 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0164_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("45afc129-988c-5f1e-9c17-6e34b917cd1b")
    __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IAudioStreamDescriptor **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IAudioStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IAudioStreamDescriptor *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IAudioStreamDescriptor *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IAudioStreamDescriptor *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IAudioStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Media::Core::IAudioStreamDescriptor **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CAudioStreamDescriptor **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0165 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CAudioStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0165 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0165_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3238 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3238 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3238_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3238_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0166 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextLine
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextLine
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0166 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0166_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CMedia__CCore__CTimedTextLine */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CMedia__CCore__CTimedTextLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("284f0441-e96d-58ad-9188-7bf46514dfcc")
    __FIVector_1_Windows__CMedia__CCore__CTimedTextLine : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextLine **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextLine *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextLine *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextLine *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextLine *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextLine **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Media::Core::ITimedTextLine **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CMedia__CCore__CTimedTextLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedTextLine **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextLine *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextLine * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CMedia_CCore_CITimedTextLine **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CMedia__CCore__CTimedTextLineVtbl;

    interface __FIVector_1_Windows__CMedia__CCore__CTimedTextLine
    {
        CONST_VTBL struct __FIVector_1_Windows__CMedia__CCore__CTimedTextLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextLine_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedTextLine_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0167 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextLine */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0167 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0167_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3239 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3239 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3239_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3239_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0168 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat
#define DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0168 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0168_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8786f392-f369-57ea-a16e-75870246a8c9")
    __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSubformat **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSubformat *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSubformat *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSubformat *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSubformat *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::ITimedTextSubformat **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Media::Core::ITimedTextSubformat **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedTextSubformat **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl;

    interface __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat
    {
        CONST_VTBL struct __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0169 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0169 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0169_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3240 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3240 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3240_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3240_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0170 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#define DEF___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0170 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0170_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1fb064b3-636c-5988-9c97-02a9b76150f6")
    __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IVideoStreamDescriptor **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStreamDescriptor *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStreamDescriptor *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStreamDescriptor *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Media::Core::IVideoStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Media::Core::IVideoStreamDescriptor **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CVideoStreamDescriptor **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0171 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CMedia__CCore__CVideoStreamDescriptor */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0171 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0171_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3241 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3241 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3241_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3241_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0172 */
/* [local] */ 

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)



/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0172 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0172_v0_0_s_ifspec;

#ifndef ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_INTERFACE_DEFINED__
#define ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_INTERFACE_DEFINED__

/* interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample */
/* [unique][uuid][object] */ 



/* interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("df7aacc9-a86c-5c7d-bf98-cc371c97c67b")
    __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample *asyncInfo,
            /* [in] */ AsyncStatus status) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [in] */ __RPC__in_opt __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample *asyncInfo,
            /* [in] */ AsyncStatus status);
        
        END_INTERFACE
    } __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSampleVtbl;

    interface __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample
    {
        CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_Invoke(This,asyncInfo,status)	\
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0173 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0173 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0173_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3242 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3242 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3242_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3242_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0174 */
/* [local] */ 

#ifndef DEF___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample
#define DEF___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0174 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0174_v0_0_s_ifspec;

#ifndef ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_INTERFACE_DEFINED__
#define ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_INTERFACE_DEFINED__

/* interface __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample */
/* [unique][uuid][object] */ 



/* interface __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3cdc5e86-4ada-5ef7-967a-e137a4621907")
    __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample : public IInspectable
    {
    public:
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Completed( 
            /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample *handler) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Completed( 
            /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample **handler) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetResults( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSample **results) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Completed )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample *handler);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Completed )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CMedia__CCore__CMediaStreamSample **handler);
        
        HRESULT ( STDMETHODCALLTYPE *GetResults )( 
            __RPC__in __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample **results);
        
        END_INTERFACE
    } __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSampleVtbl;

    interface __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample
    {
        CONST_VTBL struct __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_put_Completed(This,handler)	\
    ( (This)->lpVtbl -> put_Completed(This,handler) ) 

#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_get_Completed(This,handler)	\
    ( (This)->lpVtbl -> get_Completed(This,handler) ) 

#define __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_GetResults(This,results)	\
    ( (This)->lpVtbl -> GetResults(This,results) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0175 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0175 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0175_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3243 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3243 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3243_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3243_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0176 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0176 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0176_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01f0d7a6-f9bd-5bc1-aaa9-dff396f72f87")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IFaceDetectionEffect *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IFaceDetectedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0177 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0177 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0177_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3244 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3244 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3244_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3244_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0178 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0178 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0178_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("21eb6e39-728a-56a9-8dce-062ba4c81bf5")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ISingleSelectMediaTrackList *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0179 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0179 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0179_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3245 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3245 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3245_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3245_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0180 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0180_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5b133719-ee98-59b2-b432-1c9a5a56ab05")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaBinder *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaBindingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaBinder *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0181 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0181_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3246 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3246 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3246_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3246_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0182 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0182_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3f3b10e2-b2e9-55c6-abb3-4a258072ebb9")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaBindingEventArgs *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0183 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0183_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3247 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3247 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3247_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3247_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0184 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0184_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("425d53e3-fba6-5ea3-b713-db4d70787436")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaSource2 *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaSourceOpenOperationCompletedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0185 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0185_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3248 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3248 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3248_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3248_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0186 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0186 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0186_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2274d3a6-1ba0-5230-bb86-de90058b6403")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaSource2 *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaSourceStateChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0187 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0187 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0187_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3249 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3249 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3249_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3249_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0188 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0188 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0188_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d4dc5ef1-c1cb-5c32-803d-f2f9a7ad9916")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSample *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0189 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0189 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0189_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0189_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3250 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3250 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3250_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3250_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0190 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0190 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0190_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0190_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6fd6ded7-421b-5ef5-8bf5-edea45401665")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0191 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0191 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0191_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0191_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3251 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3251 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3251_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3251_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0192 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0192 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0192_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0192_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("238cc251-d0b8-5a34-81d4-0dd1f936a20d")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSourceClosedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0193 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0193 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0193_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0193_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3252 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3252 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3252_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3252_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0194 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0194 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0194_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0194_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4f1a3ae3-b8b7-5689-901d-b0b623f5a172")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSourceSampleRequestedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0195 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0195 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0195_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0195_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3253 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3253 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3253_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3253_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0196 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0196 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0196_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0196_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a93d5846-c660-586e-b6b5-a52fb81f9240")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSourceStartingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0197 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0197 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0197_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0197_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3254 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3254 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3254_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3254_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0198 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0198 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0198_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0198_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("452b2e4a-5511-5b3c-8a8e-ee659576a4c1")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequestedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0199 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0199 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0199_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0199_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3255 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3255 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3255_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3255_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0200 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0200 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0200_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0200_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("187fd3d7-bb9d-541a-94fd-43c31dd84a67")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMseSourceBuffer *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0201 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0201 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0201_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0201_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3256 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3256 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3256_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3256_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0202 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0202 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0202_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0202_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0ff01695-fbb2-5e95-8ec7-da17d8e99f16")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMseSourceBufferList *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0203 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0203 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0203_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0203_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3257 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3257 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3257_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3257_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0204 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0204 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0204_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0204_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("724bf4ef-de7a-5dbd-815e-522a87bc3344")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMseStreamSource *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0205 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0205 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0205_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0205_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3258 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3258 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3258_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3258_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0206 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0206 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0206_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0206_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48630f8c-dbde-569e-a0c8-7588d1d2bd03")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ISceneAnalysisEffect *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ISceneAnalyzedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0207 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0207 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0207_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0207_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3259 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3259 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3259_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3259_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0208 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0208 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0208_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0208_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4aac9411-c355-5c95-8c78-5a0f5ca1a54d")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaCueEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0209 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0209 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0209_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0209_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3260 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3260 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3260_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3260_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0210 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0210 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0210_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0210_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8dc73162-255b-532e-b0c7-9a6d70b4bb9e")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrack *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedMetadataTrackFailedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0211 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0211 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0211_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0211_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3261 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3261 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3261_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3261_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0212 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0212 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0212_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0212_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0220562a-5de4-5ad2-ac20-6cd26f111745")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSource *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextSourceResolveResultEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0213 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0213 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0213_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0213_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3262 */




/* interface __MIDL_itf_windows2Emedia2Ecore_0000_3262 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3262_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_3262_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0214 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0214 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0214_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0214_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("897592e2-bfcc-5f16-8834-2c9c4f20559b")
    __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStabilizationEffect *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IVideoStabilizationEffectEnabledChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0215 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs */
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceClosedReason
    {
        MediaStreamSourceClosedReason_Done	= 0,
        MediaStreamSourceClosedReason_UnknownError	= 1,
        MediaStreamSourceClosedReason_AppReportedError	= 2,
        MediaStreamSourceClosedReason_UnsupportedProtectionSystem	= 3,
        MediaStreamSourceClosedReason_ProtectionSystemFailure	= 4,
        MediaStreamSourceClosedReason_UnsupportedEncodingFormat	= 5,
        MediaStreamSourceClosedReason_MissingSampleRequestedEventHandler	= 6
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceErrorStatus
    {
        MediaStreamSourceErrorStatus_Other	= 0,
        MediaStreamSourceErrorStatus_OutOfMemory	= 1,
        MediaStreamSourceErrorStatus_FailedToOpenFile	= 2,
        MediaStreamSourceErrorStatus_FailedToConnectToServer	= 3,
        MediaStreamSourceErrorStatus_ConnectionToServerLost	= 4,
        MediaStreamSourceErrorStatus_UnspecifiedNetworkError	= 5,
        MediaStreamSourceErrorStatus_DecodeError	= 6,
        MediaStreamSourceErrorStatus_UnsupportedMediaFormat	= 7
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMseReadyState
    {
        MseReadyState_Closed	= 0,
        MseReadyState_Open	= 1,
        MseReadyState_Ended	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMseEndOfStreamStatus
    {
        MseEndOfStreamStatus_Success	= 0,
        MseEndOfStreamStatus_NetworkError	= 1,
        MseEndOfStreamStatus_DecodeError	= 2,
        MseEndOfStreamStatus_UnknownError	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMseAppendMode
    {
        MseAppendMode_Segments	= 0,
        MseAppendMode_Sequence	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CFaceDetectionMode
    {
        FaceDetectionMode_HighPerformance	= 0,
        FaceDetectionMode_Balanced	= 1,
        FaceDetectionMode_HighQuality	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CVideoStabilizationEffectEnabledChangedReason
    {
        VideoStabilizationEffectEnabledChangedReason_Programmatic	= 0,
        VideoStabilizationEffectEnabledChangedReason_PixelRateTooHigh	= 1,
        VideoStabilizationEffectEnabledChangedReason_RunningSlowly	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMediaTrackKind
    {
        MediaTrackKind_Audio	= 0,
        MediaTrackKind_Video	= 1,
        MediaTrackKind_TimedMetadata	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedMetadataKind
    {
        TimedMetadataKind_Caption	= 0,
        TimedMetadataKind_Chapter	= 1,
        TimedMetadataKind_Custom	= 2,
        TimedMetadataKind_Data	= 3,
        TimedMetadataKind_Description	= 4,
        TimedMetadataKind_Subtitle	= 5
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedMetadataTrackErrorCode
    {
        TimedMetadataTrackErrorCode_None	= 0,
        TimedMetadataTrackErrorCode_DataFormatError	= 1,
        TimedMetadataTrackErrorCode_NetworkError	= 2,
        TimedMetadataTrackErrorCode_InternalError	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextScrollMode
    {
        TimedTextScrollMode_Popon	= 0,
        TimedTextScrollMode_Rollup	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit
    {
        TimedTextUnit_Pixels	= 0,
        TimedTextUnit_Percentage	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextWritingMode
    {
        TimedTextWritingMode_LeftRightTopBottom	= 0,
        TimedTextWritingMode_RightLeftTopBottom	= 1,
        TimedTextWritingMode_TopBottomRightLeft	= 2,
        TimedTextWritingMode_TopBottomLeftRight	= 3,
        TimedTextWritingMode_LeftRight	= 4,
        TimedTextWritingMode_RightLeft	= 5,
        TimedTextWritingMode_TopBottom	= 6
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextDisplayAlignment
    {
        TimedTextDisplayAlignment_Before	= 0,
        TimedTextDisplayAlignment_After	= 1,
        TimedTextDisplayAlignment_Center	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextLineAlignment
    {
        TimedTextLineAlignment_Start	= 0,
        TimedTextLineAlignment_End	= 1,
        TimedTextLineAlignment_Center	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextWrapping
    {
        TimedTextWrapping_NoWrap	= 0,
        TimedTextWrapping_Wrap	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextWeight
    {
        TimedTextWeight_Normal	= 400,
        TimedTextWeight_Bold	= 700
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CTimedTextFlowDirection
    {
        TimedTextFlowDirection_LeftToRight	= 0,
        TimedTextFlowDirection_RightToLeft	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CMedia_CCore_CMediaSourceState
    {
        MediaSourceState_Initial	= 0,
        MediaSourceState_Opening	= 1,
        MediaSourceState_Opened	= 2,
        MediaSourceState_Failed	= 3,
        MediaSourceState_Closed	= 4
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CMedia_CCore_CMseTimeRange
    {
    __x_ABI_CWindows_CFoundation_CTimeSpan Start;
    __x_ABI_CWindows_CFoundation_CTimeSpan End;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CMedia_CCore_CTimedTextPadding
    {
    DOUBLE Before;
    DOUBLE After;
    DOUBLE Start;
    DOUBLE End;
    __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit Unit;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CMedia_CCore_CTimedTextSize
    {
    DOUBLE Height;
    DOUBLE Width;
    __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit Unit;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble
    {
    DOUBLE Value;
    __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit Unit;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CMedia_CCore_CTimedTextPoint
    {
    DOUBLE X;
    DOUBLE Y;
    __x_ABI_CWindows_CMedia_CCore_CTimedTextUnit Unit;
    } ;
#endif
#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSource[] = L"Windows.Media.Core.IMediaSource";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0215 */
/* [local] */ 

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MediaStreamSourceClosedReason
                    {
                        MediaStreamSourceClosedReason_Done	= 0,
                        MediaStreamSourceClosedReason_UnknownError	= 1,
                        MediaStreamSourceClosedReason_AppReportedError	= 2,
                        MediaStreamSourceClosedReason_UnsupportedProtectionSystem	= 3,
                        MediaStreamSourceClosedReason_ProtectionSystemFailure	= 4,
                        MediaStreamSourceClosedReason_UnsupportedEncodingFormat	= 5,
                        MediaStreamSourceClosedReason_MissingSampleRequestedEventHandler	= 6
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MediaStreamSourceErrorStatus
                    {
                        MediaStreamSourceErrorStatus_Other	= 0,
                        MediaStreamSourceErrorStatus_OutOfMemory	= 1,
                        MediaStreamSourceErrorStatus_FailedToOpenFile	= 2,
                        MediaStreamSourceErrorStatus_FailedToConnectToServer	= 3,
                        MediaStreamSourceErrorStatus_ConnectionToServerLost	= 4,
                        MediaStreamSourceErrorStatus_UnspecifiedNetworkError	= 5,
                        MediaStreamSourceErrorStatus_DecodeError	= 6,
                        MediaStreamSourceErrorStatus_UnsupportedMediaFormat	= 7
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MseReadyState
                    {
                        MseReadyState_Closed	= 0,
                        MseReadyState_Open	= 1,
                        MseReadyState_Ended	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MseEndOfStreamStatus
                    {
                        MseEndOfStreamStatus_Success	= 0,
                        MseEndOfStreamStatus_NetworkError	= 1,
                        MseEndOfStreamStatus_DecodeError	= 2,
                        MseEndOfStreamStatus_UnknownError	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MseAppendMode
                    {
                        MseAppendMode_Segments	= 0,
                        MseAppendMode_Sequence	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum FaceDetectionMode
                    {
                        FaceDetectionMode_HighPerformance	= 0,
                        FaceDetectionMode_Balanced	= 1,
                        FaceDetectionMode_HighQuality	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum VideoStabilizationEffectEnabledChangedReason
                    {
                        VideoStabilizationEffectEnabledChangedReason_Programmatic	= 0,
                        VideoStabilizationEffectEnabledChangedReason_PixelRateTooHigh	= 1,
                        VideoStabilizationEffectEnabledChangedReason_RunningSlowly	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MediaTrackKind
                    {
                        MediaTrackKind_Audio	= 0,
                        MediaTrackKind_Video	= 1,
                        MediaTrackKind_TimedMetadata	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedMetadataKind
                    {
                        TimedMetadataKind_Caption	= 0,
                        TimedMetadataKind_Chapter	= 1,
                        TimedMetadataKind_Custom	= 2,
                        TimedMetadataKind_Data	= 3,
                        TimedMetadataKind_Description	= 4,
                        TimedMetadataKind_Subtitle	= 5
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedMetadataTrackErrorCode
                    {
                        TimedMetadataTrackErrorCode_None	= 0,
                        TimedMetadataTrackErrorCode_DataFormatError	= 1,
                        TimedMetadataTrackErrorCode_NetworkError	= 2,
                        TimedMetadataTrackErrorCode_InternalError	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextScrollMode
                    {
                        TimedTextScrollMode_Popon	= 0,
                        TimedTextScrollMode_Rollup	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextUnit
                    {
                        TimedTextUnit_Pixels	= 0,
                        TimedTextUnit_Percentage	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextWritingMode
                    {
                        TimedTextWritingMode_LeftRightTopBottom	= 0,
                        TimedTextWritingMode_RightLeftTopBottom	= 1,
                        TimedTextWritingMode_TopBottomRightLeft	= 2,
                        TimedTextWritingMode_TopBottomLeftRight	= 3,
                        TimedTextWritingMode_LeftRight	= 4,
                        TimedTextWritingMode_RightLeft	= 5,
                        TimedTextWritingMode_TopBottom	= 6
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextDisplayAlignment
                    {
                        TimedTextDisplayAlignment_Before	= 0,
                        TimedTextDisplayAlignment_After	= 1,
                        TimedTextDisplayAlignment_Center	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextLineAlignment
                    {
                        TimedTextLineAlignment_Start	= 0,
                        TimedTextLineAlignment_End	= 1,
                        TimedTextLineAlignment_Center	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextWrapping
                    {
                        TimedTextWrapping_NoWrap	= 0,
                        TimedTextWrapping_Wrap	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextWeight
                    {
                        TimedTextWeight_Normal	= 400,
                        TimedTextWeight_Bold	= 700
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum TimedTextFlowDirection
                    {
                        TimedTextFlowDirection_LeftToRight	= 0,
                        TimedTextFlowDirection_RightToLeft	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                /* [v1_enum] */ 
                enum MediaSourceState
                    {
                        MediaSourceState_Initial	= 0,
                        MediaSourceState_Opening	= 1,
                        MediaSourceState_Opened	= 2,
                        MediaSourceState_Failed	= 3,
                        MediaSourceState_Closed	= 4
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                struct MseTimeRange
                    {
                    ABI::Windows::Foundation::TimeSpan Start;
                    ABI::Windows::Foundation::TimeSpan End;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                struct TimedTextPadding
                    {
                    DOUBLE Before;
                    DOUBLE After;
                    DOUBLE Start;
                    DOUBLE End;
                    TimedTextUnit Unit;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                struct TimedTextSize
                    {
                    DOUBLE Height;
                    DOUBLE Width;
                    TimedTextUnit Unit;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                struct TimedTextDouble
                    {
                    DOUBLE Value;
                    TimedTextUnit Unit;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                
                struct TimedTextPoint
                    {
                    DOUBLE X;
                    DOUBLE Y;
                    TimedTextUnit Unit;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0215_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0215_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSource */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("E7BFB599-A09D-4C21-BCDF-20AF4F86B3D9")
                    IMediaSource : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSource = __uuidof(IMediaSource);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0216 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamDescriptor[] = L"Windows.Media.Core.IMediaStreamDescriptor";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0216 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0216_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0216_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamDescriptor */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("80F16E6E-92F7-451E-97D2-AFD80742DA70")
                    IMediaStreamDescriptor : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSelected( 
                            /* [out][retval] */ __RPC__out boolean *selected) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Language( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamDescriptor = __uuidof(IMediaStreamDescriptor);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSelected )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [out][retval] */ __RPC__out boolean *selected);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptorVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_get_IsSelected(This,selected)	\
    ( (This)->lpVtbl -> get_IsSelected(This,selected) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_put_Name(This,value)	\
    ( (This)->lpVtbl -> put_Name(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_put_Language(This,value)	\
    ( (This)->lpVtbl -> put_Language(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_get_Language(This,value)	\
    ( (This)->lpVtbl -> get_Language(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0217 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IAudioStreamDescriptor[] = L"Windows.Media.Core.IAudioStreamDescriptor";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0217 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0217_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0217_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IAudioStreamDescriptor */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("1E3692E4-4027-4847-A70B-DF1D9A2A7B04")
                    IAudioStreamDescriptor : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EncodingProperties( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::MediaProperties::IAudioEncodingProperties **encodingProperties) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IAudioStreamDescriptor = __uuidof(IAudioStreamDescriptor);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EncodingProperties )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties **encodingProperties);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_get_EncodingProperties(This,encodingProperties)	\
    ( (This)->lpVtbl -> get_EncodingProperties(This,encodingProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0218 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IAudioStreamDescriptorFactory[] = L"Windows.Media.Core.IAudioStreamDescriptorFactory";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0218 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0218_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0218_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IAudioStreamDescriptorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("4A86CE9E-4CB1-4380-8E0C-83504B7F5BF3")
                    IAudioStreamDescriptorFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::MediaProperties::IAudioEncodingProperties *encodingProperties,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IAudioStreamDescriptor **result) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IAudioStreamDescriptorFactory = __uuidof(IAudioStreamDescriptorFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CMediaProperties_CIAudioEncodingProperties *encodingProperties,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor **result);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_Create(This,encodingProperties,result)	\
    ( (This)->lpVtbl -> Create(This,encodingProperties,result) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0219 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IVideoStreamDescriptor[] = L"Windows.Media.Core.IVideoStreamDescriptor";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0219 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0219_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0219_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IVideoStreamDescriptor */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("12EE0D55-9C2B-4440-8057-2C7A90F0CBEC")
                    IVideoStreamDescriptor : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EncodingProperties( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::MediaProperties::IVideoEncodingProperties **encodingProperties) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVideoStreamDescriptor = __uuidof(IVideoStreamDescriptor);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EncodingProperties )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties **encodingProperties);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_get_EncodingProperties(This,encodingProperties)	\
    ( (This)->lpVtbl -> get_EncodingProperties(This,encodingProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0220 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IVideoStreamDescriptorFactory[] = L"Windows.Media.Core.IVideoStreamDescriptorFactory";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0220 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0220_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0220_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IVideoStreamDescriptorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("494EF6D1-BB75-43D2-9E5E-7B79A3AFCED4")
                    IVideoStreamDescriptorFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::MediaProperties::IVideoEncodingProperties *encodingProperties,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IVideoStreamDescriptor **result) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVideoStreamDescriptorFactory = __uuidof(IVideoStreamDescriptorFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties *encodingProperties,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor **result);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_Create(This,encodingProperties,result)	\
    ( (This)->lpVtbl -> Create(This,encodingProperties,result) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0221 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSource[] = L"Windows.Media.Core.IMediaStreamSource";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0221 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0221_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0221_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSource */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("3712D543-45EB-4138-AA62-C01E26F3843F")
                    IMediaStreamSource : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Closed( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Closed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Starting( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Starting( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Paused( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Paused( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_SampleRequested( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SampleRequested( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_SwitchStreamsRequested( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SwitchStreamsRequested( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE NotifyError( 
                            /* [in] */ ABI::Windows::Media::Core::MediaStreamSourceErrorStatus errorStatus) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AddStreamDescriptor( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamDescriptor *descriptor) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MediaProtectionManager( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Protection::IMediaProtectionManager *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MediaProtectionManager( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Protection::IMediaProtectionManager **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Duration( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanSeek( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanSeek( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BufferTime( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BufferTime( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetBufferedRange( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan startOffset,
                            /* [in] */ ABI::Windows::Foundation::TimeSpan endOffset) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MusicProperties( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Storage::FileProperties::IMusicProperties **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VideoProperties( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Storage::FileProperties::IVideoProperties **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Thumbnail( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Thumbnail( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AddProtectionKey( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamDescriptor *streamDescriptor,
                            /* [in] */ UINT32 __keyIdentifierSize,
                            /* [in][size_is] */ __RPC__in_ecount_full(__keyIdentifierSize) BYTE *keyIdentifier,
                            /* [in] */ UINT32 __licenseDataSize,
                            /* [in][size_is] */ __RPC__in_ecount_full(__licenseDataSize) BYTE *licenseData) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSource = __uuidof(IMediaStreamSource);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Closed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceClosedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Closed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Starting )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceStartingEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Starting )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Paused )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Paused )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SampleRequested )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSampleRequestedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SampleRequested )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SwitchStreamsRequested )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSource_Windows__CMedia__CCore__CMediaStreamSourceSwitchStreamsRequestedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SwitchStreamsRequested )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyError )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceErrorStatus errorStatus);
        
        HRESULT ( STDMETHODCALLTYPE *AddStreamDescriptor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor *descriptor);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MediaProtectionManager )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MediaProtectionManager )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanSeek )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanSeek )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BufferTime )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BufferTime )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetBufferedRange )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan startOffset,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan endOffset);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MusicProperties )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CStorage_CFileProperties_CIMusicProperties **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProperties )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CStorage_CFileProperties_CIVideoProperties **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Thumbnail )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Thumbnail )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference **value);
        
        HRESULT ( STDMETHODCALLTYPE *AddProtectionKey )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor *streamDescriptor,
            /* [in] */ UINT32 __keyIdentifierSize,
            /* [in][size_is] */ __RPC__in_ecount_full(__keyIdentifierSize) BYTE *keyIdentifier,
            /* [in] */ UINT32 __licenseDataSize,
            /* [in][size_is] */ __RPC__in_ecount_full(__licenseDataSize) BYTE *licenseData);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_add_Closed(This,handler,token)	\
    ( (This)->lpVtbl -> add_Closed(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_remove_Closed(This,token)	\
    ( (This)->lpVtbl -> remove_Closed(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_add_Starting(This,handler,token)	\
    ( (This)->lpVtbl -> add_Starting(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_remove_Starting(This,token)	\
    ( (This)->lpVtbl -> remove_Starting(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_add_Paused(This,handler,token)	\
    ( (This)->lpVtbl -> add_Paused(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_remove_Paused(This,token)	\
    ( (This)->lpVtbl -> remove_Paused(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_add_SampleRequested(This,handler,token)	\
    ( (This)->lpVtbl -> add_SampleRequested(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_remove_SampleRequested(This,token)	\
    ( (This)->lpVtbl -> remove_SampleRequested(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_add_SwitchStreamsRequested(This,handler,token)	\
    ( (This)->lpVtbl -> add_SwitchStreamsRequested(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_remove_SwitchStreamsRequested(This,token)	\
    ( (This)->lpVtbl -> remove_SwitchStreamsRequested(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_NotifyError(This,errorStatus)	\
    ( (This)->lpVtbl -> NotifyError(This,errorStatus) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_AddStreamDescriptor(This,descriptor)	\
    ( (This)->lpVtbl -> AddStreamDescriptor(This,descriptor) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_put_MediaProtectionManager(This,value)	\
    ( (This)->lpVtbl -> put_MediaProtectionManager(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_MediaProtectionManager(This,value)	\
    ( (This)->lpVtbl -> get_MediaProtectionManager(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_put_Duration(This,value)	\
    ( (This)->lpVtbl -> put_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_Duration(This,value)	\
    ( (This)->lpVtbl -> get_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_put_CanSeek(This,value)	\
    ( (This)->lpVtbl -> put_CanSeek(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_CanSeek(This,value)	\
    ( (This)->lpVtbl -> get_CanSeek(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_put_BufferTime(This,value)	\
    ( (This)->lpVtbl -> put_BufferTime(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_BufferTime(This,value)	\
    ( (This)->lpVtbl -> get_BufferTime(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_SetBufferedRange(This,startOffset,endOffset)	\
    ( (This)->lpVtbl -> SetBufferedRange(This,startOffset,endOffset) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_MusicProperties(This,value)	\
    ( (This)->lpVtbl -> get_MusicProperties(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_VideoProperties(This,value)	\
    ( (This)->lpVtbl -> get_VideoProperties(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_put_Thumbnail(This,value)	\
    ( (This)->lpVtbl -> put_Thumbnail(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_get_Thumbnail(This,value)	\
    ( (This)->lpVtbl -> get_Thumbnail(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_AddProtectionKey(This,streamDescriptor,__keyIdentifierSize,keyIdentifier,__licenseDataSize,licenseData)	\
    ( (This)->lpVtbl -> AddProtectionKey(This,streamDescriptor,__keyIdentifierSize,keyIdentifier,__licenseDataSize,licenseData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0222 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceFactory[] = L"Windows.Media.Core.IMediaStreamSourceFactory";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0222 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0222_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0222_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("EF77E0D9-D158-4B7A-863F-203342FBFD41")
                    IMediaStreamSourceFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromDescriptor( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamDescriptor *descriptor,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSource **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromDescriptors( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamDescriptor *descriptor,
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamDescriptor *descriptor2,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSource **result) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceFactory = __uuidof(IMediaStreamSourceFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromDescriptor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor *descriptor,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromDescriptors )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor *descriptor,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor *descriptor2,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource **result);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_CreateFromDescriptor(This,descriptor,result)	\
    ( (This)->lpVtbl -> CreateFromDescriptor(This,descriptor,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_CreateFromDescriptors(This,descriptor,descriptor2,result)	\
    ( (This)->lpVtbl -> CreateFromDescriptors(This,descriptor,descriptor2,result) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0223 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSample[] = L"Windows.Media.Core.IMediaStreamSample";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0223 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0223_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0223_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSample */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("5C8DB627-4B80-4361-9837-6CB7481AD9D6")
                    IMediaStreamSample : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Processed( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Processed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Buffer( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Storage::Streams::IBuffer **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Timestamp( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedProperties( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIMap_2_GUID_IInspectable **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Protection( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSampleProtectionProperties **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DecodeTimestamp( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DecodeTimestamp( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Duration( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeyFrame( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyFrame( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Discontinuous( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Discontinuous( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSample = __uuidof(IMediaStreamSample);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Processed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaStreamSample_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Processed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Buffer )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Timestamp )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendedProperties )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIMap_2_GUID_IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Protection )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DecodeTimestamp )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DecodeTimestamp )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeyFrame )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyFrame )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Discontinuous )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Discontinuous )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_add_Processed(This,handler,token)	\
    ( (This)->lpVtbl -> add_Processed(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_remove_Processed(This,token)	\
    ( (This)->lpVtbl -> remove_Processed(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_Buffer(This,value)	\
    ( (This)->lpVtbl -> get_Buffer(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_Timestamp(This,value)	\
    ( (This)->lpVtbl -> get_Timestamp(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_ExtendedProperties(This,value)	\
    ( (This)->lpVtbl -> get_ExtendedProperties(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_Protection(This,value)	\
    ( (This)->lpVtbl -> get_Protection(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_put_DecodeTimestamp(This,value)	\
    ( (This)->lpVtbl -> put_DecodeTimestamp(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_DecodeTimestamp(This,value)	\
    ( (This)->lpVtbl -> get_DecodeTimestamp(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_put_Duration(This,value)	\
    ( (This)->lpVtbl -> put_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_Duration(This,value)	\
    ( (This)->lpVtbl -> get_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_put_KeyFrame(This,value)	\
    ( (This)->lpVtbl -> put_KeyFrame(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_KeyFrame(This,value)	\
    ( (This)->lpVtbl -> get_KeyFrame(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_put_Discontinuous(This,value)	\
    ( (This)->lpVtbl -> put_Discontinuous(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_get_Discontinuous(This,value)	\
    ( (This)->lpVtbl -> get_Discontinuous(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0224 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSampleStatics[] = L"Windows.Media.Core.IMediaStreamSampleStatics";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0224 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0224_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0224_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSampleStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("DFDF218F-A6CF-4579-BE41-73DD941AD972")
                    IMediaStreamSampleStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromBuffer( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IBuffer *buffer,
                            /* [in] */ ABI::Windows::Foundation::TimeSpan timestamp,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSample **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromStreamAsync( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IInputStream *stream,
                            /* [in] */ UINT32 count,
                            /* [in] */ ABI::Windows::Foundation::TimeSpan timestamp,
                            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSampleStatics = __uuidof(IMediaStreamSampleStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromBuffer )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer *buffer,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan timestamp,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample **value);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromStreamAsync )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIInputStream *stream,
            /* [in] */ UINT32 count,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan timestamp,
            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CMedia__CCore__CMediaStreamSample **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_CreateFromBuffer(This,buffer,timestamp,value)	\
    ( (This)->lpVtbl -> CreateFromBuffer(This,buffer,timestamp,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_CreateFromStreamAsync(This,stream,count,timestamp,value)	\
    ( (This)->lpVtbl -> CreateFromStreamAsync(This,stream,count,timestamp,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0225 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSampleProtectionProperties[] = L"Windows.Media.Core.IMediaStreamSampleProtectionProperties";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0225 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0225_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0225_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSampleProtectionProperties */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("4EB88292-ECDF-493E-841D-DD4ADD7CACA2")
                    IMediaStreamSampleProtectionProperties : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE SetKeyIdentifier( 
                            /* [in] */ UINT32 __valueSize,
                            /* [in][size_is] */ __RPC__in_ecount_full(__valueSize) BYTE *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetKeyIdentifier( 
                            /* [out] */ __RPC__out UINT32 *__valueSize,
                            /* [out][size_is][size_is] */ __RPC__deref_out_ecount_full_opt(*__valueSize) BYTE **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetInitializationVector( 
                            /* [in] */ UINT32 __valueSize,
                            /* [in][size_is] */ __RPC__in_ecount_full(__valueSize) BYTE *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetInitializationVector( 
                            /* [out] */ __RPC__out UINT32 *__valueSize,
                            /* [out][size_is][size_is] */ __RPC__deref_out_ecount_full_opt(*__valueSize) BYTE **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetSubSampleMapping( 
                            /* [in] */ UINT32 __valueSize,
                            /* [in][size_is] */ __RPC__in_ecount_full(__valueSize) BYTE *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetSubSampleMapping( 
                            /* [out] */ __RPC__out UINT32 *__valueSize,
                            /* [out][size_is][size_is] */ __RPC__deref_out_ecount_full_opt(*__valueSize) BYTE **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSampleProtectionProperties = __uuidof(IMediaStreamSampleProtectionProperties);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetKeyIdentifier )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [in] */ UINT32 __valueSize,
            /* [in][size_is] */ __RPC__in_ecount_full(__valueSize) BYTE *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetKeyIdentifier )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [out] */ __RPC__out UINT32 *__valueSize,
            /* [out][size_is][size_is] */ __RPC__deref_out_ecount_full_opt(*__valueSize) BYTE **value);
        
        HRESULT ( STDMETHODCALLTYPE *SetInitializationVector )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [in] */ UINT32 __valueSize,
            /* [in][size_is] */ __RPC__in_ecount_full(__valueSize) BYTE *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetInitializationVector )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [out] */ __RPC__out UINT32 *__valueSize,
            /* [out][size_is][size_is] */ __RPC__deref_out_ecount_full_opt(*__valueSize) BYTE **value);
        
        HRESULT ( STDMETHODCALLTYPE *SetSubSampleMapping )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [in] */ UINT32 __valueSize,
            /* [in][size_is] */ __RPC__in_ecount_full(__valueSize) BYTE *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetSubSampleMapping )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties * This,
            /* [out] */ __RPC__out UINT32 *__valueSize,
            /* [out][size_is][size_is] */ __RPC__deref_out_ecount_full_opt(*__valueSize) BYTE **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_SetKeyIdentifier(This,__valueSize,value)	\
    ( (This)->lpVtbl -> SetKeyIdentifier(This,__valueSize,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_GetKeyIdentifier(This,__valueSize,value)	\
    ( (This)->lpVtbl -> GetKeyIdentifier(This,__valueSize,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_SetInitializationVector(This,__valueSize,value)	\
    ( (This)->lpVtbl -> SetInitializationVector(This,__valueSize,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_GetInitializationVector(This,__valueSize,value)	\
    ( (This)->lpVtbl -> GetInitializationVector(This,__valueSize,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_SetSubSampleMapping(This,__valueSize,value)	\
    ( (This)->lpVtbl -> SetSubSampleMapping(This,__valueSize,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_GetSubSampleMapping(This,__valueSize,value)	\
    ( (This)->lpVtbl -> GetSubSampleMapping(This,__valueSize,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSampleProtectionProperties_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0226 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceClosedRequest[] = L"Windows.Media.Core.IMediaStreamSourceClosedRequest";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0226 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0226_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0226_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceClosedRequest */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("907C00E9-18A3-4951-887A-2C1EEBD5C69E")
                    IMediaStreamSourceClosedRequest : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Reason( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MediaStreamSourceClosedReason *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceClosedRequest = __uuidof(IMediaStreamSourceClosedRequest);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Reason )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMediaStreamSourceClosedReason *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_get_Reason(This,value)	\
    ( (This)->lpVtbl -> get_Reason(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0227 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceClosedEventArgs[] = L"Windows.Media.Core.IMediaStreamSourceClosedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0227 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0227_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0227_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceClosedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("CD8C7EB2-4816-4E24-88F0-491EF7386406")
                    IMediaStreamSourceClosedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceClosedRequest **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceClosedEventArgs = __uuidof(IMediaStreamSourceClosedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedRequest **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_get_Request(This,value)	\
    ( (This)->lpVtbl -> get_Request(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceClosedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0228 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceStartingRequestDeferral[] = L"Windows.Media.Core.IMediaStreamSourceStartingRequestDeferral";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0228 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0228_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0228_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceStartingRequestDeferral */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("3F1356A5-6340-4DC4-9910-068ED9F598F8")
                    IMediaStreamSourceStartingRequestDeferral : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Complete( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceStartingRequestDeferral = __uuidof(IMediaStreamSourceStartingRequestDeferral);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferralVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferralVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferralVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0229 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceStartingRequest[] = L"Windows.Media.Core.IMediaStreamSourceStartingRequest";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0229 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0229_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0229_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceStartingRequest */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("2A9093E4-35C4-4B1B-A791-0D99DB56DD1D")
                    IMediaStreamSourceStartingRequest : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPosition( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceStartingRequestDeferral **deferral) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetActualStartPosition( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan position) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceStartingRequest = __uuidof(IMediaStreamSourceStartingRequest);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPosition )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestDeferral **deferral);
        
        HRESULT ( STDMETHODCALLTYPE *SetActualStartPosition )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan position);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_get_StartPosition(This,value)	\
    ( (This)->lpVtbl -> get_StartPosition(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_GetDeferral(This,deferral)	\
    ( (This)->lpVtbl -> GetDeferral(This,deferral) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_SetActualStartPosition(This,position)	\
    ( (This)->lpVtbl -> SetActualStartPosition(This,position) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0230 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceStartingEventArgs[] = L"Windows.Media.Core.IMediaStreamSourceStartingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0230 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0230_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0230_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceStartingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("F41468F2-C274-4940-A5BB-28A572452FA7")
                    IMediaStreamSourceStartingEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceStartingRequest **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceStartingEventArgs = __uuidof(IMediaStreamSourceStartingEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingRequest **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_get_Request(This,value)	\
    ( (This)->lpVtbl -> get_Request(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0231 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceSampleRequestDeferral[] = L"Windows.Media.Core.IMediaStreamSourceSampleRequestDeferral";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0231 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0231_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0231_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceSampleRequestDeferral */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("7895CC02-F982-43C8-9D16-C62D999319BE")
                    IMediaStreamSourceSampleRequestDeferral : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Complete( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceSampleRequestDeferral = __uuidof(IMediaStreamSourceSampleRequestDeferral);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferralVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferralVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferralVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0232 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceSampleRequest[] = L"Windows.Media.Core.IMediaStreamSourceSampleRequest";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0232 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0232_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0232_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceSampleRequest */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("4DB341A9-3501-4D9B-83F9-8F235C822532")
                    IMediaStreamSourceSampleRequest : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StreamDescriptor( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamDescriptor **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceSampleRequestDeferral **deferral) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Sample( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSample *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Sample( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSample **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ReportSampleProgress( 
                            /* [in] */ UINT32 progress) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceSampleRequest = __uuidof(IMediaStreamSourceSampleRequest);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamDescriptor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestDeferral **deferral);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Sample )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sample )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample **value);
        
        HRESULT ( STDMETHODCALLTYPE *ReportSampleProgress )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest * This,
            /* [in] */ UINT32 progress);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_get_StreamDescriptor(This,value)	\
    ( (This)->lpVtbl -> get_StreamDescriptor(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_GetDeferral(This,deferral)	\
    ( (This)->lpVtbl -> GetDeferral(This,deferral) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_put_Sample(This,value)	\
    ( (This)->lpVtbl -> put_Sample(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_get_Sample(This,value)	\
    ( (This)->lpVtbl -> get_Sample(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_ReportSampleProgress(This,progress)	\
    ( (This)->lpVtbl -> ReportSampleProgress(This,progress) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0233 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceSampleRequestedEventArgs[] = L"Windows.Media.Core.IMediaStreamSourceSampleRequestedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0233 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0233_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0233_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceSampleRequestedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("10F9BB9E-71C5-492F-847F-0DA1F35E81F8")
                    IMediaStreamSourceSampleRequestedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceSampleRequest **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceSampleRequestedEventArgs = __uuidof(IMediaStreamSourceSampleRequestedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequest **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_get_Request(This,value)	\
    ( (This)->lpVtbl -> get_Request(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSampleRequestedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0234 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceSwitchStreamsRequestDeferral[] = L"Windows.Media.Core.IMediaStreamSourceSwitchStreamsRequestDeferral";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0234 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0234_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0234_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequestDeferral */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("BEE3D835-A505-4F9A-B943-2B8CB1B4BBD9")
                    IMediaStreamSourceSwitchStreamsRequestDeferral : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Complete( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceSwitchStreamsRequestDeferral = __uuidof(IMediaStreamSourceSwitchStreamsRequestDeferral);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferralVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferralVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferralVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0235 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceSwitchStreamsRequest[] = L"Windows.Media.Core.IMediaStreamSourceSwitchStreamsRequest";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0235 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0235_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0235_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequest */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("41B8808E-38A9-4EC3-9BA0-B69B85501E90")
                    IMediaStreamSourceSwitchStreamsRequest : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OldStreamDescriptor( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamDescriptor **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewStreamDescriptor( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamDescriptor **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequestDeferral **deferral) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceSwitchStreamsRequest = __uuidof(IMediaStreamSourceSwitchStreamsRequest);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OldStreamDescriptor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewStreamDescriptor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestDeferral **deferral);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_get_OldStreamDescriptor(This,value)	\
    ( (This)->lpVtbl -> get_OldStreamDescriptor(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_get_NewStreamDescriptor(This,value)	\
    ( (This)->lpVtbl -> get_NewStreamDescriptor(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_GetDeferral(This,deferral)	\
    ( (This)->lpVtbl -> GetDeferral(This,deferral) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0236 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaStreamSourceSwitchStreamsRequestedEventArgs[] = L"Windows.Media.Core.IMediaStreamSourceSwitchStreamsRequestedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0236 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0236_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0236_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequestedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("42202B72-6EA1-4677-981E-350A0DA412AA")
                    IMediaStreamSourceSwitchStreamsRequestedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaStreamSourceSwitchStreamsRequest **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaStreamSourceSwitchStreamsRequestedEventArgs = __uuidof(IMediaStreamSourceSwitchStreamsRequestedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequest **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_get_Request(This,value)	\
    ( (This)->lpVtbl -> get_Request(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSourceSwitchStreamsRequestedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0237 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMseStreamSourceStatics[] = L"Windows.Media.Core.IMseStreamSourceStatics";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0237 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0237_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0237_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMseStreamSourceStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("465C679D-D570-43CE-BA21-0BFF5F3FBD0A")
                    IMseStreamSourceStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE IsContentTypeSupported( 
                            /* [in] */ __RPC__in HSTRING contentType,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMseStreamSourceStatics = __uuidof(IMseStreamSourceStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *IsContentTypeSupported )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics * This,
            /* [in] */ __RPC__in HSTRING contentType,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_IsContentTypeSupported(This,contentType,value)	\
    ( (This)->lpVtbl -> IsContentTypeSupported(This,contentType,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0238 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMseStreamSource[] = L"Windows.Media.Core.IMseStreamSource";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0238 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0238_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0238_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMseStreamSource */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMseStreamSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("B0B4198D-02F4-4923-88DD-81BC3F360FFA")
                    IMseStreamSource : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Opened( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Opened( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Ended( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Ended( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Closed( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Closed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceBuffers( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMseSourceBufferList **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActiveSourceBuffers( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMseSourceBufferList **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ReadyState( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MseReadyState *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Duration( 
                            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AddSourceBuffer( 
                            /* [in] */ __RPC__in HSTRING mimeType,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMseSourceBuffer **buffer) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE RemoveSourceBuffer( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMseSourceBuffer *buffer) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE EndOfStream( 
                            /* [in] */ ABI::Windows::Media::Core::MseEndOfStreamStatus status) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMseStreamSource = __uuidof(IMseStreamSource);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Opened )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Opened )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Ended )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Ended )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Closed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseStreamSource_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Closed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceBuffers )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSourceBuffers )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReadyState )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMseReadyState *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        HRESULT ( STDMETHODCALLTYPE *AddSourceBuffer )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in HSTRING mimeType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer **buffer);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveSourceBuffer )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer *buffer);
        
        HRESULT ( STDMETHODCALLTYPE *EndOfStream )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CMseEndOfStreamStatus status);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMseStreamSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_add_Opened(This,handler,token)	\
    ( (This)->lpVtbl -> add_Opened(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_remove_Opened(This,token)	\
    ( (This)->lpVtbl -> remove_Opened(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_add_Ended(This,handler,token)	\
    ( (This)->lpVtbl -> add_Ended(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_remove_Ended(This,token)	\
    ( (This)->lpVtbl -> remove_Ended(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_add_Closed(This,handler,token)	\
    ( (This)->lpVtbl -> add_Closed(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_remove_Closed(This,token)	\
    ( (This)->lpVtbl -> remove_Closed(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_get_SourceBuffers(This,value)	\
    ( (This)->lpVtbl -> get_SourceBuffers(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_get_ActiveSourceBuffers(This,value)	\
    ( (This)->lpVtbl -> get_ActiveSourceBuffers(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_get_ReadyState(This,value)	\
    ( (This)->lpVtbl -> get_ReadyState(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_get_Duration(This,value)	\
    ( (This)->lpVtbl -> get_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_put_Duration(This,value)	\
    ( (This)->lpVtbl -> put_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_AddSourceBuffer(This,mimeType,buffer)	\
    ( (This)->lpVtbl -> AddSourceBuffer(This,mimeType,buffer) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_RemoveSourceBuffer(This,buffer)	\
    ( (This)->lpVtbl -> RemoveSourceBuffer(This,buffer) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_EndOfStream(This,status)	\
    ( (This)->lpVtbl -> EndOfStream(This,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseStreamSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0239 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMseSourceBuffer[] = L"Windows.Media.Core.IMseSourceBuffer";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0239 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0239_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0239_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMseSourceBuffer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("0C1AA3E3-DF8D-4079-A3FE-6849184B4E2F")
                    IMseSourceBuffer : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_UpdateStarting( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_UpdateStarting( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Updated( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Updated( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_UpdateEnded( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_UpdateEnded( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_ErrorOccurred( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_ErrorOccurred( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Aborted( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Aborted( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Mode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MseAppendMode *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Mode( 
                            /* [in] */ ABI::Windows::Media::Core::MseAppendMode value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsUpdating( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Buffered( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TimestampOffset( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TimestampOffset( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AppendWindowStart( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AppendWindowStart( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AppendWindowEnd( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AppendWindowEnd( 
                            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AppendBuffer( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IBuffer *buffer) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AppendStream( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IInputStream *stream) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AppendStreamMaxSize( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IInputStream *stream,
                            /* [in] */ UINT64 maxSize) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Abort( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Remove( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan start,
                            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *end) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMseSourceBuffer = __uuidof(IMseSourceBuffer);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_UpdateStarting )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_UpdateStarting )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Updated )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Updated )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_UpdateEnded )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_UpdateEnded )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ErrorOccurred )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ErrorOccurred )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Aborted )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBuffer_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Aborted )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMseAppendMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CMseAppendMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUpdating )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Buffered )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CMseTimeRange **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimestampOffset )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimestampOffset )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppendWindowStart )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AppendWindowStart )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppendWindowEnd )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AppendWindowEnd )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        HRESULT ( STDMETHODCALLTYPE *AppendBuffer )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer *buffer);
        
        HRESULT ( STDMETHODCALLTYPE *AppendStream )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIInputStream *stream);
        
        HRESULT ( STDMETHODCALLTYPE *AppendStreamMaxSize )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIInputStream *stream,
            /* [in] */ UINT64 maxSize);
        
        HRESULT ( STDMETHODCALLTYPE *Abort )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan start,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *end);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_add_UpdateStarting(This,handler,token)	\
    ( (This)->lpVtbl -> add_UpdateStarting(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_remove_UpdateStarting(This,token)	\
    ( (This)->lpVtbl -> remove_UpdateStarting(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_add_Updated(This,handler,token)	\
    ( (This)->lpVtbl -> add_Updated(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_remove_Updated(This,token)	\
    ( (This)->lpVtbl -> remove_Updated(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_add_UpdateEnded(This,handler,token)	\
    ( (This)->lpVtbl -> add_UpdateEnded(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_remove_UpdateEnded(This,token)	\
    ( (This)->lpVtbl -> remove_UpdateEnded(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_add_ErrorOccurred(This,handler,token)	\
    ( (This)->lpVtbl -> add_ErrorOccurred(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_remove_ErrorOccurred(This,token)	\
    ( (This)->lpVtbl -> remove_ErrorOccurred(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_add_Aborted(This,handler,token)	\
    ( (This)->lpVtbl -> add_Aborted(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_remove_Aborted(This,token)	\
    ( (This)->lpVtbl -> remove_Aborted(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_get_Mode(This,value)	\
    ( (This)->lpVtbl -> get_Mode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_put_Mode(This,value)	\
    ( (This)->lpVtbl -> put_Mode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_get_IsUpdating(This,value)	\
    ( (This)->lpVtbl -> get_IsUpdating(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_get_Buffered(This,value)	\
    ( (This)->lpVtbl -> get_Buffered(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_get_TimestampOffset(This,value)	\
    ( (This)->lpVtbl -> get_TimestampOffset(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_put_TimestampOffset(This,value)	\
    ( (This)->lpVtbl -> put_TimestampOffset(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_get_AppendWindowStart(This,value)	\
    ( (This)->lpVtbl -> get_AppendWindowStart(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_put_AppendWindowStart(This,value)	\
    ( (This)->lpVtbl -> put_AppendWindowStart(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_get_AppendWindowEnd(This,value)	\
    ( (This)->lpVtbl -> get_AppendWindowEnd(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_put_AppendWindowEnd(This,value)	\
    ( (This)->lpVtbl -> put_AppendWindowEnd(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_AppendBuffer(This,buffer)	\
    ( (This)->lpVtbl -> AppendBuffer(This,buffer) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_AppendStream(This,stream)	\
    ( (This)->lpVtbl -> AppendStream(This,stream) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_AppendStreamMaxSize(This,stream,maxSize)	\
    ( (This)->lpVtbl -> AppendStreamMaxSize(This,stream,maxSize) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_Abort(This)	\
    ( (This)->lpVtbl -> Abort(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_Remove(This,start,end)	\
    ( (This)->lpVtbl -> Remove(This,start,end) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBuffer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0240 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMseSourceBufferList[] = L"Windows.Media.Core.IMseSourceBufferList";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0240 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0240_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0240_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMseSourceBufferList */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("95FAE8E7-A8E7-4EBF-8927-145E940BA511")
                    IMseSourceBufferList : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_SourceBufferAdded( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SourceBufferAdded( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_SourceBufferRemoved( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SourceBufferRemoved( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Buffers( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMseSourceBufferList = __uuidof(IMseSourceBufferList);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_SourceBufferAdded )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SourceBufferAdded )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SourceBufferRemoved )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMseSourceBufferList_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SourceBufferRemoved )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Buffers )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CMseSourceBuffer **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferListVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_add_SourceBufferAdded(This,handler,token)	\
    ( (This)->lpVtbl -> add_SourceBufferAdded(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_remove_SourceBufferAdded(This,token)	\
    ( (This)->lpVtbl -> remove_SourceBufferAdded(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_add_SourceBufferRemoved(This,handler,token)	\
    ( (This)->lpVtbl -> add_SourceBufferRemoved(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_remove_SourceBufferRemoved(This,token)	\
    ( (This)->lpVtbl -> remove_SourceBufferRemoved(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_get_Buffers(This,value)	\
    ( (This)->lpVtbl -> get_Buffers(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMseSourceBufferList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0241 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IHighDynamicRangeControl[] = L"Windows.Media.Core.IHighDynamicRangeControl";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0241 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0241_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0241_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IHighDynamicRangeControl */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("55F1A7AE-D957-4DC9-9D1C-8553A82A7D99")
                    IHighDynamicRangeControl : public IInspectable
                    {
                    public:
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IHighDynamicRangeControl = __uuidof(IHighDynamicRangeControl);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControlVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_put_Enabled(This,value)	\
    ( (This)->lpVtbl -> put_Enabled(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_get_Enabled(This,value)	\
    ( (This)->lpVtbl -> get_Enabled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0242 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ISceneAnalysisEffect[] = L"Windows.Media.Core.ISceneAnalysisEffect";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0242 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0242_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0242_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ISceneAnalysisEffect */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("C04BA319-CA41-4813-BFFD-7B08B0ED2557")
                    ISceneAnalysisEffect : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HighDynamicRangeAnalyzer( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IHighDynamicRangeControl **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DesiredAnalysisInterval( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DesiredAnalysisInterval( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_SceneAnalyzed( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *cookie) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SceneAnalyzed( 
                            /* [in] */ EventRegistrationToken cookie) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISceneAnalysisEffect = __uuidof(ISceneAnalysisEffect);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HighDynamicRangeAnalyzer )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeControl **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DesiredAnalysisInterval )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DesiredAnalysisInterval )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_SceneAnalyzed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CSceneAnalysisEffect_Windows__CMedia__CCore__CSceneAnalyzedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *cookie);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SceneAnalyzed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect * This,
            /* [in] */ EventRegistrationToken cookie);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_get_HighDynamicRangeAnalyzer(This,value)	\
    ( (This)->lpVtbl -> get_HighDynamicRangeAnalyzer(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_put_DesiredAnalysisInterval(This,value)	\
    ( (This)->lpVtbl -> put_DesiredAnalysisInterval(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_get_DesiredAnalysisInterval(This,value)	\
    ( (This)->lpVtbl -> get_DesiredAnalysisInterval(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_add_SceneAnalyzed(This,handler,cookie)	\
    ( (This)->lpVtbl -> add_SceneAnalyzed(This,handler,cookie) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_remove_SceneAnalyzed(This,cookie)	\
    ( (This)->lpVtbl -> remove_SceneAnalyzed(This,cookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffect_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0243 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IHighDynamicRangeOutput[] = L"Windows.Media.Core.IHighDynamicRangeOutput";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0243 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0243_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0243_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IHighDynamicRangeOutput */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("0F57806B-253B-4119-BB40-3A90E51384F7")
                    IHighDynamicRangeOutput : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Certainty( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FrameControllers( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IHighDynamicRangeOutput = __uuidof(IHighDynamicRangeOutput);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Certainty )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameControllers )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CDevices__CCore__CFrameController **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutputVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutputVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_get_Certainty(This,value)	\
    ( (This)->lpVtbl -> get_Certainty(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_get_FrameControllers(This,value)	\
    ( (This)->lpVtbl -> get_FrameControllers(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0244 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ISceneAnalysisEffectFrame[] = L"Windows.Media.Core.ISceneAnalysisEffectFrame";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0244 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0244_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0244_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ISceneAnalysisEffectFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("D8B10E4C-7FD9-42E1-85EB-6572C297C987")
                    ISceneAnalysisEffectFrame : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FrameControlValues( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Capture::ICapturedFrameControlValues **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HighDynamicRange( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IHighDynamicRangeOutput **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISceneAnalysisEffectFrame = __uuidof(ISceneAnalysisEffectFrame);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameControlValues )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCapture_CICapturedFrameControlValues **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HighDynamicRange )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIHighDynamicRangeOutput **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_get_FrameControlValues(This,value)	\
    ( (This)->lpVtbl -> get_FrameControlValues(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_get_HighDynamicRange(This,value)	\
    ( (This)->lpVtbl -> get_HighDynamicRange(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0245 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ISceneAnalyzedEventArgs[] = L"Windows.Media.Core.ISceneAnalyzedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0245 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0245_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0245_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ISceneAnalyzedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("146B9588-2851-45E4-AD55-44CF8DF8DB4D")
                    ISceneAnalyzedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ResultFrame( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ISceneAnalysisEffectFrame **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISceneAnalyzedEventArgs = __uuidof(ISceneAnalyzedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ResultFrame )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CISceneAnalysisEffectFrame **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_get_ResultFrame(This,value)	\
    ( (This)->lpVtbl -> get_ResultFrame(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISceneAnalyzedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0246 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IFaceDetectionEffectFrame[] = L"Windows.Media.Core.IFaceDetectionEffectFrame";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0246 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0246_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0246_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IFaceDetectionEffectFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("8AB08993-5DC8-447B-A247-5270BD802ECE")
                    IFaceDetectionEffectFrame : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DetectedFaces( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFaceDetectionEffectFrame = __uuidof(IFaceDetectionEffectFrame);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DetectedFaces )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CFaceAnalysis__CDetectedFace **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrameVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_get_DetectedFaces(This,value)	\
    ( (This)->lpVtbl -> get_DetectedFaces(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0247 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IFaceDetectedEventArgs[] = L"Windows.Media.Core.IFaceDetectedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0247 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0247_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0247_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IFaceDetectedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("19918426-C65B-46BA-85F8-13880576C90A")
                    IFaceDetectedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ResultFrame( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IFaceDetectionEffectFrame **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFaceDetectedEventArgs = __uuidof(IFaceDetectedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ResultFrame )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectFrame **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_get_ResultFrame(This,value)	\
    ( (This)->lpVtbl -> get_ResultFrame(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0248 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IFaceDetectionEffect[] = L"Windows.Media.Core.IFaceDetectionEffect";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0248 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0248_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0248_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IFaceDetectionEffect */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("AE15EBD2-0542-42A9-BC90-F283A29F46C1")
                    IFaceDetectionEffect : public IInspectable
                    {
                    public:
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DesiredDetectionInterval( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DesiredDetectionInterval( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_FaceDetected( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *cookie) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_FaceDetected( 
                            /* [in] */ EventRegistrationToken cookie) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFaceDetectionEffect = __uuidof(IFaceDetectionEffect);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DesiredDetectionInterval )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DesiredDetectionInterval )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_FaceDetected )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CFaceDetectionEffect_Windows__CMedia__CCore__CFaceDetectedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *cookie);
        
        HRESULT ( STDMETHODCALLTYPE *remove_FaceDetected )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect * This,
            /* [in] */ EventRegistrationToken cookie);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_put_Enabled(This,value)	\
    ( (This)->lpVtbl -> put_Enabled(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_get_Enabled(This,value)	\
    ( (This)->lpVtbl -> get_Enabled(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_put_DesiredDetectionInterval(This,value)	\
    ( (This)->lpVtbl -> put_DesiredDetectionInterval(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_get_DesiredDetectionInterval(This,value)	\
    ( (This)->lpVtbl -> get_DesiredDetectionInterval(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_add_FaceDetected(This,handler,cookie)	\
    ( (This)->lpVtbl -> add_FaceDetected(This,handler,cookie) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_remove_FaceDetected(This,cookie)	\
    ( (This)->lpVtbl -> remove_FaceDetected(This,cookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffect_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0249 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IFaceDetectionEffectDefinition[] = L"Windows.Media.Core.IFaceDetectionEffectDefinition";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0249 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0249_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0249_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IFaceDetectionEffectDefinition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("43DCA081-B848-4F33-B702-1FD2624FB016")
                    IFaceDetectionEffectDefinition : public IInspectable
                    {
                    public:
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DetectionMode( 
                            /* [in] */ ABI::Windows::Media::Core::FaceDetectionMode value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DetectionMode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::FaceDetectionMode *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SynchronousDetectionEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SynchronousDetectionEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFaceDetectionEffectDefinition = __uuidof(IFaceDetectionEffectDefinition);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DetectionMode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CFaceDetectionMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DetectionMode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CFaceDetectionMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SynchronousDetectionEnabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SynchronousDetectionEnabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinitionVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_put_DetectionMode(This,value)	\
    ( (This)->lpVtbl -> put_DetectionMode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_get_DetectionMode(This,value)	\
    ( (This)->lpVtbl -> get_DetectionMode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_put_SynchronousDetectionEnabled(This,value)	\
    ( (This)->lpVtbl -> put_SynchronousDetectionEnabled(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_get_SynchronousDetectionEnabled(This,value)	\
    ( (This)->lpVtbl -> get_SynchronousDetectionEnabled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIFaceDetectionEffectDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0250 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IVideoStabilizationEffectEnabledChangedEventArgs[] = L"Windows.Media.Core.IVideoStabilizationEffectEnabledChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0250 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0250_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0250_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IVideoStabilizationEffectEnabledChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("187EFF28-67BB-4713-B900-4168DA164529")
                    IVideoStabilizationEffectEnabledChangedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Reason( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::VideoStabilizationEffectEnabledChangedReason *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVideoStabilizationEffectEnabledChangedEventArgs = __uuidof(IVideoStabilizationEffectEnabledChangedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Reason )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CVideoStabilizationEffectEnabledChangedReason *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_get_Reason(This,value)	\
    ( (This)->lpVtbl -> get_Reason(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectEnabledChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0251 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IVideoStabilizationEffect[] = L"Windows.Media.Core.IVideoStabilizationEffect";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0251 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0251_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0251_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IVideoStabilizationEffect */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("0808A650-9698-4E57-877B-BD7CB2EE0F8A")
                    IVideoStabilizationEffect : public IInspectable
                    {
                    public:
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_EnabledChanged( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *cookie) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_EnabledChanged( 
                            /* [in] */ EventRegistrationToken cookie) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetRecommendedStreamConfiguration( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Devices::IVideoDeviceController *controller,
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::MediaProperties::IVideoEncodingProperties *desiredProperties,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Capture::IVideoStreamConfiguration **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVideoStabilizationEffect = __uuidof(IVideoStabilizationEffect);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_EnabledChanged )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CVideoStabilizationEffect_Windows__CMedia__CCore__CVideoStabilizationEffectEnabledChangedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *cookie);
        
        HRESULT ( STDMETHODCALLTYPE *remove_EnabledChanged )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [in] */ EventRegistrationToken cookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecommendedStreamConfiguration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CDevices_CIVideoDeviceController *controller,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CMediaProperties_CIVideoEncodingProperties *desiredProperties,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCapture_CIVideoStreamConfiguration **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_put_Enabled(This,value)	\
    ( (This)->lpVtbl -> put_Enabled(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_get_Enabled(This,value)	\
    ( (This)->lpVtbl -> get_Enabled(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_add_EnabledChanged(This,handler,cookie)	\
    ( (This)->lpVtbl -> add_EnabledChanged(This,handler,cookie) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_remove_EnabledChanged(This,cookie)	\
    ( (This)->lpVtbl -> remove_EnabledChanged(This,cookie) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_GetRecommendedStreamConfiguration(This,controller,desiredProperties,value)	\
    ( (This)->lpVtbl -> GetRecommendedStreamConfiguration(This,controller,desiredProperties,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIVideoStabilizationEffect_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0252 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSourceError[] = L"Windows.Media.Core.IMediaSourceError";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0252 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0252_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0252_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSourceError */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSourceError;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("5C0A8965-37C5-4E9D-8D21-1CDEE90CECC6")
                    IMediaSourceError : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedError( 
                            /* [out][retval] */ __RPC__out HRESULT *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSourceError = __uuidof(IMediaSourceError);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendedError )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError * This,
            /* [out][retval] */ __RPC__out HRESULT *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSourceErrorVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceErrorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_get_ExtendedError(This,value)	\
    ( (This)->lpVtbl -> get_ExtendedError(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceError_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0253 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSourceOpenOperationCompletedEventArgs[] = L"Windows.Media.Core.IMediaSourceOpenOperationCompletedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0253 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0253_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0253_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSourceOpenOperationCompletedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("FC682CEB-E281-477C-A8E0-1ACD654114C8")
                    IMediaSourceOpenOperationCompletedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Error( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSourceError **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSourceOpenOperationCompletedEventArgs = __uuidof(IMediaSourceOpenOperationCompletedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Error )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSourceError **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_get_Error(This,value)	\
    ( (This)->lpVtbl -> get_Error(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceOpenOperationCompletedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0254 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSourceStateChangedEventArgs[] = L"Windows.Media.Core.IMediaSourceStateChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0254 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0254_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0254_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSourceStateChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("0A30AF82-9071-4BAC-BC39-CA2A93B717A9")
                    IMediaSourceStateChangedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OldState( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MediaSourceState *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewState( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MediaSourceState *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSourceStateChangedEventArgs = __uuidof(IMediaSourceStateChangedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OldState )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMediaSourceState *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewState )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMediaSourceState *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_get_OldState(This,value)	\
    ( (This)->lpVtbl -> get_OldState(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_get_NewState(This,value)	\
    ( (This)->lpVtbl -> get_NewState(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStateChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0255 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSourceStatics[] = L"Windows.Media.Core.IMediaSourceStatics";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0255 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0255_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0255_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSourceStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("F77D6FA4-4652-410E-B1D8-E9A5E245A45C")
                    IMediaSourceStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromAdaptiveMediaSource( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Streaming::Adaptive::IAdaptiveMediaSource *mediaSource,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromMediaStreamSource( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaStreamSource *mediaSource,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromMseStreamSource( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMseStreamSource *mediaSource,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromIMediaSource( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaSource *mediaSource,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromStorageFile( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::IStorageFile *file,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromStream( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStream *stream,
                            /* [in] */ __RPC__in HSTRING contentType,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromStreamReference( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference *stream,
                            /* [in] */ __RPC__in HSTRING contentType,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromUri( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *uri,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSourceStatics = __uuidof(IMediaSourceStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromAdaptiveMediaSource )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource *mediaSource,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromMediaStreamSource )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource *mediaSource,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromMseStreamSource )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMseStreamSource *mediaSource,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromIMediaSource )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource *mediaSource,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromStorageFile )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CIStorageFile *file,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromStream )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream *stream,
            /* [in] */ __RPC__in HSTRING contentType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromStreamReference )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference *stream,
            /* [in] */ __RPC__in HSTRING contentType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromUri )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *uri,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromAdaptiveMediaSource(This,mediaSource,result)	\
    ( (This)->lpVtbl -> CreateFromAdaptiveMediaSource(This,mediaSource,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromMediaStreamSource(This,mediaSource,result)	\
    ( (This)->lpVtbl -> CreateFromMediaStreamSource(This,mediaSource,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromMseStreamSource(This,mediaSource,result)	\
    ( (This)->lpVtbl -> CreateFromMseStreamSource(This,mediaSource,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromIMediaSource(This,mediaSource,result)	\
    ( (This)->lpVtbl -> CreateFromIMediaSource(This,mediaSource,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromStorageFile(This,file,result)	\
    ( (This)->lpVtbl -> CreateFromStorageFile(This,file,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromStream(This,stream,contentType,result)	\
    ( (This)->lpVtbl -> CreateFromStream(This,stream,contentType,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromStreamReference(This,stream,contentType,result)	\
    ( (This)->lpVtbl -> CreateFromStreamReference(This,stream,contentType,result) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_CreateFromUri(This,uri,result)	\
    ( (This)->lpVtbl -> CreateFromUri(This,uri,result) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0256 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSourceStatics2[] = L"Windows.Media.Core.IMediaSourceStatics2";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0256 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0256_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0256_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSourceStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("EEE161A4-7F13-4896-B8CB-DF0DE5BCB9F1")
                    IMediaSourceStatics2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromMediaBinder( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaBinder *binder,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **result) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSourceStatics2 = __uuidof(IMediaSourceStatics2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromMediaBinder )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaBinder *binder,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **result);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_CreateFromMediaBinder(This,binder,result)	\
    ( (This)->lpVtbl -> CreateFromMediaBinder(This,binder,result) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSourceStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0257 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaBinder[] = L"Windows.Media.Core.IMediaBinder";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0257 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0257_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0257_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaBinder */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaBinder */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaBinder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("2B7E40AA-DE07-424F-83F1-F1DE46C4FA2E")
                    IMediaBinder : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Binding( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Binding( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Token( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Token( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaSource2 **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaBinder = __uuidof(IMediaBinder);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaBinderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Binding )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBinder_Windows__CMedia__CCore__CMediaBindingEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Binding )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Token )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Token )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBinder * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaBinderVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaBinder
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaBinderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_add_Binding(This,handler,token)	\
    ( (This)->lpVtbl -> add_Binding(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_remove_Binding(This,token)	\
    ( (This)->lpVtbl -> remove_Binding(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_get_Token(This,value)	\
    ( (This)->lpVtbl -> get_Token(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_put_Token(This,value)	\
    ( (This)->lpVtbl -> put_Token(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBinder_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaBinder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0258 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaBindingEventArgs[] = L"Windows.Media.Core.IMediaBindingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0258 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0258_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0258_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaBindingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("B61CB25A-1B6D-4630-A86D-2F0837F712E5")
                    IMediaBindingEventArgs : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Canceled( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Canceled( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MediaBinder( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaBinder **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IDeferral **deferral) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetUri( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *uri) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetStream( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStream *stream,
                            /* [in] */ __RPC__in HSTRING contentType) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetStreamReference( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference *stream,
                            /* [in] */ __RPC__in HSTRING contentType) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaBindingEventArgs = __uuidof(IMediaBindingEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Canceled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaBindingEventArgs_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Canceled )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MediaBinder )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaBinder **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIDeferral **deferral);
        
        HRESULT ( STDMETHODCALLTYPE *SetUri )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *uri);
        
        HRESULT ( STDMETHODCALLTYPE *SetStream )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream *stream,
            /* [in] */ __RPC__in HSTRING contentType);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamReference )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference *stream,
            /* [in] */ __RPC__in HSTRING contentType);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_add_Canceled(This,handler,token)	\
    ( (This)->lpVtbl -> add_Canceled(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_remove_Canceled(This,token)	\
    ( (This)->lpVtbl -> remove_Canceled(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_get_MediaBinder(This,value)	\
    ( (This)->lpVtbl -> get_MediaBinder(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_GetDeferral(This,deferral)	\
    ( (This)->lpVtbl -> GetDeferral(This,deferral) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_SetUri(This,uri)	\
    ( (This)->lpVtbl -> SetUri(This,uri) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_SetStream(This,stream,contentType)	\
    ( (This)->lpVtbl -> SetStream(This,stream,contentType) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_SetStreamReference(This,stream,contentType)	\
    ( (This)->lpVtbl -> SetStreamReference(This,stream,contentType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaBindingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0259 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSource2[] = L"Windows.Media.Core.IMediaSource2";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0259 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0259_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0259_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSource2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSource2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("2EB61048-655F-4C37-B813-B4E45DFA0ABE")
                    IMediaSource2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_OpenOperationCompleted( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_OpenOperationCompleted( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CustomProperties( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::Collections::IPropertySet **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExternalTimedTextSources( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExternalTimedMetadataTracks( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSource2 = __uuidof(IMediaSource2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSource2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_OpenOperationCompleted )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceOpenOperationCompletedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_OpenOperationCompleted )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CustomProperties )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExternalTimedTextSources )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedTextSource **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExternalTimedMetadataTracks )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CMedia__CCore__CTimedMetadataTrack **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSource2Vtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSource2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_add_OpenOperationCompleted(This,handler,token)	\
    ( (This)->lpVtbl -> add_OpenOperationCompleted(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_remove_OpenOperationCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_OpenOperationCompleted(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_get_CustomProperties(This,value)	\
    ( (This)->lpVtbl -> get_CustomProperties(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_get_Duration(This,value)	\
    ( (This)->lpVtbl -> get_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_get_IsOpen(This,value)	\
    ( (This)->lpVtbl -> get_IsOpen(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_get_ExternalTimedTextSources(This,value)	\
    ( (This)->lpVtbl -> get_ExternalTimedTextSources(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource2_get_ExternalTimedMetadataTracks(This,value)	\
    ( (This)->lpVtbl -> get_ExternalTimedMetadataTracks(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0260 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaSource3[] = L"Windows.Media.Core.IMediaSource3";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0260 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0260_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0260_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaSource3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaSource3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("B59F0D9B-4B6E-41ED-BBB4-7C7509A994AD")
                    IMediaSource3 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_StateChanged( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_StateChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_State( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MediaSourceState *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaSource3 = __uuidof(IMediaSource3);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSource3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_StateChanged )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CMediaSource_Windows__CMedia__CCore__CMediaSourceStateChangedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_StateChanged )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMediaSourceState *value);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaSource3 * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaSource3Vtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaSource3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_add_StateChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_StateChanged(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_remove_StateChanged(This,token)	\
    ( (This)->lpVtbl -> remove_StateChanged(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_get_State(This,value)	\
    ( (This)->lpVtbl -> get_State(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource3_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0261 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaCue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaCue[] = L"Windows.Media.Core.IMediaCue";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaCue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0261 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0261_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0261_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaCue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaCue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaCue */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaCue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaCue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("C7D15E5D-59DC-431F-A0EE-27744323B36D")
                    IMediaCue : public IInspectable
                    {
                    public:
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartTime( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartTime( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Duration( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Id( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Id( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaCue = __uuidof(IMediaCue);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaCueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartTime )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartTime )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaCueVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaCue
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaCueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_put_StartTime(This,value)	\
    ( (This)->lpVtbl -> put_StartTime(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_get_StartTime(This,value)	\
    ( (This)->lpVtbl -> get_StartTime(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_put_Duration(This,value)	\
    ( (This)->lpVtbl -> put_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_get_Duration(This,value)	\
    ( (This)->lpVtbl -> get_Duration(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_put_Id(This,value)	\
    ( (This)->lpVtbl -> put_Id(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCue_get_Id(This,value)	\
    ( (This)->lpVtbl -> get_Id(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaCue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0262 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextCue[] = L"Windows.Media.Core.ITimedTextCue";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0262 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0262_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0262_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextCue */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextCue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextCue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("51C79E51-3B86-494D-B359-BB2EA7ACA9A9")
                    ITimedTextCue : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CueRegion( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextRegion **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CueRegion( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextRegion *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CueStyle( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextStyle **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CueStyle( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextStyle *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Lines( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CMedia__CCore__CTimedTextLine **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextCue = __uuidof(ITimedTextCue);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextCueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CueRegion )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CueRegion )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CueStyle )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CueStyle )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Lines )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextCue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CMedia__CCore__CTimedTextLine **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextCueVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextCue
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextCueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_get_CueRegion(This,value)	\
    ( (This)->lpVtbl -> get_CueRegion(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_put_CueRegion(This,value)	\
    ( (This)->lpVtbl -> put_CueRegion(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_get_CueStyle(This,value)	\
    ( (This)->lpVtbl -> get_CueStyle(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_put_CueStyle(This,value)	\
    ( (This)->lpVtbl -> put_CueStyle(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextCue_get_Lines(This,value)	\
    ( (This)->lpVtbl -> get_Lines(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextCue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0263 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextRegion[] = L"Windows.Media.Core.ITimedTextRegion";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0263 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0263_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0263_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextRegion */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextRegion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("1ED0881F-8A06-4222-9F59-B21BF40124B4")
                    ITimedTextRegion : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Position( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextPoint *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Position( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextPoint value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Extent( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextSize *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Extent( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextSize value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Background( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Background( 
                            /* [in] */ ABI::Windows::UI::Color value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_WritingMode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextWritingMode *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_WritingMode( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextWritingMode value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DisplayAlignment( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextDisplayAlignment *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DisplayAlignment( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextDisplayAlignment value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineHeight( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextDouble *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineHeight( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextDouble value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOverflowClipped( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsOverflowClipped( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextPadding *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextPadding value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrapping( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextWrapping *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextWrapping( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextWrapping value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZIndex( 
                            /* [out][retval] */ __RPC__out INT32 *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZIndex( 
                            /* [in] */ INT32 value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollMode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextScrollMode *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScrollMode( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextScrollMode value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextRegion = __uuidof(ITimedTextRegion);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextRegionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Extent )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextSize *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Extent )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextSize value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Background )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WritingMode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextWritingMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_WritingMode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextWritingMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayAlignment )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextDisplayAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayAlignment )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextDisplayAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineHeight )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineHeight )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOverflowClipped )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsOverflowClipped )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextPadding *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextPadding value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextWrapping *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextWrapping value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZIndex )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZIndex )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollMode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextScrollMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScrollMode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextScrollMode value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextRegionVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextRegionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_Name(This,value)	\
    ( (This)->lpVtbl -> put_Name(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_Position(This,value)	\
    ( (This)->lpVtbl -> get_Position(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_Position(This,value)	\
    ( (This)->lpVtbl -> put_Position(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_Extent(This,value)	\
    ( (This)->lpVtbl -> get_Extent(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_Extent(This,value)	\
    ( (This)->lpVtbl -> put_Extent(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_Background(This,value)	\
    ( (This)->lpVtbl -> get_Background(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_Background(This,value)	\
    ( (This)->lpVtbl -> put_Background(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_WritingMode(This,value)	\
    ( (This)->lpVtbl -> get_WritingMode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_WritingMode(This,value)	\
    ( (This)->lpVtbl -> put_WritingMode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_DisplayAlignment(This,value)	\
    ( (This)->lpVtbl -> get_DisplayAlignment(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_DisplayAlignment(This,value)	\
    ( (This)->lpVtbl -> put_DisplayAlignment(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_LineHeight(This,value)	\
    ( (This)->lpVtbl -> get_LineHeight(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_LineHeight(This,value)	\
    ( (This)->lpVtbl -> put_LineHeight(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_IsOverflowClipped(This,value)	\
    ( (This)->lpVtbl -> get_IsOverflowClipped(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_IsOverflowClipped(This,value)	\
    ( (This)->lpVtbl -> put_IsOverflowClipped(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> get_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> put_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_ZIndex(This,value)	\
    ( (This)->lpVtbl -> get_ZIndex(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_ZIndex(This,value)	\
    ( (This)->lpVtbl -> put_ZIndex(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_get_ScrollMode(This,value)	\
    ( (This)->lpVtbl -> get_ScrollMode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_put_ScrollMode(This,value)	\
    ( (This)->lpVtbl -> put_ScrollMode(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextRegion_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0264 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextStyle[] = L"Windows.Media.Core.ITimedTextStyle";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0264 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0264_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0264_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextStyle */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("1BB2384D-A825-40C2-A7F5-281EAEDF3B55")
                    ITimedTextStyle : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamily( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFamily( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextDouble *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextDouble value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeight( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextWeight *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontWeight( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextWeight value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Foreground( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Foreground( 
                            /* [in] */ ABI::Windows::UI::Color value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Background( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Background( 
                            /* [in] */ ABI::Windows::UI::Color value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsBackgroundAlwaysShown( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsBackgroundAlwaysShown( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FlowDirection( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextFlowDirection *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FlowDirection( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextFlowDirection value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineAlignment( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextLineAlignment *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineAlignment( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextLineAlignment value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OutlineColor( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OutlineColor( 
                            /* [in] */ ABI::Windows::UI::Color value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OutlineThickness( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextDouble *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OutlineThickness( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextDouble value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OutlineRadius( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedTextDouble *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OutlineRadius( 
                            /* [in] */ ABI::Windows::Media::Core::TimedTextDouble value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextStyle = __uuidof(ITimedTextStyle);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextWeight *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextWeight value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Foreground )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Foreground )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Background )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBackgroundAlwaysShown )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBackgroundAlwaysShown )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FlowDirection )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextFlowDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FlowDirection )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextFlowDirection value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineAlignment )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextLineAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineAlignment )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextLineAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutlineColor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OutlineColor )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutlineThickness )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OutlineThickness )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutlineRadius )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OutlineRadius )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle * This,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedTextDouble value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextStyleVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_Name(This,value)	\
    ( (This)->lpVtbl -> put_Name(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_FontFamily(This,value)	\
    ( (This)->lpVtbl -> get_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_FontFamily(This,value)	\
    ( (This)->lpVtbl -> put_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_FontSize(This,value)	\
    ( (This)->lpVtbl -> get_FontSize(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_FontSize(This,value)	\
    ( (This)->lpVtbl -> put_FontSize(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_FontWeight(This,value)	\
    ( (This)->lpVtbl -> get_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_FontWeight(This,value)	\
    ( (This)->lpVtbl -> put_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_Foreground(This,value)	\
    ( (This)->lpVtbl -> get_Foreground(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_Foreground(This,value)	\
    ( (This)->lpVtbl -> put_Foreground(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_Background(This,value)	\
    ( (This)->lpVtbl -> get_Background(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_Background(This,value)	\
    ( (This)->lpVtbl -> put_Background(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_IsBackgroundAlwaysShown(This,value)	\
    ( (This)->lpVtbl -> get_IsBackgroundAlwaysShown(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_IsBackgroundAlwaysShown(This,value)	\
    ( (This)->lpVtbl -> put_IsBackgroundAlwaysShown(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_FlowDirection(This,value)	\
    ( (This)->lpVtbl -> get_FlowDirection(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_FlowDirection(This,value)	\
    ( (This)->lpVtbl -> put_FlowDirection(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_LineAlignment(This,value)	\
    ( (This)->lpVtbl -> get_LineAlignment(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_LineAlignment(This,value)	\
    ( (This)->lpVtbl -> put_LineAlignment(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_OutlineColor(This,value)	\
    ( (This)->lpVtbl -> get_OutlineColor(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_OutlineColor(This,value)	\
    ( (This)->lpVtbl -> put_OutlineColor(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_OutlineThickness(This,value)	\
    ( (This)->lpVtbl -> get_OutlineThickness(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_OutlineThickness(This,value)	\
    ( (This)->lpVtbl -> put_OutlineThickness(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_get_OutlineRadius(This,value)	\
    ( (This)->lpVtbl -> get_OutlineRadius(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_put_OutlineRadius(This,value)	\
    ( (This)->lpVtbl -> put_OutlineRadius(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0265 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextSubformat[] = L"Windows.Media.Core.ITimedTextSubformat";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0265 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0265_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0265_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextSubformat */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("D713502F-3261-4722-A0C2-B937B2390F14")
                    ITimedTextSubformat : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartIndex( 
                            /* [out][retval] */ __RPC__out INT32 *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartIndex( 
                            /* [in] */ INT32 value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
                            /* [out][retval] */ __RPC__out INT32 *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Length( 
                            /* [in] */ INT32 value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SubformatStyle( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextStyle **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SubformatStyle( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::ITimedTextStyle *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextSubformat = __uuidof(ITimedTextSubformat);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartIndex )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartIndex )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Length )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubformatStyle )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SubformatStyle )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextStyle *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformatVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_get_StartIndex(This,value)	\
    ( (This)->lpVtbl -> get_StartIndex(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_put_StartIndex(This,value)	\
    ( (This)->lpVtbl -> put_StartIndex(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_get_Length(This,value)	\
    ( (This)->lpVtbl -> get_Length(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_put_Length(This,value)	\
    ( (This)->lpVtbl -> put_Length(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_get_SubformatStyle(This,value)	\
    ( (This)->lpVtbl -> get_SubformatStyle(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_put_SubformatStyle(This,value)	\
    ( (This)->lpVtbl -> put_SubformatStyle(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSubformat_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0266 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextLine[] = L"Windows.Media.Core.ITimedTextLine";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0266 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0266_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0266_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextLine */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextLine */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextLine;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("978D7CE2-7308-4C66-BE50-65777289F5DF")
                    ITimedTextLine : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Text( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Subformats( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextLine = __uuidof(ITimedTextLine);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextLineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Subformats )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextLine * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CMedia__CCore__CTimedTextSubformat **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextLineVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextLine
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextLineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_get_Text(This,value)	\
    ( (This)->lpVtbl -> get_Text(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_put_Text(This,value)	\
    ( (This)->lpVtbl -> put_Text(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextLine_get_Subformats(This,value)	\
    ( (This)->lpVtbl -> get_Subformats(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextLine_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0267 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ISingleSelectMediaTrackList[] = L"Windows.Media.Core.ISingleSelectMediaTrackList";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0267 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0267_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0267_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ISingleSelectMediaTrackList */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("77206F1F-C34F-494F-8077-2BAD9FF4ECF1")
                    ISingleSelectMediaTrackList : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_SelectedIndexChanged( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SelectedIndexChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectedIndex( 
                            /* [in] */ INT32 value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedIndex( 
                            /* [out][retval] */ __RPC__out INT32 *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISingleSelectMediaTrackList = __uuidof(ISingleSelectMediaTrackList);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_SelectedIndexChanged )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CISingleSelectMediaTrackList_IInspectable *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SelectedIndexChanged )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedIndex )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedIndex )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackListVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_add_SelectedIndexChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_SelectedIndexChanged(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_remove_SelectedIndexChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SelectedIndexChanged(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_put_SelectedIndex(This,value)	\
    ( (This)->lpVtbl -> put_SelectedIndex(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_get_SelectedIndex(This,value)	\
    ( (This)->lpVtbl -> get_SelectedIndex(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CISingleSelectMediaTrackList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0268 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaTrack[] = L"Windows.Media.Core.IMediaTrack";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0268 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0268_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0268_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaTrack */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaTrack */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("03E1FAFC-C931-491A-B46B-C10EE8C256B7")
                    IMediaTrack : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Id( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TrackKind( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::MediaTrackKind *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Label( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Label( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaTrack = __uuidof(IMediaTrack);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackKind )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CMediaTrackKind *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Label )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Label )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaTrack * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaTrackVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaTrack
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_get_Id(This,value)	\
    ( (This)->lpVtbl -> get_Id(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_get_Language(This,value)	\
    ( (This)->lpVtbl -> get_Language(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_get_TrackKind(This,value)	\
    ( (This)->lpVtbl -> get_TrackKind(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_put_Label(This,value)	\
    ( (This)->lpVtbl -> put_Label(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaTrack_get_Label(This,value)	\
    ( (This)->lpVtbl -> get_Label(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0269 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedMetadataTrackError[] = L"Windows.Media.Core.ITimedMetadataTrackError";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0269 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0269_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0269_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedMetadataTrackError */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("B3767915-4114-4819-B9D9-DD76089E72F8")
                    ITimedMetadataTrackError : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ErrorCode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedMetadataTrackErrorCode *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedError( 
                            /* [out][retval] */ __RPC__out HRESULT *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedMetadataTrackError = __uuidof(ITimedMetadataTrackError);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorCode )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedMetadataTrackErrorCode *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendedError )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError * This,
            /* [out][retval] */ __RPC__out HRESULT *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackErrorVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackErrorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_get_ErrorCode(This,value)	\
    ( (This)->lpVtbl -> get_ErrorCode(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_get_ExtendedError(This,value)	\
    ( (This)->lpVtbl -> get_ExtendedError(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0270 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IMediaCueEventArgs[] = L"Windows.Media.Core.IMediaCueEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0270 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0270_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0270_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IMediaCueEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("D12F47F7-5FA4-4E68-9FE5-32160DCEE57E")
                    IMediaCueEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cue( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::IMediaCue **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaCueEventArgs = __uuidof(IMediaCueEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cue )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCue **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_get_Cue(This,value)	\
    ( (This)->lpVtbl -> get_Cue(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIMediaCueEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0271 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedMetadataTrackFailedEventArgs[] = L"Windows.Media.Core.ITimedMetadataTrackFailedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0271 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0271_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0271_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedMetadataTrackFailedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("A57FC9D1-6789-4D4D-B07F-84B4F31ACB70")
                    ITimedMetadataTrackFailedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Error( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedMetadataTrackError **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedMetadataTrackFailedEventArgs = __uuidof(ITimedMetadataTrackFailedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Error )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_get_Error(This,value)	\
    ( (This)->lpVtbl -> get_Error(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFailedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0272 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CIDataCue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_IDataCue[] = L"Windows.Media.Core.IDataCue";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CIDataCue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0272 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0272_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0272_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIDataCue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIDataCue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CIDataCue */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::IDataCue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CIDataCue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("7C7F676D-1FBC-4E2D-9A87-EE38BD1DC637")
                    IDataCue : public IInspectable
                    {
                    public:
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Data( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IBuffer *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Storage::Streams::IBuffer **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataCue = __uuidof(IDataCue);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CIDataCueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Data )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CIDataCue * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CIDataCueVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CIDataCue
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CIDataCueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_put_Data(This,value)	\
    ( (This)->lpVtbl -> put_Data(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CIDataCue_get_Data(This,value)	\
    ( (This)->lpVtbl -> get_Data(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CIDataCue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0273 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedMetadataTrackFactory[] = L"Windows.Media.Core.ITimedMetadataTrackFactory";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0273 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0273_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0273_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedMetadataTrackFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("8DD57611-97B3-4E1F-852C-0F482C81AD26")
                    ITimedMetadataTrackFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create( 
                            /* [in] */ __RPC__in HSTRING id,
                            /* [in] */ __RPC__in HSTRING language,
                            /* [in] */ ABI::Windows::Media::Core::TimedMetadataKind kind,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedMetadataTrack **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedMetadataTrackFactory = __uuidof(ITimedMetadataTrackFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory * This,
            /* [in] */ __RPC__in HSTRING id,
            /* [in] */ __RPC__in HSTRING language,
            /* [in] */ __x_ABI_CWindows_CMedia_CCore_CTimedMetadataKind kind,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_Create(This,id,language,kind,value)	\
    ( (This)->lpVtbl -> Create(This,id,language,kind,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0274 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedMetadataTrack[] = L"Windows.Media.Core.ITimedMetadataTrack";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0274 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0274_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0274_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedMetadataTrack */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("9E6AED9E-F67A-49A9-B330-CF03B0E9CF07")
                    ITimedMetadataTrack : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_CueEntered( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_CueEntered( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_CueExited( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_CueExited( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_TrackFailed( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_TrackFailed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cues( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActiveCues( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TimedMetadataKind( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Media::Core::TimedMetadataKind *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DispatchType( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AddCue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaCue *cue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE RemoveCue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaCue *cue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedMetadataTrack = __uuidof(ITimedMetadataTrack);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_CueEntered )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CueEntered )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_CueExited )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CMediaCueEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CueExited )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_TrackFailed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedMetadataTrack_Windows__CMedia__CCore__CTimedMetadataTrackFailedEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_TrackFailed )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ EventRegistrationToken token);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cues )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveCues )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CIMediaCue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimedMetadataKind )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CCore_CTimedMetadataKind *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DispatchType )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        HRESULT ( STDMETHODCALLTYPE *AddCue )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCue *cue);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCue )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaCue *cue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_add_CueEntered(This,handler,token)	\
    ( (This)->lpVtbl -> add_CueEntered(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_remove_CueEntered(This,token)	\
    ( (This)->lpVtbl -> remove_CueEntered(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_add_CueExited(This,handler,token)	\
    ( (This)->lpVtbl -> add_CueExited(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_remove_CueExited(This,token)	\
    ( (This)->lpVtbl -> remove_CueExited(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_add_TrackFailed(This,handler,token)	\
    ( (This)->lpVtbl -> add_TrackFailed(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_remove_TrackFailed(This,token)	\
    ( (This)->lpVtbl -> remove_TrackFailed(This,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_get_Cues(This,value)	\
    ( (This)->lpVtbl -> get_Cues(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_get_ActiveCues(This,value)	\
    ( (This)->lpVtbl -> get_ActiveCues(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_get_TimedMetadataKind(This,value)	\
    ( (This)->lpVtbl -> get_TimedMetadataKind(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_get_DispatchType(This,value)	\
    ( (This)->lpVtbl -> get_DispatchType(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_AddCue(This,cue)	\
    ( (This)->lpVtbl -> AddCue(This,cue) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_RemoveCue(This,cue)	\
    ( (This)->lpVtbl -> RemoveCue(This,cue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrack_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0275 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextSourceResolveResultEventArgs[] = L"Windows.Media.Core.ITimedTextSourceResolveResultEventArgs";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0275 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0275_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0275_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextSourceResolveResultEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("48907C9C-DCD8-4C33-9AD3-6CDCE7B1C566")
                    ITimedTextSourceResolveResultEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Error( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedMetadataTrackError **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tracks( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextSourceResolveResultEventArgs = __uuidof(ITimedTextSourceResolveResultEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Error )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedMetadataTrackError **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tracks )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CMedia__CCore__CTimedMetadataTrack **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_get_Error(This,value)	\
    ( (This)->lpVtbl -> get_Error(This,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_get_Tracks(This,value)	\
    ( (This)->lpVtbl -> get_Tracks(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceResolveResultEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0276 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextSource[] = L"Windows.Media.Core.ITimedTextSource";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0276 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0276_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0276_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSource */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextSource */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("C4ED9BA6-101F-404D-A949-82F33FCD93B7")
                    ITimedTextSource : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Resolved( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs *handler,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Resolved( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextSource = __uuidof(ITimedTextSource);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Resolved )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CMedia__CCore__CTimedTextSource_Windows__CMedia__CCore__CTimedTextSourceResolveResultEventArgs *handler,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Resolved )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSource * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_add_Resolved(This,handler,token)	\
    ( (This)->lpVtbl -> add_Resolved(This,handler,token) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSource_remove_Resolved(This,token)	\
    ( (This)->lpVtbl -> remove_Resolved(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0277 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Media_Core_ITimedTextSourceStatics[] = L"Windows.Media.Core.ITimedTextSourceStatics";
#endif /* !defined(____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0277 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0277_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0277_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Media::Core::ITimedTextSourceStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Media {
                namespace Core {
                    
                    MIDL_INTERFACE("7E311853-9ABA-4AC4-BB98-2FB176C3BFDD")
                    ITimedTextSourceStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromStream( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStream *stream,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromUri( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *uri,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromStreamWithLanguage( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStream *stream,
                            /* [in] */ __RPC__in HSTRING defaultLanguage,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateFromUriWithLanguage( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *uri,
                            /* [in] */ __RPC__in HSTRING defaultLanguage,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Core::ITimedTextSource **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITimedTextSourceStatics = __uuidof(ITimedTextSourceStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromStream )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream *stream,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **value);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromUri )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *uri,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **value);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromStreamWithLanguage )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream *stream,
            /* [in] */ __RPC__in HSTRING defaultLanguage,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **value);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromUriWithLanguage )( 
            __RPC__in __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *uri,
            /* [in] */ __RPC__in HSTRING defaultLanguage,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCore_CITimedTextSource **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_CreateFromStream(This,stream,value)	\
    ( (This)->lpVtbl -> CreateFromStream(This,stream,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_CreateFromUri(This,uri,value)	\
    ( (This)->lpVtbl -> CreateFromUri(This,uri,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_CreateFromStreamWithLanguage(This,stream,defaultLanguage,value)	\
    ( (This)->lpVtbl -> CreateFromStreamWithLanguage(This,stream,defaultLanguage,value) ) 

#define __x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_CreateFromUriWithLanguage(This,uri,defaultLanguage,value)	\
    ( (This)->lpVtbl -> CreateFromUriWithLanguage(This,uri,defaultLanguage,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CMedia_CCore_CITimedTextSourceStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0278 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_Media_Core_AudioStreamDescriptor_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_AudioStreamDescriptor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_AudioStreamDescriptor[] = L"Windows.Media.Core.AudioStreamDescriptor";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_VideoStreamDescriptor_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_VideoStreamDescriptor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_VideoStreamDescriptor[] = L"Windows.Media.Core.VideoStreamDescriptor";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSource_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSource[] = L"Windows.Media.Core.MediaStreamSource";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceClosedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceClosedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceClosedEventArgs[] = L"Windows.Media.Core.MediaStreamSourceClosedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceStartingEventArgs[] = L"Windows.Media.Core.MediaStreamSourceStartingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSampleRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSampleRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceSampleRequestedEventArgs[] = L"Windows.Media.Core.MediaStreamSourceSampleRequestedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequestedEventArgs[] = L"Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSamplePropertySet_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSamplePropertySet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSamplePropertySet[] = L"Windows.Media.Core.MediaStreamSamplePropertySet";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSample_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSample_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSample[] = L"Windows.Media.Core.MediaStreamSample";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSampleProtectionProperties_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSampleProtectionProperties_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSampleProtectionProperties[] = L"Windows.Media.Core.MediaStreamSampleProtectionProperties";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceClosedRequest_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceClosedRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceClosedRequest[] = L"Windows.Media.Core.MediaStreamSourceClosedRequest";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceStartingRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceStartingRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceStartingRequestDeferral[] = L"Windows.Media.Core.MediaStreamSourceStartingRequestDeferral";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceStartingRequest_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceStartingRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceStartingRequest[] = L"Windows.Media.Core.MediaStreamSourceStartingRequest";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSampleRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSampleRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceSampleRequestDeferral[] = L"Windows.Media.Core.MediaStreamSourceSampleRequestDeferral";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSampleRequest_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSampleRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceSampleRequest[] = L"Windows.Media.Core.MediaStreamSourceSampleRequest";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequestDeferral[] = L"Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestDeferral";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequest_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaStreamSourceSwitchStreamsRequest[] = L"Windows.Media.Core.MediaStreamSourceSwitchStreamsRequest";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MseStreamSource_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MseStreamSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MseStreamSource[] = L"Windows.Media.Core.MseStreamSource";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MseSourceBufferList_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MseSourceBufferList_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MseSourceBufferList[] = L"Windows.Media.Core.MseSourceBufferList";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MseSourceBuffer_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MseSourceBuffer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MseSourceBuffer[] = L"Windows.Media.Core.MseSourceBuffer";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_HighDynamicRangeControl_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_HighDynamicRangeControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_HighDynamicRangeControl[] = L"Windows.Media.Core.HighDynamicRangeControl";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_SceneAnalysisEffect_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_SceneAnalysisEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_SceneAnalysisEffect[] = L"Windows.Media.Core.SceneAnalysisEffect";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_SceneAnalyzedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_SceneAnalyzedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_SceneAnalyzedEventArgs[] = L"Windows.Media.Core.SceneAnalyzedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_HighDynamicRangeOutput_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_HighDynamicRangeOutput_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_HighDynamicRangeOutput[] = L"Windows.Media.Core.HighDynamicRangeOutput";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_SceneAnalysisEffectFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_SceneAnalysisEffectFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_SceneAnalysisEffectFrame[] = L"Windows.Media.Core.SceneAnalysisEffectFrame";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_SceneAnalysisEffectDefinition_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_SceneAnalysisEffectDefinition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_SceneAnalysisEffectDefinition[] = L"Windows.Media.Core.SceneAnalysisEffectDefinition";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_FaceDetectionEffectFrame_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_FaceDetectionEffectFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_FaceDetectionEffectFrame[] = L"Windows.Media.Core.FaceDetectionEffectFrame";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_FaceDetectedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_FaceDetectedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_FaceDetectedEventArgs[] = L"Windows.Media.Core.FaceDetectedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_FaceDetectionEffect_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_FaceDetectionEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_FaceDetectionEffect[] = L"Windows.Media.Core.FaceDetectionEffect";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_FaceDetectionEffectDefinition_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_FaceDetectionEffectDefinition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_FaceDetectionEffectDefinition[] = L"Windows.Media.Core.FaceDetectionEffectDefinition";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_VideoStabilizationEffectEnabledChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_VideoStabilizationEffectEnabledChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_VideoStabilizationEffectEnabledChangedEventArgs[] = L"Windows.Media.Core.VideoStabilizationEffectEnabledChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_VideoStabilizationEffect_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_VideoStabilizationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_VideoStabilizationEffect[] = L"Windows.Media.Core.VideoStabilizationEffect";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_VideoStabilizationEffectDefinition_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_VideoStabilizationEffectDefinition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_VideoStabilizationEffectDefinition[] = L"Windows.Media.Core.VideoStabilizationEffectDefinition";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaSourceError_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaSourceError_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaSourceError[] = L"Windows.Media.Core.MediaSourceError";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaSource_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaSource[] = L"Windows.Media.Core.MediaSource";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaBinder_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaBinder_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaBinder[] = L"Windows.Media.Core.MediaBinder";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaBindingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaBindingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaBindingEventArgs[] = L"Windows.Media.Core.MediaBindingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaSourceOpenOperationCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaSourceOpenOperationCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaSourceOpenOperationCompletedEventArgs[] = L"Windows.Media.Core.MediaSourceOpenOperationCompletedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextSource_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextSource[] = L"Windows.Media.Core.TimedTextSource";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedMetadataTrack_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedMetadataTrack_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedMetadataTrack[] = L"Windows.Media.Core.TimedMetadataTrack";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaSourceStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaSourceStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaSourceStateChangedEventArgs[] = L"Windows.Media.Core.MediaSourceStateChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextRegion_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextRegion_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextRegion[] = L"Windows.Media.Core.TimedTextRegion";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextStyle_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextStyle_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextStyle[] = L"Windows.Media.Core.TimedTextStyle";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextLine_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextLine_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextLine[] = L"Windows.Media.Core.TimedTextLine";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextSubformat_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextSubformat_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextSubformat[] = L"Windows.Media.Core.TimedTextSubformat";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedMetadataTrackError_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedMetadataTrackError_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedMetadataTrackError[] = L"Windows.Media.Core.TimedMetadataTrackError";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_MediaCueEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_MediaCueEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_MediaCueEventArgs[] = L"Windows.Media.Core.MediaCueEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedMetadataTrackFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedMetadataTrackFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedMetadataTrackFailedEventArgs[] = L"Windows.Media.Core.TimedMetadataTrackFailedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextSourceResolveResultEventArgs_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextSourceResolveResultEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextSourceResolveResultEventArgs[] = L"Windows.Media.Core.TimedTextSourceResolveResultEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_TimedTextCue_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_TimedTextCue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_TimedTextCue[] = L"Windows.Media.Core.TimedTextCue";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_DataCue_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_DataCue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_DataCue[] = L"Windows.Media.Core.DataCue";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_VideoTrack_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_VideoTrack_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_VideoTrack[] = L"Windows.Media.Core.VideoTrack";
#endif
#ifndef RUNTIMECLASS_Windows_Media_Core_AudioTrack_DEFINED
#define RUNTIMECLASS_Windows_Media_Core_AudioTrack_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Media_Core_AudioTrack[] = L"Windows.Media.Core.AudioTrack";
#endif


/* interface __MIDL_itf_windows2Emedia2Ecore_0000_0278 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0278_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Emedia2Ecore_0000_0278_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


