//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace System
    {
        namespace Threading
        {
            typedef enum WorkItemPriority WorkItemPriority;

            typedef enum WorkItemOptions WorkItemOptions;

            delegate TimerElapsedHandler;

            delegate TimerDestroyedHandler;

            delegate WorkItemHandler;

            interface IThreadPoolStatics;

            interface IThreadPoolTimer;

            interface IThreadPoolTimerStatics;

            runtimeclass ThreadPoolTimer;

            runtimeclass ThreadPool;
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace System
    {
        namespace Threading
        {
            [version(0x06020000)]
            enum WorkItemPriority
            {
                Low    = -1,
                Normal = 0,
                High   = 1
            };

            [flags]
            [version(0x06020000)]
            enum WorkItemOptions
            {
                None       = 0x0,
                TimeSliced = 0x1
            };

            [uuid(FAAEA667-FBEB-49CB-ADB2-71184C556E43)]
            [version(0x06020000)]
            delegate
                HRESULT TimerElapsedHandler([in] Windows.System.Threading.ThreadPoolTimer* timer);

            [uuid(34ED19FA-8384-4EB9-8209-FB5094EEEC35)]
            [version(0x06020000)]
            delegate
                HRESULT TimerDestroyedHandler([in] Windows.System.Threading.ThreadPoolTimer* timer);

            [uuid(1D1A8B8B-FA66-414F-9CBD-B65FC99D17FA)]
            [version(0x06020000)]
            delegate
                HRESULT WorkItemHandler([in] Windows.Foundation.IAsyncAction* operation);

            [exclusiveto(Windows.System.Threading.ThreadPool)]
            [uuid(B6BF67DD-84BD-44F8-AC1C-93EBCB9DBA91)]
            [version(0x06020000)]
            interface IThreadPoolStatics : IInspectable
            {
                [overload("RunAsync")] HRESULT RunAsync([in] Windows.System.Threading.WorkItemHandler* handler, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                [overload("RunAsync")] HRESULT RunWithPriorityAsync([in] Windows.System.Threading.WorkItemHandler* handler, [in] Windows.System.Threading.WorkItemPriority priority, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                [overload("RunAsync")] HRESULT RunWithPriorityAndOptionsAsync([in] Windows.System.Threading.WorkItemHandler* handler, [in] Windows.System.Threading.WorkItemPriority priority, [in] Windows.System.Threading.WorkItemOptions options, [out] [retval] Windows.Foundation.IAsyncAction** operation);
            }

            [exclusiveto(Windows.System.Threading.ThreadPoolTimer)]
            [uuid(594EBE78-55EA-4A88-A50D-3402AE1F9CF2)]
            [version(0x06020000)]
            interface IThreadPoolTimer : IInspectable
            {
                [propget] HRESULT Period([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT Delay([out] [retval] Windows.Foundation.TimeSpan* value);
                HRESULT Cancel();
            }

            [exclusiveto(Windows.System.Threading.ThreadPoolTimer)]
            [uuid(1A8A9D02-E482-461B-B8C7-8EFAD1CCE590)]
            [version(0x06020000)]
            interface IThreadPoolTimerStatics : IInspectable
            {
                [overload("CreatePeriodicTimer")] HRESULT CreatePeriodicTimer([in] Windows.System.Threading.TimerElapsedHandler* handler, [in] Windows.Foundation.TimeSpan period, [out] [retval] Windows.System.Threading.ThreadPoolTimer** timer);
                [overload("CreateTimer")] HRESULT CreateTimer([in] Windows.System.Threading.TimerElapsedHandler* handler, [in] Windows.Foundation.TimeSpan delay, [out] [retval] Windows.System.Threading.ThreadPoolTimer** timer);
                [overload("CreatePeriodicTimer")] HRESULT CreatePeriodicTimerWithCompletion([in] Windows.System.Threading.TimerElapsedHandler* handler, [in] Windows.Foundation.TimeSpan period, [in] Windows.System.Threading.TimerDestroyedHandler* destroyed, [out] [retval] Windows.System.Threading.ThreadPoolTimer** timer);
                [overload("CreateTimer")] HRESULT CreateTimerWithCompletion([in] Windows.System.Threading.TimerElapsedHandler* handler, [in] Windows.Foundation.TimeSpan delay, [in] Windows.System.Threading.TimerDestroyedHandler* destroyed, [out] [retval] Windows.System.Threading.ThreadPoolTimer** timer);
            }

            [marshaling_behavior(agile)]
            [static(Windows.System.Threading.IThreadPoolTimerStatics, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass ThreadPoolTimer
            {
                [default] interface Windows.System.Threading.IThreadPoolTimer;
            }

            [marshaling_behavior(agile)]
            [static(Windows.System.Threading.IThreadPoolStatics, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass ThreadPool
            {
            }
        }
    }
}
