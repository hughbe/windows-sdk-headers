// Copyright (C) Microsoft Corporation. All rights reserved.

//
// NOTE: This header is generated by stubwork.  Please make any 
//       modifications to the corresponding template files 
//       (.x or .y) and use stubwork to regenerate the header
//

#ifndef _NETPOWEROFFLOADLIST_2_0_H_
#define _NETPOWEROFFLOADLIST_2_0_H_

#ifndef WDF_EXTERN_C
  #ifdef __cplusplus
    #define WDF_EXTERN_C       extern "C"
    #define WDF_EXTERN_C_START extern "C" {
    #define WDF_EXTERN_C_END   }
  #else
    #define WDF_EXTERN_C
    #define WDF_EXTERN_C_START
    #define WDF_EXTERN_C_END
  #endif
#endif

WDF_EXTERN_C_START




typedef struct _NET_POWER_OFFLOAD_LIST
{
    ULONG Size;
    void * Reserved[4];
} NET_POWER_OFFLOAD_LIST;

inline
void
NET_POWER_OFFLOAD_LIST_INIT(
    _Out_ NET_POWER_OFFLOAD_LIST * List
)
{
    RtlZeroMemory(List, sizeof(*List));
    List->Size = sizeof(*List);
}

//
// NET Function: NetDeviceGetPowerOffloadList
//
typedef
_IRQL_requires_(PASSIVE_LEVEL)
WDFAPI
void
(NTAPI *PFN_NETDEVICEGETPOWEROFFLOADLIST)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    WDFDEVICE Device,
    _Inout_
    NET_POWER_OFFLOAD_LIST* List
    );

_IRQL_requires_(PASSIVE_LEVEL)
FORCEINLINE
void
NetDeviceGetPowerOffloadList(
    _In_
    WDFDEVICE Device,
    _Inout_
    NET_POWER_OFFLOAD_LIST* List
    )
{
    ((PFN_NETDEVICEGETPOWEROFFLOADLIST) NetFunctions[NetDeviceGetPowerOffloadListTableIndex])(NetDriverGlobals, Device, List);
}

//
// NET Function: NetPowerOffloadListGetCount
//
typedef
_IRQL_requires_(PASSIVE_LEVEL)
WDFAPI
SIZE_T
(NTAPI *PFN_NETPOWEROFFLOADLISTGETCOUNT)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    CONST NET_POWER_OFFLOAD_LIST* List
    );

_IRQL_requires_(PASSIVE_LEVEL)
FORCEINLINE
SIZE_T
NetPowerOffloadListGetCount(
    _In_
    CONST NET_POWER_OFFLOAD_LIST* List
    )
{
    return ((PFN_NETPOWEROFFLOADLISTGETCOUNT) NetFunctions[NetPowerOffloadListGetCountTableIndex])(NetDriverGlobals, List);
}

//
// NET Function: NetPowerOffloadListGetElement
//
typedef
_IRQL_requires_(PASSIVE_LEVEL)
WDFAPI
NETPOWEROFFLOAD
(NTAPI *PFN_NETPOWEROFFLOADLISTGETELEMENT)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    CONST NET_POWER_OFFLOAD_LIST* List,
    _In_
    SIZE_T Index
    );

_IRQL_requires_(PASSIVE_LEVEL)
FORCEINLINE
NETPOWEROFFLOAD
NetPowerOffloadListGetElement(
    _In_
    CONST NET_POWER_OFFLOAD_LIST* List,
    _In_
    SIZE_T Index
    )
{
    return ((PFN_NETPOWEROFFLOADLISTGETELEMENT) NetFunctions[NetPowerOffloadListGetElementTableIndex])(NetDriverGlobals, List, Index);
}



WDF_EXTERN_C_END

#endif // _NETPOWEROFFLOADLIST_2_0_H_

