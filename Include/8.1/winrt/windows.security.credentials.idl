//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0009
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Security
    {
        namespace Credentials
        {
            typedef enum WebAccountState WebAccountState;

            interface IPasswordCredential;

            interface ICredentialFactory;

            interface IPasswordVault;

            interface IWebAccountProviderFactory;

            interface IWebAccountFactory;

            interface IWebAccountProvider;

            interface IWebAccount;

            runtimeclass PasswordCredential;

            runtimeclass PasswordVault;

            runtimeclass PasswordCredentialPropertyStore;

            runtimeclass WebAccountProvider;

            runtimeclass WebAccount;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Security
    {
        namespace Credentials
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Security.Credentials.PasswordCredential*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Security.Credentials.PasswordCredential*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Security.Credentials.PasswordCredential*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Security
    {
        namespace Credentials
        {
            [version(0x06030000)]
            enum WebAccountState
            {
                None      = 0,
                Connected = 1,
                Error     = 2
            };

            [exclusiveto(Windows.Security.Credentials.PasswordCredential)]
            [uuid(6AB18989-C720-41A7-A6C1-FEADB36329A0)]
            [version(0x06020000)]
            interface IPasswordCredential : IInspectable
            {
                [propget] HRESULT Resource([out] [retval] HSTRING* resource);
                [propput] HRESULT Resource([in] HSTRING resource);
                [propget] HRESULT UserName([out] [retval] HSTRING* userName);
                [propput] HRESULT UserName([in] HSTRING userName);
                [propget] HRESULT Password([out] [retval] HSTRING* password);
                [propput] HRESULT Password([in] HSTRING password);
                HRESULT RetrievePassword();
                [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IPropertySet** props);
            }

            [exclusiveto(Windows.Security.Credentials.PasswordCredential)]
            [uuid(54EF13A1-BF26-47B5-97DD-DE779B7CAD58)]
            [version(0x06020000)]
            interface ICredentialFactory : IInspectable
            {
                HRESULT CreatePasswordCredential([in] HSTRING resource, [in] HSTRING userName, [in] HSTRING password, [out] [retval] Windows.Security.Credentials.PasswordCredential** credential);
            }

            [exclusiveto(Windows.Security.Credentials.PasswordVault)]
            [uuid(61FD2C0B-C8D4-48C1-A54F-BC5A64205AF2)]
            [version(0x06020000)]
            interface IPasswordVault : IInspectable
            {
                HRESULT Add([in] Windows.Security.Credentials.PasswordCredential* credential);
                HRESULT Remove([in] Windows.Security.Credentials.PasswordCredential* credential);
                HRESULT Retrieve([in] HSTRING resource, [in] HSTRING userName, [out] [retval] Windows.Security.Credentials.PasswordCredential** credential);
                HRESULT FindAllByResource([in] HSTRING resource, [out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Security.Credentials.PasswordCredential*>** credentials);
                HRESULT FindAllByUserName([in] HSTRING userName, [out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Security.Credentials.PasswordCredential*>** credentials);
                HRESULT RetrieveAll([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Security.Credentials.PasswordCredential*>** credentials);
            }

            [exclusiveto(Windows.Security.Credentials.WebAccountProvider)]
            [uuid(1D767DF1-E1E1-4B9A-A774-5C7C7E3BF371)]
            [version(0x06030000)]
            interface IWebAccountProviderFactory : IInspectable
            {
                HRESULT CreateWebAccountProvider([in] HSTRING id, [in] HSTRING displayName, [in] Windows.Foundation.Uri* iconUri, [out] [retval] Windows.Security.Credentials.WebAccountProvider** instance);
            }

            [exclusiveto(Windows.Security.Credentials.WebAccount)]
            [uuid(AC9AFB39-1DE9-4E92-B78F-0581A87F6E5C)]
            [version(0x06030000)]
            interface IWebAccountFactory : IInspectable
            {
                HRESULT CreateWebAccount([in] Windows.Security.Credentials.WebAccountProvider* webAccountProvider, [in] HSTRING userName, [in] Windows.Security.Credentials.WebAccountState state, [out] [retval] Windows.Security.Credentials.WebAccount** instance);
            }

            [exclusiveto(Windows.Security.Credentials.WebAccountProvider)]
            [uuid(29DCC8C3-7AB9-4A7C-A336-B942F9DBF7C7)]
            [version(0x06030000)]
            interface IWebAccountProvider : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT IconUri([out] [retval] Windows.Foundation.Uri** value);
            }

            [exclusiveto(Windows.Security.Credentials.WebAccount)]
            [uuid(69473EB2-8031-49BE-80BB-96CB46D99ABA)]
            [version(0x06030000)]
            interface IWebAccount : IInspectable
            {
                [propget] HRESULT WebAccountProvider([out] [retval] Windows.Security.Credentials.WebAccountProvider** value);
                [propget] HRESULT UserName([out] [retval] HSTRING* value);
                [propget] HRESULT State([out] [retval] Windows.Security.Credentials.WebAccountState* value);
            }

            [activatable(Windows.Security.Credentials.ICredentialFactory, 0x06020000)]
            [activatable(0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass PasswordCredential
            {
                [default] interface Windows.Security.Credentials.IPasswordCredential;
            }

            [activatable(0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass PasswordVault
            {
                [default] interface Windows.Security.Credentials.IPasswordVault;
            }

            [activatable(0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass PasswordCredentialPropertyStore
            {
                [default] interface Windows.Foundation.Collections.IPropertySet;
                interface Windows.Foundation.Collections.IObservableMap<HSTRING, IInspectable*>;
                interface Windows.Foundation.Collections.IMap<HSTRING, IInspectable*>;
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, IInspectable*>*>;
            }

            [activatable(Windows.Security.Credentials.IWebAccountProviderFactory, 0x06030000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06030000)]
            runtimeclass WebAccountProvider
            {
                [default] interface Windows.Security.Credentials.IWebAccountProvider;
            }

            [activatable(Windows.Security.Credentials.IWebAccountFactory, 0x06030000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06030000)]
            runtimeclass WebAccount
            {
                [default] interface Windows.Security.Credentials.IWebAccount;
            }
        }
    }
}
