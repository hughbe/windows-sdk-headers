//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0009
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.ApplicationModel.Search.idl";
import "Windows.Media.Capture.idl";
import "Windows.Media.Core.idl";
import "Windows.Media.PlayTo.idl";
import "Windows.Media.Protection.idl";
import "Windows.Storage.Streams.idl";
import "Windows.System.idl";
import "Windows.UI.idl";
import "Windows.UI.Core.idl";
import "Windows.UI.Text.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.Xaml.Data.idl";
import "Windows.UI.Xaml.Documents.idl";
import "Windows.UI.Xaml.Input.idl";
import "Windows.UI.Xaml.Interop.idl";
import "Windows.UI.Xaml.Media.idl";
import "Windows.UI.Xaml.Media.Animation.idl";
import "Windows.UI.Xaml.Navigation.idl";
import "Windows.Web.idl";
import "Windows.Web.Http.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Eapplicationmodel2Edatatransfer_h__)")
cpp_quote("#include <Windows.ApplicationModel.DataTransfer.h>")
cpp_quote("#endif // !defined(__windows2Eapplicationmodel2Edatatransfer_h__)")
cpp_quote("#if !defined(__windows2Eapplicationmodel2Esearch_h__)")
cpp_quote("#include <Windows.ApplicationModel.Search.h>")
cpp_quote("#endif // !defined(__windows2Eapplicationmodel2Esearch_h__)")
cpp_quote("#if !defined(__windows2Emedia2Ecapture_h__)")
cpp_quote("#include <Windows.Media.Capture.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Ecapture_h__)")
cpp_quote("#if !defined(__windows2Emedia2Ecore_h__)")
cpp_quote("#include <Windows.Media.Core.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Ecore_h__)")
cpp_quote("#if !defined(__windows2Emedia2Eplayto_h__)")
cpp_quote("#include <Windows.Media.PlayTo.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Eplayto_h__)")
cpp_quote("#if !defined(__windows2Emedia2Eprotection_h__)")
cpp_quote("#include <Windows.Media.Protection.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Eprotection_h__)")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if !defined(__windows2Esystem_h__)")
cpp_quote("#include <Windows.System.h>")
cpp_quote("#endif // !defined(__windows2Esystem_h__)")
cpp_quote("#if !defined(__windows2Eui_h__)")
cpp_quote("#include <Windows.UI.h>")
cpp_quote("#endif // !defined(__windows2Eui_h__)")
cpp_quote("#if !defined(__windows2Eui2Ecore_h__)")
cpp_quote("#include <Windows.UI.Core.h>")
cpp_quote("#endif // !defined(__windows2Eui2Ecore_h__)")
cpp_quote("#if !defined(__windows2Eui2Etext_h__)")
cpp_quote("#include <Windows.UI.Text.h>")
cpp_quote("#endif // !defined(__windows2Eui2Etext_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl_h__)")
cpp_quote("#include <Windows.UI.Xaml.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)")
cpp_quote("#include <Windows.UI.Xaml.Controls.Primitives.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Edata_h__)")
cpp_quote("#include <Windows.UI.Xaml.Data.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Edata_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Edocuments_h__)")
cpp_quote("#include <Windows.UI.Xaml.Documents.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Edocuments_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Einput_h__)")
cpp_quote("#include <Windows.UI.Xaml.Input.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Einput_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Einterop_h__)")
cpp_quote("#include <Windows.UI.Xaml.Interop.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Einterop_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Emedia_h__)")
cpp_quote("#include <Windows.UI.Xaml.Media.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Emedia_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)")
cpp_quote("#include <Windows.UI.Xaml.Media.Animation.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Enavigation_h__)")
cpp_quote("#include <Windows.UI.Xaml.Navigation.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Enavigation_h__)")
cpp_quote("#if !defined(__windows2Eweb_h__)")
cpp_quote("#include <Windows.Web.h>")
cpp_quote("#endif // !defined(__windows2Eweb_h__)")
cpp_quote("#if !defined(__windows2Eweb2Ehttp_h__)")
cpp_quote("#include <Windows.Web.Http.h>")
cpp_quote("#endif // !defined(__windows2Eweb2Ehttp_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            runtimeclass DataPackage;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Search
        {
            runtimeclass LocalContentSuggestionSettings;

            runtimeclass SearchQueryLinguisticDetails;

            runtimeclass SearchSuggestionsRequest;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        interface IAsyncAction;

        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct TimeSpan TimeSpan;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            runtimeclass MediaCapture;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Core
        {
            interface IMediaSource;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace PlayTo
        {
            runtimeclass PlayToSource;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Protection
        {
            runtimeclass MediaProtectionManager;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStream;
        }
    }
}
namespace Windows
{
    namespace System
    {
        typedef enum VirtualKeyModifiers VirtualKeyModifiers;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Core
        {
            runtimeclass CoreIndependentInputSource;

            typedef enum CoreInputDeviceTypes CoreInputDeviceTypes;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Text
        {
            typedef enum FontStretch FontStretch;

            typedef enum FontStyle FontStyle;

            typedef struct FontWeight FontWeight;

            interface ITextDocument;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass ComboBoxTemplateSettings;

                    runtimeclass FlyoutBase;

                    typedef enum GeneratorDirection GeneratorDirection;

                    typedef struct GeneratorPosition GeneratorPosition;

                    runtimeclass GridViewItemTemplateSettings;

                    typedef enum GroupHeaderPlacement GroupHeaderPlacement;

                    interface IScrollSnapPointsInfo;

                    runtimeclass ItemsChangedEventArgs;

                    delegate ItemsChangedEventHandler;

                    runtimeclass ListViewItemTemplateSettings;

                    typedef enum PlacementMode PlacementMode;

                    runtimeclass ProgressBarTemplateSettings;

                    runtimeclass ProgressRingTemplateSettings;

                    runtimeclass SelectorItem;

                    runtimeclass SettingsFlyoutTemplateSettings;

                    typedef enum SliderSnapsTo SliderSnapsTo;

                    typedef enum SnapPointsAlignment SnapPointsAlignment;

                    typedef enum TickPlacement TickPlacement;

                    runtimeclass ToggleSwitchTemplateSettings;

                    runtimeclass ToolTipTemplateSettings;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef struct CornerRadius CornerRadius;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                interface INotifyPropertyChanged;

                interface IValueConverter;

                typedef struct LoadMoreItemsResult LoadMoreItemsResult;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DataTemplate;

            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            delegate DependencyPropertyChangedEventHandler;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                runtimeclass BlockCollection;

                runtimeclass InlineCollection;

                runtimeclass TextPointer;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DragEventArgs;

            typedef struct Duration Duration;

            delegate ExceptionRoutedEventHandler;

            typedef enum FocusState FocusState;

            runtimeclass FrameworkElement;

            typedef struct GridLength GridLength;

            typedef enum HorizontalAlignment HorizontalAlignment;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Input
            {
                runtimeclass DoubleTappedRoutedEventArgs;

                runtimeclass HoldingRoutedEventArgs;

                interface ICommand;

                runtimeclass InputScope;

                runtimeclass KeyRoutedEventArgs;

                typedef enum KeyboardNavigationMode KeyboardNavigationMode;

                runtimeclass ManipulationCompletedRoutedEventArgs;

                runtimeclass ManipulationDeltaRoutedEventArgs;

                runtimeclass ManipulationInertiaStartingRoutedEventArgs;

                runtimeclass ManipulationStartedRoutedEventArgs;

                runtimeclass ManipulationStartingRoutedEventArgs;

                runtimeclass PointerRoutedEventArgs;

                runtimeclass RightTappedRoutedEventArgs;

                runtimeclass TappedRoutedEventArgs;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Interop
            {
                typedef struct TypeName TypeName;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum LineStackingStrategy LineStackingStrategy;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    runtimeclass NavigationTransitionInfo;

                    runtimeclass TransitionCollection;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                typedef enum AudioCategory AudioCategory;

                typedef enum AudioDeviceType AudioDeviceType;

                runtimeclass Brush;

                runtimeclass FontFamily;

                runtimeclass Geometry;

                runtimeclass ImageSource;

                typedef enum MediaCanPlayResponse MediaCanPlayResponse;

                typedef enum MediaElementState MediaElementState;

                delegate RateChangedRoutedEventHandler;

                runtimeclass SolidColorBrush;

                typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;

                typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;

                typedef enum Stretch Stretch;

                runtimeclass TimelineMarkerCollection;

                delegate TimelineMarkerRoutedEventHandler;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Navigation
            {
                delegate LoadCompletedEventHandler;

                delegate NavigatedEventHandler;

                runtimeclass NavigatingCancelEventArgs;

                delegate NavigatingCancelEventHandler;

                typedef enum NavigationCacheMode NavigationCacheMode;

                runtimeclass NavigationEventArgs;

                delegate NavigationFailedEventHandler;

                delegate NavigationStoppedEventHandler;

                runtimeclass PageStackEntry;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum OpticalMarginAlignment OpticalMarginAlignment;

            runtimeclass RoutedEventArgs;

            delegate RoutedEventHandler;

            runtimeclass Style;

            typedef enum TextAlignment TextAlignment;

            typedef enum TextLineBounds TextLineBounds;

            typedef enum TextReadingOrder TextReadingOrder;

            typedef enum TextTrimming TextTrimming;

            typedef enum TextWrapping TextWrapping;

            typedef struct Thickness Thickness;

            runtimeclass UIElement;

            typedef enum VerticalAlignment VerticalAlignment;

            typedef enum Visibility Visibility;
        }
    }
}
namespace Windows
{
    namespace Web
    {
        namespace Http
        {
            runtimeclass HttpRequestMessage;
        }
    }
}
namespace Windows
{
    namespace Web
    {
        interface IUriToStreamResolver;

        typedef enum WebErrorStatus WebErrorStatus;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum ClickMode ClickMode;

                typedef enum IncrementalLoadingTrigger IncrementalLoadingTrigger;

                typedef enum ItemsUpdatingScrollMode ItemsUpdatingScrollMode;

                typedef enum ListViewSelectionMode ListViewSelectionMode;

                typedef enum Orientation Orientation;

                typedef enum PanelScrollingDirection PanelScrollingDirection;

                typedef enum ScrollBarVisibility ScrollBarVisibility;

                typedef enum ScrollIntoViewAlignment ScrollIntoViewAlignment;

                typedef enum ScrollMode ScrollMode;

                typedef enum SelectionMode SelectionMode;

                typedef enum SnapPointsType SnapPointsType;

                typedef enum StretchDirection StretchDirection;

                typedef enum VirtualizationMode VirtualizationMode;

                typedef enum ZoomMode ZoomMode;

                typedef enum Symbol Symbol;

                delegate BackClickEventHandler;

                delegate CleanUpVirtualizedItemEventHandler;

                delegate ContextMenuOpeningEventHandler;

                delegate DragItemsStartingEventHandler;

                delegate ItemClickEventHandler;

                delegate NotifyEventHandler;

                delegate SelectionChangedEventHandler;

                delegate SemanticZoomViewChangedEventHandler;

                delegate TextChangedEventHandler;

                delegate TextControlPasteEventHandler;

                delegate HubSectionHeaderClickEventHandler;

                delegate SectionsInViewChangedEventHandler;

                delegate WebViewNavigationFailedEventHandler;

                interface IBackClickEventArgs;

                interface IBorder;

                interface IBorderStatics;

                interface IButton;

                interface IButtonFactory;

                interface IButtonWithFlyout;

                interface IButtonStaticsWithFlyout;

                interface ICanvas;

                interface ICanvasStatics;

                interface ICanvasFactory;

                interface ICaptureElement;

                interface ICaptureElementStatics;

                interface ICheckBox;

                interface ICheckBoxFactory;

                interface ICleanUpVirtualizedItemEventArgs;

                interface IColumnDefinition;

                interface IColumnDefinitionStatics;

                interface IComboBox;

                interface IComboBoxOverrides;

                interface IComboBoxStatics;

                interface IComboBoxFactory;

                interface IComboBox2;

                interface IComboBoxStatics2;

                interface IComboBoxItem;

                interface IComboBoxItemFactory;

                interface IContainerContentChangingEventArgs;

                interface IContentControl;

                interface IContentControlOverrides;

                interface IContentControlStatics;

                interface IContentControlFactory;

                interface IContentControl2;

                interface IContentPresenter;

                interface IContentPresenterOverrides;

                interface IContentPresenterStatics;

                interface IContentPresenterFactory;

                interface IContentPresenter2;

                interface IContentPresenterStatics2;

                interface IContextMenuEventArgs;

                interface IDataTemplateSelector;

                interface IDataTemplateSelectorOverrides;

                interface IDataTemplateSelectorFactory;

                interface IDataTemplateSelector2;

                interface IDataTemplateSelectorOverrides2;

                interface IDatePicker;

                interface IDatePickerStatics;

                interface IDatePickerFactory;

                interface IDatePickerValueChangedEventArgs;

                interface IDragItemsStartingEventArgs;

                interface IFlipView;

                interface IFlipViewFactory;

                interface IFlipView2;

                interface IFlipViewStatics2;

                interface IFlipViewItem;

                interface IFlipViewItemFactory;

                interface IGrid;

                interface IGridStatics;

                interface IGridFactory;

                interface IGridView;

                interface IGridViewFactory;

                interface IGridViewItem;

                interface IGridViewItemFactory;

                interface IGroupItem;

                interface IGroupItemFactory;

                interface IGroupStyle;

                interface IGroupStyleFactory;

                interface IGroupStyle2;

                interface IGroupStyleSelector;

                interface IGroupStyleSelectorOverrides;

                interface IGroupStyleSelectorFactory;

                interface IHyperlinkButton;

                interface IHyperlinkButtonStatics;

                interface IHyperlinkButtonFactory;

                interface IItemContainerMapping;

                interface IImage;

                interface IImageStatics;

                interface INavigate;

                interface ISemanticZoomInformation;

                interface IItemClickEventArgs;

                interface IItemContainerGenerator;

                interface IItemsControl;

                interface IItemsControlOverrides;

                interface IItemsControlStatics;

                interface IItemsControlFactory;

                interface IItemsControl2;

                interface IItemsPanelTemplate;

                interface IItemsPresenter;

                interface IItemsPresenterStatics;

                interface IItemsPresenter2;

                interface IItemsPresenterStatics2;

                interface IListBox;

                interface IListBoxStatics;

                interface IListBoxFactory;

                interface IListBoxItem;

                interface IListBoxItemFactory;

                interface IListView;

                interface IListViewFactory;

                interface IListViewBase;

                interface IListViewBaseStatics;

                interface IListViewBaseFactory;

                interface IListViewBase2;

                interface IListViewBaseStatics2;

                interface IListViewItem;

                interface IListViewItemFactory;

                interface IMediaElement;

                interface IMediaElementStatics;

                interface IMediaElement2;

                interface IMediaElementStatics2;

                interface INotifyEventArgs;

                interface INotifyEventArgs2;

                interface IPanel;

                interface IPanelStatics;

                interface IPanelFactory;

                interface IPasswordBox;

                interface IPasswordBoxStatics;

                interface IPasswordBox2;

                interface IPasswordBoxStatics2;

                interface IProgressBar;

                interface IProgressBarStatics;

                interface IProgressBarFactory;

                interface IProgressRing;

                interface IProgressRingStatics;

                interface IRadioButton;

                interface IRadioButtonStatics;

                interface IRadioButtonFactory;

                interface IRichEditBox;

                interface IRichEditBoxStatics;

                interface IRichEditBoxFactory;

                interface IRichEditBox2;

                interface IRichEditBoxStatics2;

                interface IRichTextBlock;

                interface IRichTextBlockStatics;

                interface IRichTextBlock2;

                interface IRichTextBlockStatics2;

                interface IRichTextBlockOverflow;

                interface IRichTextBlockOverflowStatics;

                interface IRichTextBlockOverflow2;

                interface IRichTextBlockOverflowStatics2;

                interface IRowDefinition;

                interface IRowDefinitionStatics;

                interface IScrollContentPresenter;

                interface IScrollViewer;

                interface IScrollViewerStatics;

                interface IScrollViewer2;

                interface IScrollViewerStatics2;

                interface IScrollViewerView;

                interface IScrollViewerViewChangedEventArgs;

                interface IScrollViewerViewChangingEventArgs;

                interface ISelectionChangedEventArgs;

                interface ISelectionChangedEventArgsFactory;

                interface ISemanticZoom;

                interface ISemanticZoomStatics;

                interface ISemanticZoomLocation;

                interface ISemanticZoomViewChangedEventArgs;

                interface ISettingsFlyout;

                interface ISettingsFlyoutStatics;

                interface ISettingsFlyoutFactory;

                interface ISlider;

                interface ISliderStatics;

                interface ISliderFactory;

                interface ISlider2;

                interface ISliderStatics2;

                interface IStackPanel;

                interface IStackPanelStatics;

                interface IStackPanelFactory;

                interface IStyleSelector;

                interface IStyleSelectorOverrides;

                interface IStyleSelectorFactory;

                interface ITextBlock;

                interface ITextBlockStatics;

                interface ITextBlock2;

                interface ITextBlockStatics2;

                interface ITextBox;

                interface ITextBoxStatics;

                interface ITextBoxFactory;

                interface ITextBox2;

                interface ITextBoxStatics2;

                interface ITextChangedEventArgs;

                interface ITextControlPasteEventArgs;

                interface IToggleSwitch;

                interface IToggleSwitchOverrides;

                interface IToggleSwitchStatics;

                interface IToolTip;

                interface IToolTipStatics;

                interface IToolTipFactory;

                interface IToolTipService;

                interface IToolTipServiceStatics;

                interface IUIElementCollection;

                interface IUserControl;

                interface IUserControlStatics;

                interface IUserControlFactory;

                interface IVariableSizedWrapGrid;

                interface IVariableSizedWrapGridStatics;

                interface IViewbox;

                interface IViewboxStatics;

                interface IVirtualizingPanel;

                interface IVirtualizingPanelOverrides;

                interface IVirtualizingPanelProtected;

                interface IVirtualizingPanelFactory;

                interface IVirtualizingStackPanel;

                interface IVirtualizingStackPanelOverrides;

                interface IVirtualizingStackPanelStatics;

                interface IAppBar;

                interface IAppBarOverrides;

                interface IAppBarStatics;

                interface IAppBarFactory;

                interface IAppBarButton;

                interface IAppBarButtonStatics;

                interface IAppBarButtonFactory;

                interface IAppBarSeparator;

                interface IAppBarSeparatorStatics;

                interface IAppBarSeparatorFactory;

                interface IAppBarToggleButton;

                interface IAppBarToggleButtonStatics;

                interface IAppBarToggleButtonFactory;

                interface IBitmapIcon;

                interface IBitmapIconStatics;

                interface IBitmapIconFactory;

                interface ICommandBar;

                interface ICommandBarElement;

                interface ICommandBarStatics;

                interface ICommandBarFactory;

                interface IFlyout;

                interface IFlyoutStatics;

                interface IFlyoutFactory;

                interface IFlyoutPresenter;

                interface IFlyoutPresenterFactory;

                interface IFontIcon;

                interface IFontIconStatics;

                interface IFontIconFactory;

                interface IFrame;

                interface IFrameStatics;

                interface IFrameFactory;

                interface IFrame2;

                interface IFrameStatics2;

                interface IGridViewHeaderItem;

                interface IGridViewHeaderItemFactory;

                interface IHub;

                interface IHubStatics;

                interface IHubFactory;

                interface IHubSection;

                interface IHubSectionStatics;

                interface IHubSectionFactory;

                interface IHubSectionHeaderClickEventArgs;

                interface IIconElement;

                interface IIconElementStatics;

                interface IIconElementFactory;

                interface IItemsStackPanel;

                interface IItemsStackPanelStatics;

                interface IItemsWrapGrid;

                interface IItemsWrapGridStatics;

                interface IListViewBaseHeaderItem;

                interface IListViewBaseHeaderItemFactory;

                interface IListViewHeaderItem;

                interface IListViewHeaderItemFactory;

                interface IMenuFlyout;

                interface IMenuFlyoutStatics;

                interface IMenuFlyoutFactory;

                interface IMenuFlyoutItem;

                interface IMenuFlyoutItemStatics;

                interface IMenuFlyoutItemFactory;

                interface IMenuFlyoutItemBase;

                interface IMenuFlyoutItemBaseFactory;

                interface IMenuFlyoutPresenter;

                interface IMenuFlyoutPresenterFactory;

                interface IMenuFlyoutSeparator;

                interface IMenuFlyoutSeparatorFactory;

                interface IPage;

                interface IPageOverrides;

                interface IPageStatics;

                interface IPageFactory;

                interface IPathIcon;

                interface IPathIconStatics;

                interface IPathIconFactory;

                interface ISearchBox;

                interface ISearchBoxStatics;

                interface ISearchBoxFactory;

                interface ISearchBoxQueryChangedEventArgs;

                interface ISearchBoxQuerySubmittedEventArgs;

                interface ISearchBoxResultSuggestionChosenEventArgs;

                interface ISearchBoxSuggestionsRequestedEventArgs;

                interface ISectionsInViewChangedEventArgs;

                interface ISectionsInViewChangedEventArgsFactory;

                interface ISwapChainBackgroundPanel;

                interface ISwapChainBackgroundPanelFactory;

                interface ISwapChainBackgroundPanel2;

                interface ISwapChainPanel;

                interface ISwapChainPanelStatics;

                interface ISwapChainPanelFactory;

                interface ISymbolIcon;

                interface ISymbolIconStatics;

                interface ISymbolIconFactory;

                interface ITimePicker;

                interface ITimePickerStatics;

                interface ITimePickerFactory;

                interface ITimePickerValueChangedEventArgs;

                interface IToggleMenuFlyoutItem;

                interface IToggleMenuFlyoutItemStatics;

                interface IToggleMenuFlyoutItemFactory;

                interface IWebView;

                interface IWebViewStatics;

                interface IWebView2;

                interface IWebViewStatics2;

                interface IWebViewBrush;

                interface IWebViewBrushStatics;

                interface IWebViewContentLoadingEventArgs;

                interface IWebViewDOMContentLoadedEventArgs;

                interface IWebViewLongRunningScriptDetectedEventArgs;

                interface IWebViewNavigationCompletedEventArgs;

                interface IWebViewNavigationFailedEventArgs;

                interface IWebViewNavigationStartingEventArgs;

                interface IWebViewUnviewableContentIdentifiedEventArgs;

                interface IWrapGrid;

                interface IWrapGridStatics;

                interface IControl;

                interface IControlOverrides;

                interface IControlProtected;

                interface IControlStatics;

                interface IControlFactory;

                interface IControlTemplate;

                runtimeclass BackClickEventArgs;

                runtimeclass DragItemsStartingEventArgs;

                runtimeclass NotifyEventArgs;

                runtimeclass SemanticZoomViewChangedEventArgs;

                runtimeclass TextControlPasteEventArgs;

                runtimeclass ColumnDefinitionCollection;

                runtimeclass ContainerContentChangingEventArgs;

                runtimeclass DataTemplateSelector;

                runtimeclass DatePickerValueChangedEventArgs;

                runtimeclass RowDefinitionCollection;

                runtimeclass StyleSelector;

                runtimeclass GroupStyle;

                runtimeclass GroupStyleSelector;

                runtimeclass SemanticZoomLocation;

                runtimeclass ItemCollection;

                runtimeclass ItemContainerGenerator;

                runtimeclass UIElementCollection;

                runtimeclass ScrollViewerViewChangedEventArgs;

                runtimeclass ScrollViewerViewChangingEventArgs;

                runtimeclass ScrollViewerView;

                runtimeclass ToolTipService;

                runtimeclass HubSectionHeaderClickEventArgs;

                runtimeclass SectionsInViewChangedEventArgs;

                runtimeclass WebViewNavigationFailedEventArgs;

                runtimeclass HubSectionCollection;

                runtimeclass SearchBoxQueryChangedEventArgs;

                runtimeclass SearchBoxSuggestionsRequestedEventArgs;

                runtimeclass SearchBoxQuerySubmittedEventArgs;

                runtimeclass SearchBoxResultSuggestionChosenEventArgs;

                runtimeclass TimePickerValueChangedEventArgs;

                runtimeclass WebViewNavigationStartingEventArgs;

                runtimeclass WebViewContentLoadingEventArgs;

                runtimeclass WebViewDOMContentLoadedEventArgs;

                runtimeclass WebViewNavigationCompletedEventArgs;

                runtimeclass WebViewLongRunningScriptDetectedEventArgs;

                runtimeclass WebViewUnviewableContentIdentifiedEventArgs;

                runtimeclass ColumnDefinition;

                runtimeclass RowDefinition;

                runtimeclass Flyout;

                runtimeclass MenuFlyout;

                runtimeclass CleanUpVirtualizedItemEventArgs;

                runtimeclass ContextMenuEventArgs;

                runtimeclass ItemClickEventArgs;

                runtimeclass SelectionChangedEventArgs;

                runtimeclass TextChangedEventArgs;

                runtimeclass ItemsPanelTemplate;

                runtimeclass Border;

                runtimeclass CaptureElement;

                runtimeclass ContentPresenter;

                runtimeclass Image;

                runtimeclass Panel;

                runtimeclass Canvas;

                runtimeclass Grid;

                runtimeclass ItemsPresenter;

                runtimeclass MediaElement;

                runtimeclass RichTextBlockOverflow;

                runtimeclass RichTextBlock;

                runtimeclass ScrollContentPresenter;

                runtimeclass StackPanel;

                runtimeclass TextBlock;

                runtimeclass VariableSizedWrapGrid;

                runtimeclass Viewbox;

                runtimeclass VirtualizingPanel;

                runtimeclass VirtualizingStackPanel;

                runtimeclass IconElement;

                runtimeclass BitmapIcon;

                runtimeclass FontIcon;

                runtimeclass ItemsStackPanel;

                runtimeclass ItemsWrapGrid;

                runtimeclass PathIcon;

                runtimeclass SwapChainBackgroundPanel;

                runtimeclass SwapChainPanel;

                runtimeclass SymbolIcon;

                runtimeclass WebView;

                runtimeclass WrapGrid;

                runtimeclass WebViewBrush;

                runtimeclass Control;

                runtimeclass ContentControl;

                runtimeclass ComboBoxItem;

                runtimeclass DatePicker;

                runtimeclass FlipViewItem;

                runtimeclass GridViewItem;

                runtimeclass GroupItem;

                runtimeclass SemanticZoom;

                runtimeclass ItemsControl;

                runtimeclass ListBoxItem;

                runtimeclass ListViewItem;

                runtimeclass PasswordBox;

                runtimeclass ProgressRing;

                runtimeclass RichEditBox;

                runtimeclass ScrollViewer;

                runtimeclass SettingsFlyout;

                runtimeclass TextBox;

                runtimeclass ToggleSwitch;

                runtimeclass ToolTip;

                runtimeclass UserControl;

                runtimeclass Button;

                runtimeclass HyperlinkButton;

                runtimeclass ProgressBar;

                runtimeclass Slider;

                runtimeclass ComboBox;

                runtimeclass ListViewBase;

                runtimeclass FlipView;

                runtimeclass GridView;

                runtimeclass ListBox;

                runtimeclass ListView;

                runtimeclass CheckBox;

                runtimeclass RadioButton;

                runtimeclass AppBar;

                runtimeclass AppBarButton;

                runtimeclass AppBarSeparator;

                runtimeclass AppBarToggleButton;

                runtimeclass CommandBar;

                runtimeclass FlyoutPresenter;

                runtimeclass Frame;

                runtimeclass HubSection;

                runtimeclass Hub;

                runtimeclass ListViewBaseHeaderItem;

                runtimeclass GridViewHeaderItem;

                runtimeclass ListViewHeaderItem;

                runtimeclass MenuFlyoutItemBase;

                runtimeclass MenuFlyoutItem;

                runtimeclass MenuFlyoutPresenter;

                runtimeclass MenuFlyoutSeparator;

                runtimeclass Page;

                runtimeclass SearchBox;

                runtimeclass TimePicker;

                runtimeclass ToggleMenuFlyoutItem;

                runtimeclass ControlTemplate;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ICommandBarElement*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwapChainPanel*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                [version(0x06020000)]
                enum ClickMode
                {
                    Release = 0,
                    Press   = 1,
                    Hover   = 2
                };

                [version(0x06020000)]
                enum IncrementalLoadingTrigger
                {
                    None = 0,
                    Edge = 1
                };

                [version(0x06030000)]
                enum ItemsUpdatingScrollMode
                {
                    KeepItemsInView  = 0,
                    KeepScrollOffset = 1
                };

                [version(0x06020000)]
                enum ListViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2,
                    Extended = 3
                };

                [version(0x06020000)]
                enum Orientation
                {
                    Vertical   = 0,
                    Horizontal = 1
                };

                [version(0x06030000)]
                enum PanelScrollingDirection
                {
                    None     = 0,
                    Forward  = 1,
                    Backward = 2
                };

                [version(0x06020000)]
                enum ScrollBarVisibility
                {
                    Disabled = 0,
                    Auto     = 1,
                    Hidden   = 2,
                    Visible  = 3
                };

                [version(0x06020000)]
                enum ScrollIntoViewAlignment
                {
                    Default = 0,
                    Leading = 1
                };

                [version(0x06020000)]
                enum ScrollMode
                {
                    Disabled = 0,
                    Enabled  = 1,
                    Auto     = 2
                };

                [version(0x06020000)]
                enum SelectionMode
                {
                    Single   = 0,
                    Multiple = 1,
                    Extended = 2
                };

                [version(0x06020000)]
                enum SnapPointsType
                {
                    None            = 0,
                    Optional        = 1,
                    Mandatory       = 2,
                    OptionalSingle  = 3,
                    MandatorySingle = 4
                };

                [version(0x06020000)]
                enum StretchDirection
                {
                    UpOnly   = 0,
                    DownOnly = 1,
                    Both     = 2
                };

                [version(0x06020000)]
                enum VirtualizationMode
                {
                    Standard  = 0,
                    Recycling = 1
                };

                [version(0x06020000)]
                enum ZoomMode
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [version(0x06030000)]
                enum Symbol
                {
                    Previous          = 57600,
                    Next              = 57601,
                    Play              = 57602,
                    Pause             = 57603,
                    Edit              = 57604,
                    Save              = 57605,
                    Clear             = 57606,
                    Delete            = 57607,
                    Remove            = 57608,
                    Add               = 57609,
                    Cancel            = 57610,
                    Accept            = 57611,
                    More              = 57612,
                    Redo              = 57613,
                    Undo              = 57614,
                    Home              = 57615,
                    Up                = 57616,
                    Forward           = 57617,
                    Back              = 57618,
                    Favorite          = 57619,
                    Camera            = 57620,
                    Setting           = 57621,
                    Video             = 57622,
                    Sync              = 57623,
                    Download          = 57624,
                    Mail              = 57625,
                    Find              = 57626,
                    Help              = 57627,
                    Upload            = 57628,
                    Emoji             = 57629,
                    TwoPage           = 57630,
                    LeaveChat         = 57631,
                    MailForward       = 57632,
                    Clock             = 57633,
                    Send              = 57634,
                    Crop              = 57635,
                    RotateCamera      = 57636,
                    People            = 57637,
                    OpenPane          = 57638,
                    ClosePane         = 57639,
                    World             = 57640,
                    Flag              = 57641,
                    PreviewLink       = 57642,
                    Globe             = 57643,
                    Trim              = 57644,
                    AttachCamera      = 57645,
                    ZoomIn            = 57646,
                    Bookmarks         = 57647,
                    Document          = 57648,
                    ProtectedDocument = 57649,
                    Page              = 57650,
                    Bullets           = 57651,
                    Comment           = 57652,
                    MailFilled        = 57653,
                    ContactInfo       = 57654,
                    HangUp            = 57655,
                    ViewAll           = 57656,
                    MapPin            = 57657,
                    Phone             = 57658,
                    VideoChat         = 57659,
                    Switch            = 57660,
                    Contact           = 57661,
                    Rename            = 57662,
                    Pin               = 57665,
                    MusicInfo         = 57666,
                    Go                = 57667,
                    Keyboard          = 57668,
                    DockLeft          = 57669,
                    DockRight         = 57670,
                    DockBottom        = 57671,
                    Remote            = 57672,
                    Refresh           = 57673,
                    Rotate            = 57674,
                    Shuffle           = 57675,
                    List              = 57676,
                    Shop              = 57677,
                    SelectAll         = 57678,
                    Orientation       = 57679,
                    Import            = 57680,
                    ImportAll         = 57681,
                    BrowsePhotos      = 57685,
                    WebCam            = 57686,
                    Pictures          = 57688,
                    SaveLocal         = 57689,
                    Caption           = 57690,
                    Stop              = 57691,
                    ShowResults       = 57692,
                    Volume            = 57693,
                    Repair            = 57694,
                    Message           = 57695,
                    Page2             = 57696,
                    CalendarDay       = 57697,
                    CalendarWeek      = 57698,
                    Calendar          = 57699,
                    Character         = 57700,
                    MailReplyAll      = 57701,
                    Read              = 57702,
                    Link              = 57703,
                    Account           = 57704,
                    ShowBcc           = 57705,
                    HideBcc           = 57706,
                    Cut               = 57707,
                    Attach            = 57708,
                    Paste             = 57709,
                    Filter            = 57710,
                    Copy              = 57711,
                    Emoji2            = 57712,
                    Important         = 57713,
                    MailReply         = 57714,
                    SlideShow         = 57715,
                    Sort              = 57716,
                    Manage            = 57720,
                    AllApps           = 57721,
                    DisconnectDrive   = 57722,
                    MapDrive          = 57723,
                    NewWindow         = 57724,
                    OpenWith          = 57725,
                    ContactPresence   = 57729,
                    Priority          = 57730,
                    GoToToday         = 57732,
                    Font              = 57733,
                    FontColor         = 57734,
                    Contact2          = 57735,
                    Folder            = 57736,
                    Audio             = 57737,
                    Placeholder       = 57738,
                    View              = 57739,
                    SetLockScreen     = 57740,
                    SetTile           = 57741,
                    ClosedCaption     = 57744,
                    StopSlideShow     = 57745,
                    Permissions       = 57746,
                    Highlight         = 57747,
                    DisableUpdates    = 57748,
                    UnFavorite        = 57749,
                    UnPin             = 57750,
                    OpenLocal         = 57751,
                    Mute              = 57752,
                    Italic            = 57753,
                    Underline         = 57754,
                    Bold              = 57755,
                    MoveToFolder      = 57756,
                    LikeDislike       = 57757,
                    Dislike           = 57758,
                    Like              = 57759,
                    AlignRight        = 57760,
                    AlignCenter       = 57761,
                    AlignLeft         = 57762,
                    Zoom              = 57763,
                    ZoomOut           = 57764,
                    OpenFile          = 57765,
                    OtherUser         = 57766,
                    Admin             = 57767,
                    Street            = 57795,
                    Map               = 57796,
                    ClearSelection    = 57797,
                    FontDecrease      = 57798,
                    FontIncrease      = 57799,
                    FontSize          = 57800,
                    CellPhone         = 57801,
                    ReShare           = 57802,
                    Tag               = 57803,
                    RepeatOne         = 57804,
                    RepeatAll         = 57805,
                    OutlineStar       = 57806,
                    SolidStar         = 57807,
                    Calculator        = 57808,
                    Directions        = 57809,
                    Target            = 57810,
                    Library           = 57811,
                    PhoneBook         = 57812,
                    Memo              = 57813,
                    Microphone        = 57814,
                    PostUpdate        = 57815,
                    BackToWindow      = 57816,
                    FullScreen        = 57817,
                    NewFolder         = 57818,
                    CalendarReply     = 57819,
                    UnSyncFolder      = 57821,
                    ReportHacked      = 57822,
                    SyncFolder        = 57823,
                    BlockContact      = 57824,
                    SwitchApps        = 57825,
                    AddFriend         = 57826,
                    TouchPointer      = 57827,
                    GoToStart         = 57828,
                    ZeroBars          = 57829,
                    OneBar            = 57830,
                    TwoBars           = 57831,
                    ThreeBars         = 57832,
                    FourBars          = 57833,
                    Scan              = 58004,
                    Preview           = 58005
                };

                [uuid(FA9BC21F-9892-482E-ABF6-EB2D607D32DE)]
                [version(0x06030000)]
                delegate
                    HRESULT BackClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.BackClickEventArgs* e);

                [uuid(CACAD0D6-0F0D-4870-884D-F2DEDF674288)]
                [version(0x06020000)]
                delegate
                    HRESULT CleanUpVirtualizedItemEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs* e);

                [uuid(DF945151-745C-4446-B2FC-216D765847A0)]
                [version(0x06020000)]
                delegate
                    HRESULT ContextMenuOpeningEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.ContextMenuEventArgs* e);

                [uuid(3AAEAB4C-14CB-4434-BECC-88A8585C2F89)]
                [version(0x06020000)]
                delegate
                    HRESULT DragItemsStartingEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.DragItemsStartingEventArgs* e);

                [uuid(3DF6D14E-E18A-4A75-9395-627C5F3CD489)]
                [version(0x06020000)]
                delegate
                    HRESULT ItemClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.ItemClickEventArgs* e);

                [uuid(C2FDD1F8-7105-4A74-A109-DE29DFF56B98)]
                [version(0x06020000)]
                delegate
                    HRESULT NotifyEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.NotifyEventArgs* e);

                [uuid(E1A05352-5AA0-42CA-9CD9-068A14DB6E68)]
                [version(0x06020000)]
                delegate
                    HRESULT SelectionChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SelectionChangedEventArgs* e);

                [uuid(1FA9161D-5D73-44FB-81AC-D1C9384919D4)]
                [version(0x06020000)]
                delegate
                    HRESULT SemanticZoomViewChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs* e);

                [uuid(8EB35B97-AD87-40E8-818B-77DB24759566)]
                [version(0x06020000)]
                delegate
                    HRESULT TextChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.TextChangedEventArgs* e);

                [uuid(D56DB359-6F77-4296-AB9C-794939444365)]
                [version(0x06030000)]
                delegate
                    HRESULT TextControlPasteEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.TextControlPasteEventArgs* e);

                [uuid(AFE17B9B-9C63-4583-88E4-C59019B7F49D)]
                [version(0x06030000)]
                delegate
                    HRESULT HubSectionHeaderClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs* e);

                [uuid(6BECAA6A-63F8-47FF-B6AC-76E7DA247D67)]
                [version(0x06030000)]
                delegate
                    HRESULT SectionsInViewChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs* e);

                [uuid(A31EAFE1-41DC-47F8-AE22-9706C8F143D4)]
                [version(0x06020000)]
                delegate
                    HRESULT WebViewNavigationFailedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs* e);

                [exclusiveto(Windows.UI.Xaml.Controls.BackClickEventArgs)]
                [uuid(2AE6146C-477E-48C9-8830-2C464B7C7104)]
                [version(0x06030000)]
                interface IBackClickEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [uuid(797C4539-45BD-4633-A044-BFB02EF5170F)]
                [version(0x06020000)]
                interface IBorder : IInspectable
                {
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ChildTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ChildTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [uuid(B81D1639-E911-4FD7-A4C4-B9C7F008B7FC)]
                [version(0x06020000)]
                interface IBorderStatics : IInspectable
                {
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(280335AE-5570-46C7-8E0B-602BE71229A2)]
                [version(0x06020000)]
                interface IButton : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(80A13C19-843A-451C-8CF5-44C701B0E216)]
                [version(0x06020000)]
                interface IButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Button** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(09108F87-DF6C-4180-9B3A-E60845825811)]
                [version(0x06030000)]
                interface IButtonWithFlyout : IInspectable
                {
                    [propget] HRESULT Flyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT Flyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                [uuid(90143898-A16C-4759-B2F0-A5F7E625169E)]
                [version(0x06030000)]
                interface IButtonStaticsWithFlyout : IInspectable
                {
                    [propget] HRESULT FlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [uuid(79190E19-CD38-4823-AEAE-64A77132F519)]
                [version(0x06020000)]
                interface ICanvas : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [uuid(40CE5C46-2962-446F-AAFB-4CDC486939C9)]
                [version(0x06020000)]
                interface ICanvasStatics : IInspectable
                {
                    [propget] HRESULT LeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLeft([in] Windows.UI.Xaml.UIElement* element, [out] [retval] DOUBLE* length);
                    HRESULT SetLeft([in] Windows.UI.Xaml.UIElement* element, [in] DOUBLE length);
                    [propget] HRESULT TopProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetTop([in] Windows.UI.Xaml.UIElement* element, [out] [retval] DOUBLE* length);
                    HRESULT SetTop([in] Windows.UI.Xaml.UIElement* element, [in] DOUBLE length);
                    [propget] HRESULT ZIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetZIndex([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* value);
                    HRESULT SetZIndex([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [uuid(1B328BD1-B400-4A8E-943B-5AD2C45BE0DF)]
                [version(0x06020000)]
                interface ICanvasFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Canvas** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CaptureElement)]
                [uuid(31A5C0E7-F307-4D4A-B626-E978863F5B74)]
                [version(0x06020000)]
                interface ICaptureElement : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Media.Capture.MediaCapture** value);
                    [propput] HRESULT Source([in] Windows.Media.Capture.MediaCapture* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CaptureElement)]
                [uuid(1E438DED-7DA6-409E-806E-305AE4AD9B3F)]
                [version(0x06020000)]
                interface ICaptureElementStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CheckBox)]
                [uuid(2294C894-7E2A-4B70-B088-8F5D814875BA)]
                [version(0x06020000)]
                interface ICheckBox : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CheckBox)]
                [uuid(4FA6AABB-3F4B-4301-BE07-1172EA61EEFB)]
                [version(0x06020000)]
                interface ICheckBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.CheckBox** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs)]
                [uuid(EA05CCE9-937C-4120-8406-792185784338)]
                [version(0x06020000)]
                interface ICleanUpVirtualizedItemEventArgs : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] IInspectable** value);
                    [propget] HRESULT UIElement([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ColumnDefinition)]
                [uuid(F7F1B229-F024-467F-970A-7E705615DB7B)]
                [version(0x06020000)]
                interface IColumnDefinition : IInspectable
                {
                    [propget] HRESULT Width([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Width([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT MaxWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxWidth([in] DOUBLE value);
                    [propget] HRESULT MinWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinWidth([in] DOUBLE value);
                    [propget] HRESULT ActualWidth([out] [retval] DOUBLE* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ColumnDefinition)]
                [uuid(06B0D728-D044-40C6-942E-AE60EAC74851)]
                [version(0x06020000)]
                interface IColumnDefinitionStatics : IInspectable
                {
                    [propget] HRESULT WidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(B9A8D05C-AC97-47F1-A5F4-3F9F4D4B116C)]
                [version(0x06020000)]
                interface IComboBox : IInspectable
                {
                    [propget] HRESULT IsDropDownOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsDropDownOpen([in] boolean value);
                    [propget] HRESULT IsEditable([out] [retval] boolean* value);
                    [propget] HRESULT IsSelectionBoxHighlighted([out] [retval] boolean* value);
                    [propget] HRESULT MaxDropDownHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxDropDownHeight([in] DOUBLE value);
                    [propget] HRESULT SelectionBoxItem([out] [retval] IInspectable** value);
                    [propget] HRESULT SelectionBoxItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings** value);
                    [eventadd] HRESULT DropDownClosed([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DropDownClosed([in] EventRegistrationToken token);
                    [eventadd] HRESULT DropDownOpened([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DropDownOpened([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(4F016541-BCFE-4A22-8932-C914981C2240)]
                [version(0x06020000)]
                interface IComboBoxOverrides : IInspectable
                {
                    HRESULT OnDropDownClosed([in] IInspectable* e);
                    HRESULT OnDropDownOpened([in] IInspectable* e);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(3E14C9B1-D15B-4DC9-8110-CF3A117B96E7)]
                [version(0x06020000)]
                interface IComboBoxStatics : IInspectable
                {
                    [propget] HRESULT IsDropDownOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxDropDownHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(AC0D0444-A65B-4ABD-86DF-3016049EFEDC)]
                [version(0x06020000)]
                interface IComboBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ComboBox** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(EA0CBF91-CA36-4FAD-972A-2E53A6718B9F)]
                [version(0x06030000)]
                interface IComboBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [uuid(93988A11-402C-4B13-96D1-7220266B9220)]
                [version(0x06030000)]
                interface IComboBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxItem)]
                [uuid(993FD6D2-2AAE-4F3B-B44D-5648F4D06114)]
                [version(0x06020000)]
                interface IComboBoxItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxItem)]
                [uuid(8FFFE867-D94C-4E87-8FC4-6EBCD63C5AC2)]
                [version(0x06020000)]
                interface IComboBoxItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ComboBoxItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)]
                [uuid(07DEEAA7-018F-4DDA-B399-FD4E13A31BEA)]
                [version(0x06030000)]
                interface IContainerContentChangingEventArgs : IInspectable
                {
                    [propget] HRESULT ItemContainer([out] [retval] Windows.UI.Xaml.Controls.Primitives.SelectorItem** value);
                    [propget] HRESULT InRecycleQueue([out] [retval] boolean* value);
                    [propget] HRESULT ItemIndex([out] [retval] INT32* value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT Phase([out] [retval] UINT32* value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    [overload("RegisterUpdateCallback")] HRESULT RegisterUpdateCallback([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>* callback);
                    [overload("RegisterUpdateCallback")] HRESULT RegisterUpdateCallbackWithPhase([in] UINT32 callbackPhase, [in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>* callback);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(A26DD1DC-CD44-435C-BE94-01D6241C231C)]
                [version(0x06020000)]
                interface IContentControl : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ContentTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ContentTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ContentTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(5F4C0B10-E38E-4B5D-BE1A-5ED04246A635)]
                [version(0x06020000)]
                interface IContentControlOverrides : IInspectable
                {
                    HRESULT OnContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnContentTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldContentTemplate, [in] Windows.UI.Xaml.DataTemplate* newContentTemplate);
                    HRESULT OnContentTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldContentTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newContentTemplateSelector);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(116982A4-5CF5-4C05-A53F-15E4876C85EC)]
                [version(0x06020000)]
                interface IContentControlStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(AB017B19-196E-4ED5-A27F-55C58FB1673F)]
                [version(0x06020000)]
                interface IContentControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ContentControl** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [uuid(652C208C-8CCF-4399-BD3E-5A015AA1BC03)]
                [version(0x06030000)]
                interface IContentControl2 : IInspectable
                {
                    [propget] HRESULT ContentTemplateRoot([out] [retval] Windows.UI.Xaml.UIElement** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(79FDE5B4-CD37-491C-8845-DAF472DEFFF6)]
                [version(0x06020000)]
                interface IContentPresenter : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ContentTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ContentTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ContentTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(A76339ED-32FF-438B-AAD5-1D68FAE93426)]
                [version(0x06020000)]
                interface IContentPresenterOverrides : IInspectable
                {
                    HRESULT OnContentTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldContentTemplate, [in] Windows.UI.Xaml.DataTemplate* newContentTemplate);
                    HRESULT OnContentTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldContentTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newContentTemplateSelector);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(18C2893B-DA2E-4426-B85A-2C7E2171BEDF)]
                [version(0x06020000)]
                interface IContentPresenterStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(3339D4F7-4815-44C4-9F76-68C83880EF10)]
                [version(0x06020000)]
                interface IContentPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ContentPresenter** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(5138E958-335D-4210-8BBB-0AA2B4B5C29E)]
                [version(0x06030000)]
                interface IContentPresenter2 : IInspectable
                {
                    [propget] HRESULT OpticalMarginAlignment([out] [retval] Windows.UI.Xaml.OpticalMarginAlignment* value);
                    [propput] HRESULT OpticalMarginAlignment([in] Windows.UI.Xaml.OpticalMarginAlignment value);
                    [propget] HRESULT TextLineBounds([out] [retval] Windows.UI.Xaml.TextLineBounds* value);
                    [propput] HRESULT TextLineBounds([in] Windows.UI.Xaml.TextLineBounds value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [uuid(C7D89DD9-06E6-46BE-A8A0-9C117D3024A3)]
                [version(0x06030000)]
                interface IContentPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT OpticalMarginAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextLineBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ContextMenuEventArgs)]
                [uuid(1F7DF263-C14B-4528-B6F0-637999D83CC6)]
                [version(0x06020000)]
                interface IContextMenuEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT CursorLeft([out] [retval] DOUBLE* value);
                    [propget] HRESULT CursorTop([out] [retval] DOUBLE* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(A907D496-46A0-4CD7-8DBE-F9A581DF60B1)]
                [version(0x06020000)]
                interface IDataTemplateSelector : IInspectable
                {
                    HRESULT SelectTemplate([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.DataTemplate** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(2D162925-5966-4BFA-8638-4D345689F6CF)]
                [version(0x06020000)]
                interface IDataTemplateSelectorOverrides : IInspectable
                {
                    HRESULT SelectTemplateCore([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.DataTemplate** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(511BAAD0-210A-457D-9521-433D2B11B7D2)]
                [version(0x06020000)]
                interface IDataTemplateSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(3792BC47-8C4B-4257-A5AE-CC3F8ED786EB)]
                [version(0x06030000)]
                interface IDataTemplateSelector2 : IInspectable
                {
                    [overload("SelectTemplate")] HRESULT SelectTemplateForItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DataTemplate** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [uuid(6C3FB5FC-8E84-4C91-AC15-04A1D885500F)]
                [version(0x06030000)]
                interface IDataTemplateSelectorOverrides2 : IInspectable
                {
                    [overload("SelectTemplateCore")] HRESULT SelectTemplateForItemCore([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DataTemplate** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(06DA3946-08B8-4103-8B8A-093EFD6A7657)]
                [version(0x06030000)]
                interface IDatePicker : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT CalendarIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT CalendarIdentifier([in] HSTRING value);
                    [propget] HRESULT Date([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT Date([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT DayVisible([out] [retval] boolean* value);
                    [propput] HRESULT DayVisible([in] boolean value);
                    [propget] HRESULT MonthVisible([out] [retval] boolean* value);
                    [propput] HRESULT MonthVisible([in] boolean value);
                    [propget] HRESULT YearVisible([out] [retval] boolean* value);
                    [propput] HRESULT YearVisible([in] boolean value);
                    [propget] HRESULT DayFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT DayFormat([in] HSTRING value);
                    [propget] HRESULT MonthFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT MonthFormat([in] HSTRING value);
                    [propget] HRESULT YearFormat([out] [retval] HSTRING* value);
                    [propput] HRESULT YearFormat([in] HSTRING value);
                    [propget] HRESULT MinYear([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MinYear([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT MaxYear([out] [retval] Windows.Foundation.DateTime* value);
                    [propput] HRESULT MaxYear([in] Windows.Foundation.DateTime value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [eventadd] HRESULT DateChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DateChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(182E7C69-2116-4C67-B513-713364831D79)]
                [version(0x06030000)]
                interface IDatePickerStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CalendarIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YearVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DayFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MonthFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YearFormatProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinYearProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxYearProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DatePicker)]
                [uuid(EEC3CA84-9896-4A7D-BB35-6FB21EAECA11)]
                [version(0x06030000)]
                interface IDatePickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.DatePicker** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs)]
                [uuid(1AE661B2-B1B4-4273-96E0-19DAFF187446)]
                [version(0x06030000)]
                interface IDatePickerValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldDate([out] [retval] Windows.Foundation.DateTime* value);
                    [propget] HRESULT NewDate([out] [retval] Windows.Foundation.DateTime* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.DragItemsStartingEventArgs)]
                [uuid(71CF215C-DAED-4783-AA11-DC574D2713E9)]
                [version(0x06020000)]
                interface IDragItemsStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(A1582F68-3D7D-4D3B-B71D-488EED1E3493)]
                [version(0x06020000)]
                interface IFlipView : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(F1DEA9BE-9AE8-4D4B-AB43-16D31E05F4F3)]
                [version(0x06020000)]
                interface IFlipViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.FlipView** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(C4FEA4FD-7AF3-4952-9FD9-9E0987FC4F29)]
                [version(0x06030000)]
                interface IFlipView2 : IInspectable
                {
                    [propget] HRESULT UseTouchAnimationsForAllNavigation([out] [retval] boolean* value);
                    [propput] HRESULT UseTouchAnimationsForAllNavigation([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                [uuid(70E3D93F-4308-4BA2-BBCE-E2CB0ED34476)]
                [version(0x06030000)]
                interface IFlipViewStatics2 : IInspectable
                {
                    [propget] HRESULT UseTouchAnimationsForAllNavigationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlipViewItem)]
                [uuid(56196565-CE2B-4BDA-A36B-82A2B8B0D4C0)]
                [version(0x06020000)]
                interface IFlipViewItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlipViewItem)]
                [uuid(F21D91FE-22A0-4412-A853-9D6A6E8F2AAF)]
                [version(0x06020000)]
                interface IFlipViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.FlipViewItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(FD104460-2E15-4BA3-8B8F-FA693A4161E9)]
                [version(0x06020000)]
                interface IGrid : IInspectable
                {
                    [propget] HRESULT RowDefinitions([out] [retval] Windows.UI.Xaml.Controls.RowDefinitionCollection** value);
                    [propget] HRESULT ColumnDefinitions([out] [retval] Windows.UI.Xaml.Controls.ColumnDefinitionCollection** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(64FE2E9F-F951-42B6-A9CE-BB179AF11595)]
                [version(0x06020000)]
                interface IGridStatics : IInspectable
                {
                    [propget] HRESULT RowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRow([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetRow([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumn([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetColumn([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRowSpan([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetRowSpan([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumnSpan([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetColumnSpan([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [uuid(AE814041-C531-43B4-BF99-12F506F7B01C)]
                [version(0x06020000)]
                interface IGridFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Grid** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GridView)]
                [uuid(026AE934-B67E-4D80-8F72-8AA64B4D827B)]
                [version(0x06020000)]
                interface IGridView : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GridView)]
                [uuid(D9BCCA89-09F9-4C6E-A83E-F199146F0E7D)]
                [version(0x06020000)]
                interface IGridViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GridView** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GridViewItem)]
                [uuid(7D9901F1-E7C1-4E83-B470-C9D6D7BDA9F5)]
                [version(0x06020000)]
                interface IGridViewItem : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GridViewItem)]
                [uuid(229B00AF-3FA6-43E9-979D-07EA0D6280DC)]
                [version(0x06020000)]
                interface IGridViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GridViewItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupItem)]
                [uuid(4AE8D5D1-7228-4A16-A61F-88C0E8F45C76)]
                [version(0x06020000)]
                interface IGroupItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupItem)]
                [uuid(D9A1D53E-B1E0-4319-9808-7A9E887E13B0)]
                [version(0x06020000)]
                interface IGroupItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GroupItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [uuid(71CA300B-B89E-4184-B0DF-A9E95447DE8D)]
                [version(0x06020000)]
                interface IGroupStyle : IInspectable
                {
                    [propget] HRESULT Panel([out] [retval] Windows.UI.Xaml.Controls.ItemsPanelTemplate** value);
                    [propput] HRESULT Panel([in] Windows.UI.Xaml.Controls.ItemsPanelTemplate* value);
                    [deprecated("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, 0x06030000)] [propget] HRESULT ContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [deprecated("ContainerStyle may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, 0x06030000)] [propput] HRESULT ContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [deprecated("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, 0x06030000)] [propget] HRESULT ContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [deprecated("ContainerStyleSelector may be altered or unavailable for releases after Windows 8.1, and is not supported for ItemsControl.GroupStyle.", deprecate, 0x06030000)] [propput] HRESULT ContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT HeaderTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT HidesIfEmpty([out] [retval] boolean* value);
                    [propput] HRESULT HidesIfEmpty([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [uuid(56FF664F-E2D7-4F49-803D-C727CDF9372D)]
                [version(0x06020000)]
                interface IGroupStyleFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [uuid(69F90679-3A11-4FE7-B4DF-2A0139D4018B)]
                [version(0x06030000)]
                interface IGroupStyle2 : IInspectable
                {
                    [propget] HRESULT HeaderContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT HeaderContainerStyle([in] Windows.UI.Xaml.Style* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                [uuid(6DDA119E-9A74-478F-A339-5BB52DE6C51E)]
                [version(0x06020000)]
                interface IGroupStyleSelector : IInspectable
                {
                    HRESULT SelectGroupStyle([in] IInspectable* group, [in] UINT32 level, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                [uuid(F691CAB2-77AD-4D3D-A51C-8EF9C3836456)]
                [version(0x06020000)]
                interface IGroupStyleSelectorOverrides : IInspectable
                {
                    HRESULT SelectGroupStyleCore([in] IInspectable* group, [in] UINT32 level, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                [uuid(BF570D33-B2F6-481F-A450-C80C291FB22D)]
                [version(0x06020000)]
                interface IGroupStyleSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GroupStyleSelector** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [uuid(CCEBACA3-3B5C-4F4C-9BFD-86887BC79772)]
                [version(0x06020000)]
                interface IHyperlinkButton : IInspectable
                {
                    [propget] HRESULT NavigateUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT NavigateUri([in] Windows.Foundation.Uri* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [uuid(FBAEB5C7-CDB7-4263-B7D6-3C0D2904ED98)]
                [version(0x06020000)]
                interface IHyperlinkButtonStatics : IInspectable
                {
                    [propget] HRESULT NavigateUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [uuid(43521BAD-4E97-4DA9-A64D-935DFD8CEDF2)]
                [version(0x06020000)]
                interface IHyperlinkButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.HyperlinkButton** instance);
                }

                [uuid(53C9F23A-F25D-446A-99B8-C7AEB839050F)]
                [version(0x06030000)]
                interface IItemContainerMapping : IInspectable
                {
                    HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** returnValue);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT IndexFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] INT32* returnValue);
                    HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                [uuid(495B7402-9AF3-4E50-AA90-03388F3086D2)]
                [version(0x06020000)]
                interface IImage : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT NineGrid([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT NineGrid([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT PlayToSource([out] [retval] Windows.Media.PlayTo.PlayToSource** value);
                    [eventadd] HRESULT ImageFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT ImageOpened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageOpened([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                [uuid(89903772-C336-43D1-9D51-C3BBD5D5D691)]
                [version(0x06020000)]
                interface IImageStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NineGridProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlayToSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(BF2195A9-F4EA-4336-977C-F8FCF78B0D9E)]
                [version(0x06020000)]
                interface INavigate : IInspectable
                {
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [out] [retval] boolean* returnValue);
                }

                [uuid(A76A3B63-229B-4DC5-AA11-9D922FBF8A98)]
                [version(0x06020000)]
                interface ISemanticZoomInformation : IInspectable
                {
                    [propget] HRESULT SemanticZoomOwner([out] [retval] Windows.UI.Xaml.Controls.SemanticZoom** value);
                    [propput] HRESULT SemanticZoomOwner([in] Windows.UI.Xaml.Controls.SemanticZoom* value);
                    [propget] HRESULT IsActiveView([out] [retval] boolean* value);
                    [propput] HRESULT IsActiveView([in] boolean value);
                    [propget] HRESULT IsZoomedInView([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomedInView([in] boolean value);
                    HRESULT InitializeViewChange();
                    HRESULT CompleteViewChange();
                    HRESULT MakeVisible([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* item);
                    HRESULT StartViewChangeFrom([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT StartViewChangeTo([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT CompleteViewChangeFrom([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT CompleteViewChangeTo([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemClickEventArgs)]
                [uuid(9C314242-F29A-494D-A3A5-D4C7B2A46852)]
                [version(0x06020000)]
                interface IItemClickEventArgs : IInspectable
                {
                    [propget] HRESULT ClickedItem([out] [retval] IInspectable** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemContainerGenerator)]
                [uuid(40765F00-83F0-4D7F-B1B8-F19DE4F1D5DA)]
                [version(0x06020000)]
                interface IItemContainerGenerator : IInspectable
                {
                    [eventadd] HRESULT ItemsChanged([in] Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemsChanged([in] EventRegistrationToken token);
                    [deprecated("ItemFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ItemFromContainer.", deprecate, 0x06030000)] HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** returnValue);
                    [deprecated("ContainerFromItem may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromItem.", deprecate, 0x06030000)] HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    [deprecated("IndexFromContainer may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.IndexFromContainer.", deprecate, 0x06030000)] HRESULT IndexFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] INT32* returnValue);
                    [deprecated("ContainerFromIndex may be altered or unavailable for releases after Windows 8.1. Instead, use ItemsControl.ContainerFromIndex.", deprecate, 0x06030000)] HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT GetItemContainerGeneratorForPanel([in] Windows.UI.Xaml.Controls.Panel* panel, [out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** returnValue);
                    HRESULT StartAt([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] Windows.UI.Xaml.Controls.Primitives.GeneratorDirection direction, [in] boolean allowStartAtRealizedItem);
                    HRESULT Stop();
                    HRESULT GenerateNext([out] boolean* isNewlyRealized, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT PrepareItemContainer([in] Windows.UI.Xaml.DependencyObject* container);
                    HRESULT RemoveAll();
                    HRESULT Remove([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] INT32 count);
                    HRESULT GeneratorPositionFromIndex([in] INT32 itemIndex, [out] [retval] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition* returnValue);
                    HRESULT IndexFromGeneratorPosition([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [out] [retval] INT32* returnValue);
                    HRESULT Recycle([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] INT32 count);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(F4A91DD8-D979-4381-8652-BDA0342A765E)]
                [version(0x06020000)]
                interface IItemsControl : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT Items([out] [retval] Windows.UI.Xaml.Controls.ItemCollection** value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ItemsPanel([out] [retval] Windows.UI.Xaml.Controls.ItemsPanelTemplate** value);
                    [propput] HRESULT ItemsPanel([in] Windows.UI.Xaml.Controls.ItemsPanelTemplate* value);
                    [propget] HRESULT DisplayMemberPath([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayMemberPath([in] HSTRING value);
                    [propget] HRESULT ItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT ItemContainerGenerator([out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** value);
                    [propget] HRESULT ItemContainerTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ItemContainerTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT GroupStyle([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.GroupStyle*>** value);
                    [propget] HRESULT GroupStyleSelector([out] [retval] Windows.UI.Xaml.Controls.GroupStyleSelector** value);
                    [propput] HRESULT GroupStyleSelector([in] Windows.UI.Xaml.Controls.GroupStyleSelector* value);
                    [propget] HRESULT IsGrouping([out] [retval] boolean* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(C79BB41B-A084-4301-A496-72971F364ED1)]
                [version(0x06020000)]
                interface IItemsControlOverrides : IInspectable
                {
                    HRESULT IsItemItsOwnContainerOverride([in] IInspectable* item, [out] [retval] boolean* returnValue);
                    HRESULT GetContainerForItemOverride([out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT ClearContainerForItemOverride([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* item);
                    HRESULT PrepareContainerForItemOverride([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* item);
                    HRESULT OnItemsChanged([in] IInspectable* e);
                    HRESULT OnItemContainerStyleChanged([in] Windows.UI.Xaml.Style* oldItemContainerStyle, [in] Windows.UI.Xaml.Style* newItemContainerStyle);
                    HRESULT OnItemContainerStyleSelectorChanged([in] Windows.UI.Xaml.Controls.StyleSelector* oldItemContainerStyleSelector, [in] Windows.UI.Xaml.Controls.StyleSelector* newItemContainerStyleSelector);
                    HRESULT OnItemTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldItemTemplate, [in] Windows.UI.Xaml.DataTemplate* newItemTemplate);
                    HRESULT OnItemTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldItemTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newItemTemplateSelector);
                    HRESULT OnGroupStyleSelectorChanged([in] Windows.UI.Xaml.Controls.GroupStyleSelector* oldGroupStyleSelector, [in] Windows.UI.Xaml.Controls.GroupStyleSelector* newGroupStyleSelector);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(37DABD89-DCFB-45B8-9AFE-874DF097905E)]
                [version(0x06020000)]
                interface IItemsControlStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayMemberPathProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemsOwner([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** returnValue);
                    HRESULT ItemsControlFromItemContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(F7BBC359-F8FD-471C-BCB2-2C74BE8EBF8C)]
                [version(0x06020000)]
                interface IItemsControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                [uuid(754C3266-0529-45E3-8748-BF747D158357)]
                [version(0x06030000)]
                interface IItemsControl2 : IInspectable
                {
                    [propget] HRESULT ItemsPanelRoot([out] [retval] Windows.UI.Xaml.Controls.Panel** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPanelTemplate)]
                [uuid(14EAD768-34B2-4B97-BF3C-E8D73230A2AA)]
                [version(0x06020000)]
                interface IItemsPanelTemplate : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(C271569B-6DCA-4E2B-8E14-C55136B02A71)]
                [version(0x06020000)]
                interface IItemsPresenter : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT HeaderTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(18DE66CD-4A6C-4B2E-AA86-CB126C9A2920)]
                [version(0x06020000)]
                interface IItemsPresenterStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(5C04AA33-1DF3-4731-A4C9-DA818378D63D)]
                [version(0x06030000)]
                interface IItemsPresenter2 : IInspectable
                {
                    [propget] HRESULT Footer([out] [retval] IInspectable** value);
                    [propput] HRESULT Footer([in] IInspectable* value);
                    [propget] HRESULT FooterTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT FooterTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT FooterTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT FooterTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                [uuid(8971632E-7867-4D66-9630-29F1C5F7403F)]
                [version(0x06030000)]
                interface IItemsPresenterStatics2 : IInspectable
                {
                    [propget] HRESULT FooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(E9F3B9FF-8E91-4ECF-A707-C927F694F881)]
                [version(0x06020000)]
                interface IListBox : IInspectable
                {
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.SelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.SelectionMode value);
                    HRESULT ScrollIntoView([in] IInspectable* item);
                    HRESULT SelectAll();
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(6D3F7F73-706A-4E53-A9AA-C9A53C9CDD70)]
                [version(0x06020000)]
                interface IListBoxStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [uuid(60CDFDA2-2F44-444B-9C94-B8C9FDA46F59)]
                [version(0x06020000)]
                interface IListBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListBox** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListBoxItem)]
                [uuid(43C13323-6EDF-4E4B-B6B2-3A93EEC41D95)]
                [version(0x06020000)]
                interface IListBoxItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListBoxItem)]
                [uuid(4398B8D4-A3DE-402C-B23D-190384B27CA8)]
                [version(0x06020000)]
                interface IListBoxItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListBoxItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListView)]
                [uuid(F6CE8C6D-FE96-41AD-A64A-C2B81C4AF7F8)]
                [version(0x06020000)]
                interface IListView : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListView)]
                [uuid(BDFF696D-3F22-41F9-97A6-883134A76113)]
                [version(0x06020000)]
                interface IListViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListView** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(3D0813BA-6890-4537-BFE5-796D9458EDD6)]
                [version(0x06020000)]
                interface IListViewBase : IInspectable
                {
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.ListViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.ListViewSelectionMode value);
                    [propget] HRESULT IsSwipeEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSwipeEnabled([in] boolean value);
                    [propget] HRESULT CanDragItems([out] [retval] boolean* value);
                    [propput] HRESULT CanDragItems([in] boolean value);
                    [propget] HRESULT CanReorderItems([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderItems([in] boolean value);
                    [propget] HRESULT IsItemClickEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsItemClickEnabled([in] boolean value);
                    [propget] HRESULT DataFetchSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT DataFetchSize([in] DOUBLE value);
                    [propget] HRESULT IncrementalLoadingThreshold([out] [retval] DOUBLE* value);
                    [propput] HRESULT IncrementalLoadingThreshold([in] DOUBLE value);
                    [propget] HRESULT IncrementalLoadingTrigger([out] [retval] Windows.UI.Xaml.Controls.IncrementalLoadingTrigger* value);
                    [propput] HRESULT IncrementalLoadingTrigger([in] Windows.UI.Xaml.Controls.IncrementalLoadingTrigger value);
                    [eventadd] HRESULT ItemClick([in] Windows.UI.Xaml.Controls.ItemClickEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT DragItemsStarting([in] Windows.UI.Xaml.Controls.DragItemsStartingEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsStarting([in] EventRegistrationToken token);
                    [overload("ScrollIntoView")] HRESULT ScrollIntoView([in] IInspectable* item);
                    HRESULT SelectAll();
                    HRESULT LoadMoreItemsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Data.LoadMoreItemsResult>** returnValue);
                    [overload("ScrollIntoView")] HRESULT ScrollIntoViewWithAlignment([in] IInspectable* item, [in] Windows.UI.Xaml.Controls.ScrollIntoViewAlignment alignment);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT HeaderTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(8532B8F7-3E16-455B-89A8-C1346223F6D3)]
                [version(0x06020000)]
                interface IListViewBaseStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSwipeEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanDragItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsItemClickEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DataFetchSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IncrementalLoadingThresholdProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IncrementalLoadingTriggerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SemanticZoomOwnerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsActiveViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(E67E6C7F-150F-46D0-A6AC-C5002BD9CA53)]
                [version(0x06020000)]
                interface IListViewBaseFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListViewBase** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(D1C2A4F7-78A3-4491-86E0-2DDEBC007AC5)]
                [version(0x06030000)]
                interface IListViewBase2 : IInspectable
                {
                    [propget] HRESULT ShowsScrollingPlaceholders([out] [retval] boolean* value);
                    [propput] HRESULT ShowsScrollingPlaceholders([in] boolean value);
                    [eventadd] HRESULT ContainerContentChanging([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase*, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContainerContentChanging([in] EventRegistrationToken token);
                    HRESULT SetDesiredContainerUpdateDuration([in] Windows.Foundation.TimeSpan duration);
                    [propget] HRESULT Footer([out] [retval] IInspectable** value);
                    [propput] HRESULT Footer([in] IInspectable* value);
                    [propget] HRESULT FooterTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT FooterTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT FooterTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT FooterTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [uuid(821C00C8-78CC-411F-9F2E-A55758227F3E)]
                [version(0x06030000)]
                interface IListViewBaseStatics2 : IInspectable
                {
                    [propget] HRESULT ShowsScrollingPlaceholdersProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewItem)]
                [uuid(B7BB4305-3DD9-43DE-A8C0-C472F085BC11)]
                [version(0x06020000)]
                interface IListViewItem : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewItem)]
                [uuid(F431073D-9CAC-42A2-82DF-0F4490BC4E2E)]
                [version(0x06020000)]
                interface IListViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListViewItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(A38ED2CF-13DE-4299-ADE2-AE18F74ED353)]
                [version(0x06020000)]
                interface IMediaElement : IInspectable
                {
                    [propget] HRESULT PosterSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PosterSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT IsMuted([out] [retval] boolean* value);
                    [propput] HRESULT IsMuted([in] boolean value);
                    [propget] HRESULT IsAudioOnly([out] [retval] boolean* value);
                    [propget] HRESULT AutoPlay([out] [retval] boolean* value);
                    [propput] HRESULT AutoPlay([in] boolean value);
                    [propget] HRESULT Volume([out] [retval] DOUBLE* value);
                    [propput] HRESULT Volume([in] DOUBLE value);
                    [propget] HRESULT Balance([out] [retval] DOUBLE* value);
                    [propput] HRESULT Balance([in] DOUBLE value);
                    [propget] HRESULT NaturalVideoHeight([out] [retval] INT32* value);
                    [propget] HRESULT NaturalVideoWidth([out] [retval] INT32* value);
                    [propget] HRESULT NaturalDuration([out] [retval] Windows.UI.Xaml.Duration* value);
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Position([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT DownloadProgress([out] [retval] DOUBLE* value);
                    [propget] HRESULT BufferingProgress([out] [retval] DOUBLE* value);
                    [propget] HRESULT DownloadProgressOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT CurrentState([out] [retval] Windows.UI.Xaml.Media.MediaElementState* value);
                    [propget] HRESULT Markers([out] [retval] Windows.UI.Xaml.Media.TimelineMarkerCollection** value);
                    [propget] HRESULT CanSeek([out] [retval] boolean* value);
                    [propget] HRESULT CanPause([out] [retval] boolean* value);
                    [propget] HRESULT AudioStreamCount([out] [retval] INT32* value);
                    [propget] HRESULT AudioStreamIndex([out] [retval] Windows.Foundation.IReference<INT32>** value);
                    [propput] HRESULT AudioStreamIndex([in] Windows.Foundation.IReference<INT32>* value);
                    [propget] HRESULT PlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaybackRate([in] DOUBLE value);
                    [propget] HRESULT IsLooping([out] [retval] boolean* value);
                    [propput] HRESULT IsLooping([in] boolean value);
                    [propget] HRESULT PlayToSource([out] [retval] Windows.Media.PlayTo.PlayToSource** value);
                    [propget] HRESULT DefaultPlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT DefaultPlaybackRate([in] DOUBLE value);
                    [propget] HRESULT AspectRatioWidth([out] [retval] INT32* value);
                    [propget] HRESULT AspectRatioHeight([out] [retval] INT32* value);
                    [propget] HRESULT RealTimePlayback([out] [retval] boolean* value);
                    [propput] HRESULT RealTimePlayback([in] boolean value);
                    [propget] HRESULT AudioCategory([out] [retval] Windows.UI.Xaml.Media.AudioCategory* value);
                    [propput] HRESULT AudioCategory([in] Windows.UI.Xaml.Media.AudioCategory value);
                    [propget] HRESULT AudioDeviceType([out] [retval] Windows.UI.Xaml.Media.AudioDeviceType* value);
                    [propput] HRESULT AudioDeviceType([in] Windows.UI.Xaml.Media.AudioDeviceType value);
                    [propget] HRESULT ProtectionManager([out] [retval] Windows.Media.Protection.MediaProtectionManager** value);
                    [propput] HRESULT ProtectionManager([in] Windows.Media.Protection.MediaProtectionManager* value);
                    [propget] HRESULT Stereo3DVideoPackingMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode* value);
                    [propput] HRESULT Stereo3DVideoPackingMode([in] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode value);
                    [propget] HRESULT Stereo3DVideoRenderMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoRenderMode* value);
                    [propput] HRESULT Stereo3DVideoRenderMode([in] Windows.UI.Xaml.Media.Stereo3DVideoRenderMode value);
                    [propget] HRESULT IsStereo3DVideo([out] [retval] boolean* value);
                    [eventadd] HRESULT MediaOpened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaOpened([in] EventRegistrationToken token);
                    [eventadd] HRESULT MediaEnded([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaEnded([in] EventRegistrationToken token);
                    [eventadd] HRESULT MediaFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT DownloadProgressChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DownloadProgressChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT BufferingProgressChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BufferingProgressChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT CurrentStateChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CurrentStateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT MarkerReached([in] Windows.UI.Xaml.Media.TimelineMarkerRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MarkerReached([in] EventRegistrationToken token);
                    [eventadd] HRESULT RateChanged([in] Windows.UI.Xaml.Media.RateChangedRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT VolumeChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT VolumeChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SeekCompleted([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SeekCompleted([in] EventRegistrationToken token);
                    HRESULT Stop();
                    HRESULT Play();
                    HRESULT Pause();
                    HRESULT CanPlayType([in] HSTRING type, [out] [retval] Windows.UI.Xaml.Media.MediaCanPlayResponse* returnValue);
                    HRESULT SetSource([in] Windows.Storage.Streams.IRandomAccessStream* stream, [in] HSTRING mimeType);
                    HRESULT GetAudioStreamLanguage([in] Windows.Foundation.IReference<INT32>* index, [out] [retval] HSTRING* returnValue);
                    HRESULT AddAudioEffect([in] HSTRING effectID, [in] boolean effectOptional, [in] Windows.Foundation.Collections.IPropertySet* effectConfiguration);
                    HRESULT AddVideoEffect([in] HSTRING effectID, [in] boolean effectOptional, [in] Windows.Foundation.Collections.IPropertySet* effectConfiguration);
                    HRESULT RemoveAllEffects();
                    [propget] HRESULT ActualStereo3DVideoPackingMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(DCCD2CB9-7568-4682-A72A-8DDF2A2665CA)]
                [version(0x06020000)]
                interface IMediaElementStatics : IInspectable
                {
                    [propget] HRESULT PosterSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsMutedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAudioOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoPlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VolumeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BalanceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalVideoHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalVideoWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalDurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PositionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DownloadProgressProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BufferingProgressProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DownloadProgressOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CurrentStateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanSeekProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanPauseProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioStreamCountProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioStreamIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLoopingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlayToSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultPlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AspectRatioWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AspectRatioHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RealTimePlaybackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioCategoryProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioDeviceTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProtectionManagerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Stereo3DVideoPackingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Stereo3DVideoRenderModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStereo3DVideoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActualStereo3DVideoPackingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(FD53DA65-B186-4654-BFDB-180ED26CAD07)]
                [version(0x06030000)]
                interface IMediaElement2 : IInspectable
                {
                    [propget] HRESULT AreTransportControlsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreTransportControlsEnabled([in] boolean value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT IsFullWindow([out] [retval] boolean* value);
                    [propput] HRESULT IsFullWindow([in] boolean value);
                    HRESULT SetMediaStreamSource([in] Windows.Media.Core.IMediaSource* source);
                    [propget] HRESULT PlayToPreferredSourceUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT PlayToPreferredSourceUri([in] Windows.Foundation.Uri* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [uuid(9EE7F826-F154-4DC6-8014-A6EBA987F847)]
                [version(0x06030000)]
                interface IMediaElementStatics2 : IInspectable
                {
                    [propget] HRESULT AreTransportControlsEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFullWindowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlayToPreferredSourceUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.NotifyEventArgs)]
                [uuid(AF0E05F7-C4B7-44C5-B09D-5CB7052B3A97)]
                [version(0x06020000)]
                interface INotifyEventArgs : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] HSTRING* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.NotifyEventArgs)]
                [uuid(0D140F56-1DCE-4FCD-85BC-5A5572273B9C)]
                [version(0x06030000)]
                interface INotifyEventArgs2 : IInspectable
                {
                    [propget] HRESULT CallingUri([out] [retval] Windows.Foundation.Uri** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(A50A4BBD-8361-469C-90DA-E9A40C7474DF)]
                [version(0x06020000)]
                interface IPanel : IInspectable
                {
                    [propget] HRESULT Children([out] [retval] Windows.UI.Xaml.Controls.UIElementCollection** value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsItemsHost([out] [retval] boolean* value);
                    [propget] HRESULT ChildrenTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ChildrenTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(F23D6B5D-8330-47A6-A046-25F509B25232)]
                [version(0x06020000)]
                interface IPanelStatics : IInspectable
                {
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsItemsHostProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildrenTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [uuid(EEE68111-C7CC-433F-95CD-D630C34302DD)]
                [version(0x06020000)]
                interface IPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Panel** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(02B9AA11-0B47-4E7D-AD91-3A4168ED230D)]
                [version(0x06020000)]
                interface IPasswordBox : IInspectable
                {
                    [propget] HRESULT Password([out] [retval] HSTRING* value);
                    [propput] HRESULT Password([in] HSTRING value);
                    [propget] HRESULT PasswordChar([out] [retval] HSTRING* value);
                    [propput] HRESULT PasswordChar([in] HSTRING value);
                    [propget] HRESULT IsPasswordRevealButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPasswordRevealButtonEnabled([in] boolean value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                    [eventadd] HRESULT PasswordChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PasswordChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(5EE67563-2D74-4ACE-BD79-FCAB61A7D77B)]
                [version(0x06020000)]
                interface IPasswordBoxStatics : IInspectable
                {
                    [propget] HRESULT PasswordProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PasswordCharProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPasswordRevealButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(5ED738DF-212F-4AEB-B5B8-2C219AEC3C0C)]
                [version(0x06030000)]
                interface IPasswordBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [eventadd] HRESULT Paste([in] Windows.UI.Xaml.Controls.TextControlPasteEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Paste([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [uuid(FC57935F-98FA-4066-B785-FA725ECDE232)]
                [version(0x06030000)]
                interface IPasswordBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                [uuid(AE752C89-0067-4963-BF4C-29DB0C4A507E)]
                [version(0x06020000)]
                interface IProgressBar : IInspectable
                {
                    [propget] HRESULT IsIndeterminate([out] [retval] boolean* value);
                    [propput] HRESULT IsIndeterminate([in] boolean value);
                    [propget] HRESULT ShowError([out] [retval] boolean* value);
                    [propput] HRESULT ShowError([in] boolean value);
                    [propget] HRESULT ShowPaused([out] [retval] boolean* value);
                    [propput] HRESULT ShowPaused([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                [uuid(7A129FDA-5837-4E26-B3B4-E1C092CEBBEC)]
                [version(0x06020000)]
                interface IProgressBarStatics : IInspectable
                {
                    [propget] HRESULT IsIndeterminateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowErrorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowPausedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                [uuid(DA9A8C11-1591-400B-A993-0F1C5CC12F3B)]
                [version(0x06020000)]
                interface IProgressBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ProgressBar** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ProgressRing)]
                [uuid(6DA5E49E-6E9D-425C-BD7C-02173E39763F)]
                [version(0x06020000)]
                interface IProgressRing : IInspectable
                {
                    [propget] HRESULT IsActive([out] [retval] boolean* value);
                    [propput] HRESULT IsActive([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ProgressRing)]
                [uuid(E8B62507-4E2C-47D5-A54A-C6C48A5E6989)]
                [version(0x06020000)]
                interface IProgressRingStatics : IInspectable
                {
                    [propget] HRESULT IsActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [uuid(325C44E0-9A03-4BF3-ABD6-6FBB46C9A486)]
                [version(0x06020000)]
                interface IRadioButton : IInspectable
                {
                    [propget] HRESULT GroupName([out] [retval] HSTRING* value);
                    [propput] HRESULT GroupName([in] HSTRING value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [uuid(6B149293-F50F-4BD8-B0AC-5C162F33A208)]
                [version(0x06020000)]
                interface IRadioButtonStatics : IInspectable
                {
                    [propget] HRESULT GroupNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [uuid(F1D04933-34E1-4A5C-B2AE-CA3B1C0B20DE)]
                [version(0x06020000)]
                interface IRadioButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.RadioButton** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(90A57A40-80B6-4FCE-B1EC-E3C616284B6A)]
                [version(0x06020000)]
                interface IRichEditBox : IInspectable
                {
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT AcceptsReturn([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsReturn([in] boolean value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT IsSpellCheckEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSpellCheckEnabled([in] boolean value);
                    [propget] HRESULT IsTextPredictionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextPredictionEnabled([in] boolean value);
                    [propget] HRESULT Document([out] [retval] Windows.UI.Text.ITextDocument** value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [eventadd] HRESULT TextChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(F5E03A74-88EA-479B-9A05-37089FF30EDE)]
                [version(0x06020000)]
                interface IRichEditBoxStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsReturnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSpellCheckEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextPredictionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(61A1DF62-2806-41ED-88ED-AE21F47AB422)]
                [version(0x06020000)]
                interface IRichEditBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.RichEditBox** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(BBEA6EAD-E805-47A4-BBE7-47E59B8F74A7)]
                [version(0x06030000)]
                interface IRichEditBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [eventadd] HRESULT Paste([in] Windows.UI.Xaml.Controls.TextControlPasteEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Paste([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                [uuid(E3EB26DE-2748-420B-B1FC-CE95B6E85EEC)]
                [version(0x06030000)]
                interface IRichEditBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(E5FFF9E2-B968-49E7-97D4-8CCA2AC3AE7C)]
                [version(0x06020000)]
                interface IRichTextBlock : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT TextTrimming([out] [retval] Windows.UI.Xaml.TextTrimming* value);
                    [propput] HRESULT TextTrimming([in] Windows.UI.Xaml.TextTrimming value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT Blocks([out] [retval] Windows.UI.Xaml.Documents.BlockCollection** value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT OverflowContentTarget([out] [retval] Windows.UI.Xaml.Controls.RichTextBlockOverflow** value);
                    [propput] HRESULT OverflowContentTarget([in] Windows.UI.Xaml.Controls.RichTextBlockOverflow* value);
                    [propget] HRESULT IsTextSelectionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSelectionEnabled([in] boolean value);
                    [propget] HRESULT HasOverflowContent([out] [retval] boolean* value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                    HRESULT Select([in] Windows.UI.Xaml.Documents.TextPointer* start, [in] Windows.UI.Xaml.Documents.TextPointer* end);
                    HRESULT GetPositionFromPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** returnValue);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                    [propget] HRESULT TextIndent([out] [retval] DOUBLE* value);
                    [propput] HRESULT TextIndent([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(492D883C-ADEA-433C-BE1C-208A164262BE)]
                [version(0x06020000)]
                interface IRichTextBlockStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextTrimmingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowContentTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSelectionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasOverflowContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextIndentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(3F209013-03E7-4508-964A-91AEDAB3D11E)]
                [version(0x06030000)]
                interface IRichTextBlock2 : IInspectable
                {
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                    [propget] HRESULT TextLineBounds([out] [retval] Windows.UI.Xaml.TextLineBounds* value);
                    [propput] HRESULT TextLineBounds([in] Windows.UI.Xaml.TextLineBounds value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT OpticalMarginAlignment([out] [retval] Windows.UI.Xaml.OpticalMarginAlignment* value);
                    [propput] HRESULT OpticalMarginAlignment([in] Windows.UI.Xaml.OpticalMarginAlignment value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [uuid(0D6131E1-AF29-48CE-8AAF-74ECC28BFBB0)]
                [version(0x06030000)]
                interface IRichTextBlockStatics2 : IInspectable
                {
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextLineBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpticalMarginAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(4F93749B-DAC3-4A42-9CBB-99F0DE37C071)]
                [version(0x06020000)]
                interface IRichTextBlockOverflow : IInspectable
                {
                    [propget] HRESULT OverflowContentTarget([out] [retval] Windows.UI.Xaml.Controls.RichTextBlockOverflow** value);
                    [propput] HRESULT OverflowContentTarget([in] Windows.UI.Xaml.Controls.RichTextBlockOverflow* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT ContentSource([out] [retval] Windows.UI.Xaml.Controls.RichTextBlock** value);
                    [propget] HRESULT HasOverflowContent([out] [retval] boolean* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    HRESULT GetPositionFromPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** returnValue);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(041AC2F7-4F2B-43C3-A122-3FEA9CA9DC87)]
                [version(0x06020000)]
                interface IRichTextBlockOverflowStatics : IInspectable
                {
                    [propget] HRESULT OverflowContentTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasOverflowContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(8742624E-A882-4826-B929-4D5C3905B9A1)]
                [version(0x06030000)]
                interface IRichTextBlockOverflow2 : IInspectable
                {
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [uuid(B5EBED4C-F8C4-4A3A-907F-E53E78279FA3)]
                [version(0x06030000)]
                interface IRichTextBlockOverflowStatics2 : IInspectable
                {
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RowDefinition)]
                [uuid(4ABAE829-D80C-4A5E-A48C-F8B3D3B6533D)]
                [version(0x06020000)]
                interface IRowDefinition : IInspectable
                {
                    [propget] HRESULT Height([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Height([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT MaxHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxHeight([in] DOUBLE value);
                    [propget] HRESULT MinHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinHeight([in] DOUBLE value);
                    [propget] HRESULT ActualHeight([out] [retval] DOUBLE* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.RowDefinition)]
                [uuid(5ADF3FE5-2056-4724-94D6-E4812B022EC8)]
                [version(0x06020000)]
                interface IRowDefinitionStatics : IInspectable
                {
                    [propget] HRESULT HeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollContentPresenter)]
                [uuid(5712EE2B-0EEB-46D3-AA31-5F6801B8DE20)]
                [version(0x06020000)]
                interface IScrollContentPresenter : IInspectable
                {
                    [propget] HRESULT CanVerticallyScroll([out] [retval] boolean* value);
                    [propput] HRESULT CanVerticallyScroll([in] boolean value);
                    [propget] HRESULT CanHorizontallyScroll([out] [retval] boolean* value);
                    [propput] HRESULT CanHorizontallyScroll([in] boolean value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollOwner([out] [retval] IInspectable** value);
                    [propput] HRESULT ScrollOwner([in] IInspectable* value);
                    HRESULT LineUp();
                    HRESULT LineDown();
                    HRESULT LineLeft();
                    HRESULT LineRight();
                    HRESULT PageUp();
                    HRESULT PageDown();
                    HRESULT PageLeft();
                    HRESULT PageRight();
                    HRESULT MouseWheelUp();
                    HRESULT MouseWheelDown();
                    HRESULT MouseWheelLeft();
                    HRESULT MouseWheelRight();
                    HRESULT SetHorizontalOffset([in] DOUBLE offset);
                    HRESULT SetVerticalOffset([in] DOUBLE offset);
                    HRESULT MakeVisible([in] Windows.UI.Xaml.UIElement* visual, [in] Windows.Foundation.Rect rectangle, [out] [retval] Windows.Foundation.Rect* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(64E9BE00-4DC1-493D-ABE7-CBD3C577490D)]
                [version(0x06020000)]
                interface IScrollViewer : IInspectable
                {
                    [propget] HRESULT HorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* value);
                    [propput] HRESULT HorizontalScrollBarVisibility([in] Windows.UI.Xaml.Controls.ScrollBarVisibility value);
                    [propget] HRESULT VerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* value);
                    [propput] HRESULT VerticalScrollBarVisibility([in] Windows.UI.Xaml.Controls.ScrollBarVisibility value);
                    [propget] HRESULT IsHorizontalRailEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalRailEnabled([in] boolean value);
                    [propget] HRESULT IsVerticalRailEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalRailEnabled([in] boolean value);
                    [propget] HRESULT IsHorizontalScrollChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalScrollChainingEnabled([in] boolean value);
                    [propget] HRESULT IsVerticalScrollChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalScrollChainingEnabled([in] boolean value);
                    [propget] HRESULT IsZoomChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomChainingEnabled([in] boolean value);
                    [propget] HRESULT IsScrollInertiaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsScrollInertiaEnabled([in] boolean value);
                    [propget] HRESULT IsZoomInertiaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomInertiaEnabled([in] boolean value);
                    [propget] HRESULT HorizontalScrollMode([out] [retval] Windows.UI.Xaml.Controls.ScrollMode* value);
                    [propput] HRESULT HorizontalScrollMode([in] Windows.UI.Xaml.Controls.ScrollMode value);
                    [propget] HRESULT VerticalScrollMode([out] [retval] Windows.UI.Xaml.Controls.ScrollMode* value);
                    [propput] HRESULT VerticalScrollMode([in] Windows.UI.Xaml.Controls.ScrollMode value);
                    [propget] HRESULT ZoomMode([out] [retval] Windows.UI.Xaml.Controls.ZoomMode* value);
                    [propput] HRESULT ZoomMode([in] Windows.UI.Xaml.Controls.ZoomMode value);
                    [propget] HRESULT HorizontalSnapPointsAlignment([out] [retval] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment* value);
                    [propput] HRESULT HorizontalSnapPointsAlignment([in] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment value);
                    [propget] HRESULT VerticalSnapPointsAlignment([out] [retval] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment* value);
                    [propput] HRESULT VerticalSnapPointsAlignment([in] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment value);
                    [propget] HRESULT HorizontalSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT HorizontalSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT VerticalSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT VerticalSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT ZoomSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT ZoomSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT MinZoomFactor([out] [retval] FLOAT* value);
                    [propput] HRESULT MinZoomFactor([in] FLOAT value);
                    [propget] HRESULT MaxZoomFactor([out] [retval] FLOAT* value);
                    [propput] HRESULT MaxZoomFactor([in] FLOAT value);
                    [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                    [propget] HRESULT ZoomSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<FLOAT>** value);
                    [eventadd] HRESULT ViewChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                    [deprecated("ScrollToHorizontalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.", deprecate, 0x06030000)] HRESULT ScrollToHorizontalOffset([in] DOUBLE offset);
                    [deprecated("ScrollToVerticalOffset may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.", deprecate, 0x06030000)] HRESULT ScrollToVerticalOffset([in] DOUBLE offset);
                    [deprecated("ZoomToFactor may be altered or unavailable for releases after Windows 8.1. Instead, use ChangeView.", deprecate, 0x06030000)] HRESULT ZoomToFactor([in] FLOAT factor);
                    HRESULT InvalidateScrollInfo();
                    [propget] HRESULT IsDeferredScrollingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDeferredScrollingEnabled([in] boolean value);
                    [propget] HRESULT BringIntoViewOnFocusChange([out] [retval] boolean* value);
                    [propput] HRESULT BringIntoViewOnFocusChange([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(33D1299D-8D6E-4290-BF22-905CCCD04D31)]
                [version(0x06020000)]
                interface IScrollViewerStatics : IInspectable
                {
                    [propget] HRESULT HorizontalSnapPointsAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSnapPointsAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewportWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollableWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExtentWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewportHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollableHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExtentHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomSnapPointsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHorizontalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* horizontalScrollBarVisibility);
                    HRESULT SetHorizontalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility);
                    [propget] HRESULT VerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVerticalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* verticalScrollBarVisibility);
                    HRESULT SetVerticalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollBarVisibility verticalScrollBarVisibility);
                    [propget] HRESULT IsHorizontalRailEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsHorizontalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isHorizontalRailEnabled);
                    HRESULT SetIsHorizontalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isHorizontalRailEnabled);
                    [propget] HRESULT IsVerticalRailEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVerticalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isVerticalRailEnabled);
                    HRESULT SetIsVerticalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isVerticalRailEnabled);
                    [propget] HRESULT IsHorizontalScrollChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsHorizontalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isHorizontalScrollChainingEnabled);
                    HRESULT SetIsHorizontalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isHorizontalScrollChainingEnabled);
                    [propget] HRESULT IsVerticalScrollChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVerticalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isVerticalScrollChainingEnabled);
                    HRESULT SetIsVerticalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isVerticalScrollChainingEnabled);
                    [propget] HRESULT IsZoomChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsZoomChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isZoomChainingEnabled);
                    HRESULT SetIsZoomChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isZoomChainingEnabled);
                    [propget] HRESULT IsScrollInertiaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsScrollInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isScrollInertiaEnabled);
                    HRESULT SetIsScrollInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isScrollInertiaEnabled);
                    [propget] HRESULT IsZoomInertiaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsZoomInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isZoomInertiaEnabled);
                    HRESULT SetIsZoomInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isZoomInertiaEnabled);
                    [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHorizontalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollMode* horizontalScrollMode);
                    HRESULT SetHorizontalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode);
                    [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVerticalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollMode* verticalScrollMode);
                    HRESULT SetVerticalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollMode verticalScrollMode);
                    [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetZoomMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ZoomMode* zoomMode);
                    HRESULT SetZoomMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ZoomMode zoomMode);
                    [propget] HRESULT IsDeferredScrollingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsDeferredScrollingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isDeferredScrollingEnabled);
                    HRESULT SetIsDeferredScrollingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isDeferredScrollingEnabled);
                    [propget] HRESULT BringIntoViewOnFocusChangeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetBringIntoViewOnFocusChange([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* bringIntoViewOnFocusChange);
                    HRESULT SetBringIntoViewOnFocusChange([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean bringIntoViewOnFocusChange);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(64E9BE10-4DD1-494D-ABF7-CBD3C577491D)]
                [version(0x06030000)]
                interface IScrollViewer2 : IInspectable
                {
                    [propget] HRESULT TopLeftHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT TopLeftHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT LeftHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT LeftHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT TopHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT TopHeader([in] Windows.UI.Xaml.UIElement* value);
                    [eventadd] HRESULT ViewChanging([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChanging([in] EventRegistrationToken token);
                    [overload("ChangeView")] HRESULT ChangeView([in] Windows.Foundation.IReference<DOUBLE>* horizontalOffset, [in] Windows.Foundation.IReference<DOUBLE>* verticalOffset, [in] Windows.Foundation.IReference<FLOAT>* zoomFactor, [out] [retval] boolean* returnValue);
                    [overload("ChangeView")] HRESULT ChangeViewWithOptionalAnimation([in] Windows.Foundation.IReference<DOUBLE>* horizontalOffset, [in] Windows.Foundation.IReference<DOUBLE>* verticalOffset, [in] Windows.Foundation.IReference<FLOAT>* zoomFactor, [in] boolean disableAnimation, [out] [retval] boolean* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [uuid(33D129AD-8D7E-42A0-BF32-905CCCD04D41)]
                [version(0x06030000)]
                interface IScrollViewerStatics2 : IInspectable
                {
                    [propget] HRESULT TopLeftHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LeftHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerView)]
                [uuid(64E9BE01-4DC2-493E-ABE8-CBD3C577490E)]
                [version(0x06030000)]
                interface IScrollViewerView : IInspectable
                {
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs)]
                [uuid(4DD04F7E-7A11-4B2E-9933-577DF39252B6)]
                [version(0x06020000)]
                interface IScrollViewerViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsIntermediate([out] [retval] boolean* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs)]
                [uuid(4DD04F7F-7A11-4B2E-9933-577DF39252B6)]
                [version(0x06030000)]
                interface IScrollViewerViewChangingEventArgs : IInspectable
                {
                    [propget] HRESULT NextView([out] [retval] Windows.UI.Xaml.Controls.ScrollViewerView** value);
                    [propget] HRESULT FinalView([out] [retval] Windows.UI.Xaml.Controls.ScrollViewerView** value);
                    [propget] HRESULT IsInertial([out] [retval] boolean* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)]
                [uuid(C972D2DC-B609-4758-851E-A799C21DE97D)]
                [version(0x06020000)]
                interface ISelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT RemovedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)]
                [uuid(11A8B6B5-2830-4517-84CD-5524C8B88B45)]
                [version(0x06020000)]
                interface ISelectionChangedEventArgsFactory : IInspectable
                {
                    HRESULT CreateInstanceWithRemovedItemsAndAddedItems([in] Windows.Foundation.Collections.IVector<IInspectable*>* removedItems, [in] Windows.Foundation.Collections.IVector<IInspectable*>* addedItems, [in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SelectionChangedEventArgs** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoom)]
                [uuid(019FFF21-ECE6-4FBC-BF40-8938D4813E27)]
                [version(0x06020000)]
                interface ISemanticZoom : IInspectable
                {
                    [propget] HRESULT ZoomedInView([out] [retval] Windows.UI.Xaml.Controls.ISemanticZoomInformation** value);
                    [propput] HRESULT ZoomedInView([in] Windows.UI.Xaml.Controls.ISemanticZoomInformation* value);
                    [propget] HRESULT ZoomedOutView([out] [retval] Windows.UI.Xaml.Controls.ISemanticZoomInformation** value);
                    [propput] HRESULT ZoomedOutView([in] Windows.UI.Xaml.Controls.ISemanticZoomInformation* value);
                    [propget] HRESULT IsZoomedInViewActive([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomedInViewActive([in] boolean value);
                    [propget] HRESULT CanChangeViews([out] [retval] boolean* value);
                    [propput] HRESULT CanChangeViews([in] boolean value);
                    [eventadd] HRESULT ViewChangeStarted([in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChangeStarted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ViewChangeCompleted([in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChangeCompleted([in] EventRegistrationToken token);
                    HRESULT ToggleActiveView();
                    [propget] HRESULT IsZoomOutButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomOutButtonEnabled([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoom)]
                [uuid(8EF17EF2-9898-4666-B285-3ED38A07910E)]
                [version(0x06020000)]
                interface ISemanticZoomStatics : IInspectable
                {
                    [propget] HRESULT ZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomedOutViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanChangeViewsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomOutButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoomLocation)]
                [uuid(42011736-E3C2-496B-BC4E-D750D4375B9A)]
                [version(0x06020000)]
                interface ISemanticZoomLocation : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propput] HRESULT Item([in] IInspectable* value);
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT Bounds([in] Windows.Foundation.Rect value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs)]
                [uuid(47DFC068-B569-4B19-842D-8E6CF90989AF)]
                [version(0x06020000)]
                interface ISemanticZoomViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsSourceZoomedInView([out] [retval] boolean* value);
                    [propput] HRESULT IsSourceZoomedInView([in] boolean value);
                    [propget] HRESULT SourceItem([out] [retval] Windows.UI.Xaml.Controls.SemanticZoomLocation** value);
                    [propput] HRESULT SourceItem([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* value);
                    [propget] HRESULT DestinationItem([out] [retval] Windows.UI.Xaml.Controls.SemanticZoomLocation** value);
                    [propput] HRESULT DestinationItem([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SettingsFlyout)]
                [uuid(830BA82B-C55B-4E32-A51C-5791E024C8AF)]
                [version(0x06030000)]
                interface ISettingsFlyout : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT HeaderBackground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT HeaderBackground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT HeaderForeground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT HeaderForeground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IconSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT IconSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.SettingsFlyoutTemplateSettings** value);
                    [eventadd] HRESULT BackClick([in] Windows.UI.Xaml.Controls.BackClickEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BackClick([in] EventRegistrationToken token);
                    HRESULT Show();
                    HRESULT ShowIndependent();
                    HRESULT Hide();
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SettingsFlyout)]
                [uuid(D0E3B535-9157-4BE4-A42A-F591698846AC)]
                [version(0x06030000)]
                interface ISettingsFlyoutStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderBackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SettingsFlyout)]
                [uuid(480C7011-57AA-4DB6-B6FD-EC676F6D414E)]
                [version(0x06030000)]
                interface ISettingsFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SettingsFlyout** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(89572027-4C48-4700-8076-497BA73D9C18)]
                [version(0x06020000)]
                interface ISlider : IInspectable
                {
                    [propget] HRESULT IntermediateValue([out] [retval] DOUBLE* value);
                    [propput] HRESULT IntermediateValue([in] DOUBLE value);
                    [propget] HRESULT StepFrequency([out] [retval] DOUBLE* value);
                    [propput] HRESULT StepFrequency([in] DOUBLE value);
                    [propget] HRESULT SnapsTo([out] [retval] Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo* value);
                    [propput] HRESULT SnapsTo([in] Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo value);
                    [propget] HRESULT TickFrequency([out] [retval] DOUBLE* value);
                    [propput] HRESULT TickFrequency([in] DOUBLE value);
                    [propget] HRESULT TickPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.TickPlacement* value);
                    [propput] HRESULT TickPlacement([in] Windows.UI.Xaml.Controls.Primitives.TickPlacement value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT IsDirectionReversed([out] [retval] boolean* value);
                    [propput] HRESULT IsDirectionReversed([in] boolean value);
                    [propget] HRESULT IsThumbToolTipEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsThumbToolTipEnabled([in] boolean value);
                    [propget] HRESULT ThumbToolTipValueConverter([out] [retval] Windows.UI.Xaml.Data.IValueConverter** value);
                    [propput] HRESULT ThumbToolTipValueConverter([in] Windows.UI.Xaml.Data.IValueConverter* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(8A4363D7-7FDF-4D30-98FE-CE78C05B31CF)]
                [version(0x06020000)]
                interface ISliderStatics : IInspectable
                {
                    [propget] HRESULT IntermediateValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StepFrequencyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SnapsToProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TickFrequencyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TickPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsDirectionReversedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsThumbToolTipEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ThumbToolTipValueConverterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(03A67B37-C7BF-437C-848F-8CB5B753EAB4)]
                [version(0x06020000)]
                interface ISliderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Slider** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(40A3C50E-87D6-4D2F-B1CF-B279CC996F26)]
                [version(0x06030000)]
                interface ISlider2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [uuid(00E7935D-79A5-4759-96A6-29E0A94ADD33)]
                [version(0x06030000)]
                interface ISliderStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(B8AE8FE2-D641-4FD7-80B4-7439207D2798)]
                [version(0x06020000)]
                interface IStackPanel : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegular([out] [retval] boolean* value);
                    [propput] HRESULT AreScrollSnapPointsRegular([in] boolean value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(F0D0CD93-4DBC-48A7-9914-954924657771)]
                [version(0x06020000)]
                interface IStackPanelStatics : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegularProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [uuid(63D8248A-8B34-445A-808F-B6ECD62A27D9)]
                [version(0x06020000)]
                interface IStackPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.StackPanel** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [uuid(D1113F67-D8C1-4AE4-98F0-D8504502F08B)]
                [version(0x06020000)]
                interface IStyleSelector : IInspectable
                {
                    HRESULT SelectStyle([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Style** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [uuid(08ADD66D-0E2E-43A0-AECA-8FAA94B9D017)]
                [version(0x06020000)]
                interface IStyleSelectorOverrides : IInspectable
                {
                    HRESULT SelectStyleCore([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Style** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [uuid(9E942AE7-3761-447F-8F97-29E39D5EB310)]
                [version(0x06020000)]
                interface IStyleSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.StyleSelector** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(AE2D9271-3B4A-45FC-8468-F7949548F4D5)]
                [version(0x06020000)]
                interface ITextBlock : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT TextTrimming([out] [retval] Windows.UI.Xaml.TextTrimming* value);
                    [propput] HRESULT TextTrimming([in] Windows.UI.Xaml.TextTrimming value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT Inlines([out] [retval] Windows.UI.Xaml.Documents.InlineCollection** value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT IsTextSelectionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSelectionEnabled([in] boolean value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                    HRESULT Select([in] Windows.UI.Xaml.Documents.TextPointer* start, [in] Windows.UI.Xaml.Documents.TextPointer* end);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(193EC042-A847-4552-B4E8-DB36655B840A)]
                [version(0x06020000)]
                interface ITextBlockStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextTrimmingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSelectionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(45206A4C-0A4E-4FBF-AEE9-335D5A205F6E)]
                [version(0x06030000)]
                interface ITextBlock2 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT MaxLines([out] [retval] INT32* value);
                    [propput] HRESULT MaxLines([in] INT32 value);
                    [propget] HRESULT TextLineBounds([out] [retval] Windows.UI.Xaml.TextLineBounds* value);
                    [propput] HRESULT TextLineBounds([in] Windows.UI.Xaml.TextLineBounds value);
                    [propget] HRESULT OpticalMarginAlignment([out] [retval] Windows.UI.Xaml.OpticalMarginAlignment* value);
                    [propput] HRESULT OpticalMarginAlignment([in] Windows.UI.Xaml.OpticalMarginAlignment value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                [uuid(88100B1B-FF24-4B93-A0E6-F029C94871F1)]
                [version(0x06030000)]
                interface ITextBlockStatics2 : IInspectable
                {
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLinesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextLineBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpticalMarginAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(E48F5A8B-1DFF-4352-A1F4-E516514EC882)]
                [version(0x06020000)]
                interface ITextBox : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propput] HRESULT SelectedText([in] HSTRING value);
                    [propget] HRESULT SelectionLength([out] [retval] INT32* value);
                    [propput] HRESULT SelectionLength([in] INT32 value);
                    [propget] HRESULT SelectionStart([out] [retval] INT32* value);
                    [propput] HRESULT SelectionStart([in] INT32 value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT AcceptsReturn([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsReturn([in] boolean value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT IsSpellCheckEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSpellCheckEnabled([in] boolean value);
                    [propget] HRESULT IsTextPredictionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextPredictionEnabled([in] boolean value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [eventadd] HRESULT TextChanged([in] Windows.UI.Xaml.Controls.TextChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT Select([in] INT32 start, [in] INT32 length);
                    HRESULT SelectAll();
                    HRESULT GetRectFromCharacterIndex([in] INT32 charIndex, [in] boolean trailingEdge, [out] [retval] Windows.Foundation.Rect* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(7E37F4FB-A4BC-4625-8838-8EB2A9091283)]
                [version(0x06020000)]
                interface ITextBoxStatics : IInspectable
                {
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsReturnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSpellCheckEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextPredictionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(710E4278-8529-47D3-8D8E-307E34CFF081)]
                [version(0x06020000)]
                interface ITextBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.TextBox** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(F7168C00-1432-462A-9405-38F385BFC37C)]
                [version(0x06030000)]
                interface ITextBox2 : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [eventadd] HRESULT Paste([in] Windows.UI.Xaml.Controls.TextControlPasteEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Paste([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [uuid(7592F37D-4E76-4EE4-8E0F-7D6E1A23326B)]
                [version(0x06030000)]
                interface ITextBoxStatics2 : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextChangedEventArgs)]
                [uuid(4DD04F7D-7A11-4B2E-9933-577DF39252B6)]
                [version(0x06020000)]
                interface ITextChangedEventArgs : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TextControlPasteEventArgs)]
                [uuid(4BD1D625-221A-477E-BB2C-AD0C1ED125E7)]
                [version(0x06030000)]
                interface ITextControlPasteEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [uuid(331D8F00-C5F9-46A5-B6C8-EDE539304567)]
                [version(0x06020000)]
                interface IToggleSwitch : IInspectable
                {
                    [propget] HRESULT IsOn([out] [retval] boolean* value);
                    [propput] HRESULT IsOn([in] boolean value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT OnContent([out] [retval] IInspectable** value);
                    [propput] HRESULT OnContent([in] IInspectable* value);
                    [propget] HRESULT OnContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT OnContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT OffContent([out] [retval] IInspectable** value);
                    [propput] HRESULT OffContent([in] IInspectable* value);
                    [propget] HRESULT OffContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT OffContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings** value);
                    [eventadd] HRESULT Toggled([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Toggled([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [uuid(BFD07F53-F8CA-4E47-949E-9E80429B3D16)]
                [version(0x06020000)]
                interface IToggleSwitchOverrides : IInspectable
                {
                    HRESULT OnToggled();
                    HRESULT OnOnContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnOffContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnHeaderChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [uuid(1D37147F-97DF-4226-92CA-DDF453D7FD5A)]
                [version(0x06020000)]
                interface IToggleSwitchStatics : IInspectable
                {
                    [propget] HRESULT IsOnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OnContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OnContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(7DE5D75F-4415-429F-B523-699BDB8C30DB)]
                [version(0x06020000)]
                interface IToolTip : IInspectable
                {
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalOffset([in] DOUBLE value);
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT Placement([out] [retval] Windows.UI.Xaml.Controls.Primitives.PlacementMode* value);
                    [propput] HRESULT Placement([in] Windows.UI.Xaml.Controls.Primitives.PlacementMode value);
                    [propget] HRESULT PlacementTarget([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PlacementTarget([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalOffset([in] DOUBLE value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings** value);
                    [eventadd] HRESULT Closed([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                    [eventadd] HRESULT Opened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(F00285B8-4BA9-4F4F-86A7-86003813CEB3)]
                [version(0x06020000)]
                interface IToolTipStatics : IInspectable
                {
                    [propget] HRESULT HorizontalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [uuid(89839403-B538-49E3-A430-3AC037DC6FE0)]
                [version(0x06020000)]
                interface IToolTipFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ToolTip** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToolTipService)]
                [uuid(03A55F87-BFCC-4A1E-8FEA-98F610832CEA)]
                [version(0x06020000)]
                interface IToolTipService : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToolTipService)]
                [uuid(86E649F8-E245-48AA-A8C8-D1073ED76319)]
                [version(0x06020000)]
                interface IToolTipServiceStatics : IInspectable
                {
                    [propget] HRESULT PlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPlacement([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.Primitives.PlacementMode* value);
                    HRESULT SetPlacement([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.Primitives.PlacementMode value);
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPlacementTarget([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.UIElement** value);
                    HRESULT SetPlacementTarget([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ToolTipProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetToolTip([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] IInspectable** value);
                    HRESULT SetToolTip([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.UIElementCollection)]
                [uuid(D6602D54-88F6-43F6-85D8-A9D914A6DD3B)]
                [version(0x06030000)]
                interface IUIElementCollection : IInspectable
                {
                    HRESULT Move([in] UINT32 oldIndex, [in] UINT32 newIndex);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [uuid(A7A69EC9-EA35-4679-BF29-F4F09286D314)]
                [version(0x06020000)]
                interface IUserControl : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [uuid(E8887976-2C5C-41CF-BE6A-9E44BEFDF655)]
                [version(0x06020000)]
                interface IUserControlStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [uuid(38B1ED92-A28A-4972-93DF-F4F759B8AFD2)]
                [version(0x06020000)]
                interface IUserControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.UserControl** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)]
                [uuid(9CA507C7-23C9-4F01-B80F-BE5C21EEF474)]
                [version(0x06020000)]
                interface IVariableSizedWrapGrid : IInspectable
                {
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT HorizontalChildrenAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalChildrenAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalChildrenAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalChildrenAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)]
                [uuid(FE9DB859-8127-4AEF-B7A2-949847486E96)]
                [version(0x06020000)]
                interface IVariableSizedWrapGridStatics : IInspectable
                {
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRowSpan([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* value);
                    HRESULT SetRowSpan([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumnSpan([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* value);
                    HRESULT SetColumnSpan([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Viewbox)]
                [uuid(05252C58-BA9D-4809-9EC3-FA0D16710BA1)]
                [version(0x06020000)]
                interface IViewbox : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT StretchDirection([out] [retval] Windows.UI.Xaml.Controls.StretchDirection* value);
                    [propput] HRESULT StretchDirection([in] Windows.UI.Xaml.Controls.StretchDirection value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Viewbox)]
                [uuid(5CD1E72D-E8D3-4865-8F08-B6B2D689ADF1)]
                [version(0x06020000)]
                interface IViewboxStatics : IInspectable
                {
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(38AAD50C-12CF-4D1E-A884-C9DF85F07CD9)]
                [version(0x06020000)]
                interface IVirtualizingPanel : IInspectable
                {
                    [propget] HRESULT ItemContainerGenerator([out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(5EF6BD7D-677F-408D-A96C-B19507750466)]
                [version(0x06020000)]
                interface IVirtualizingPanelOverrides : IInspectable
                {
                    HRESULT OnItemsChanged([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs* args);
                    HRESULT OnClearChildren();
                    HRESULT BringIndexIntoView([in] INT32 index);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(C9C9AB42-C232-479D-A7C9-5E7611196A45)]
                [version(0x06020000)]
                interface IVirtualizingPanelProtected : IInspectable
                {
                    HRESULT AddInternalChild([in] Windows.UI.Xaml.UIElement* child);
                    HRESULT InsertInternalChild([in] INT32 index, [in] Windows.UI.Xaml.UIElement* child);
                    HRESULT RemoveInternalChildRange([in] INT32 index, [in] INT32 range);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [uuid(BE19F839-CBD0-43E9-A5D0-0BDBA0FFBD38)]
                [version(0x06020000)]
                interface IVirtualizingPanelFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [uuid(7567CD9A-A3B4-4DEA-BB11-549E2C2F919D)]
                [version(0x06020000)]
                interface IVirtualizingStackPanel : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegular([out] [retval] boolean* value);
                    [propput] HRESULT AreScrollSnapPointsRegular([in] boolean value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [eventadd] HRESULT CleanUpVirtualizedItemEvent([in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CleanUpVirtualizedItemEvent([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [uuid(CBE6F72C-2892-46D1-987F-58CA1081F040)]
                [version(0x06020000)]
                interface IVirtualizingStackPanelOverrides : IInspectable
                {
                    HRESULT OnCleanUpVirtualizedItem([in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs* e);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [uuid(8314E778-91D3-4D56-AC09-223ADCD2BD3F)]
                [version(0x06020000)]
                interface IVirtualizingStackPanelStatics : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegularProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VirtualizationModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVirtualizationMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.VirtualizationMode* value);
                    HRESULT SetVirtualizationMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.VirtualizationMode value);
                    [propget] HRESULT IsVirtualizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVirtualizing([in] Windows.UI.Xaml.DependencyObject* o, [out] [retval] boolean* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(7B0FC253-86A5-4B43-9872-0B8A6234B74B)]
                [version(0x06020000)]
                interface IAppBar : IInspectable
                {
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT IsSticky([out] [retval] boolean* value);
                    [propput] HRESULT IsSticky([in] boolean value);
                    [eventadd] HRESULT Opened([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(F003E4E2-7B0F-4F4A-970D-AE8A0EAA9B70)]
                [version(0x06020000)]
                interface IAppBarOverrides : IInspectable
                {
                    HRESULT OnClosed([in] IInspectable* e);
                    HRESULT OnOpened([in] IInspectable* e);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(79BB7E8D-DCA9-4B5F-A448-37B13238ED76)]
                [version(0x06020000)]
                interface IAppBarStatics : IInspectable
                {
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStickyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [uuid(614708D1-8E65-43CB-92D7-8EEE17515F8D)]
                [version(0x06020000)]
                interface IAppBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.AppBar** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(4459A451-69E8-440C-9896-4BB4F5F642D1)]
                [version(0x06030000)]
                interface IAppBarButton : IInspectable
                {
                    [propget] HRESULT Label([out] [retval] HSTRING* value);
                    [propput] HRESULT Label([in] HSTRING value);
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(7CCD13E6-5301-407F-874E-DC9160AA07AF)]
                [version(0x06030000)]
                interface IAppBarButtonStatics : IInspectable
                {
                    [propget] HRESULT LabelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarButton)]
                [uuid(BDBB1BB6-CB2E-4276-ABD6-7935130510E0)]
                [version(0x06030000)]
                interface IAppBarButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.AppBarButton** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(1B0795A1-1BC1-4D53-95EA-FB0A2CCCC905)]
                [version(0x06030000)]
                interface IAppBarSeparator : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(37F23484-5B35-4663-A75D-F2D50CB9C619)]
                [version(0x06030000)]
                interface IAppBarSeparatorStatics : IInspectable
                {
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarSeparator)]
                [uuid(05DA25CD-F407-48DE-8B50-FF87D1E2818F)]
                [version(0x06030000)]
                interface IAppBarSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.AppBarSeparator** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(2E914438-FD53-4B8D-858B-3644269F8E4D)]
                [version(0x06030000)]
                interface IAppBarToggleButton : IInspectable
                {
                    [propget] HRESULT Label([out] [retval] HSTRING* value);
                    [propput] HRESULT Label([in] HSTRING value);
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(FE5AAF96-7929-4DA1-AA67-CDDF73A3E4B5)]
                [version(0x06030000)]
                interface IAppBarToggleButtonStatics : IInspectable
                {
                    [propget] HRESULT LabelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsCompactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.AppBarToggleButton)]
                [uuid(028AA7D4-8F54-45A6-9F90-13605656D793)]
                [version(0x06030000)]
                interface IAppBarToggleButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.AppBarToggleButton** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(E8FE17CB-35F7-40F3-A185-48B397B73E68)]
                [version(0x06030000)]
                interface IBitmapIcon : IInspectable
                {
                    [propget] HRESULT UriSource([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT UriSource([in] Windows.Foundation.Uri* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(E072D117-E4E7-4E0C-9470-53FF1CE84F67)]
                [version(0x06030000)]
                interface IBitmapIconStatics : IInspectable
                {
                    [propget] HRESULT UriSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.BitmapIcon)]
                [uuid(46D64B1D-7A49-4F66-9729-2848C788E402)]
                [version(0x06030000)]
                interface IBitmapIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.BitmapIcon** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(98BC4280-4A3D-4CEE-BD07-22CE94C5AF76)]
                [version(0x06030000)]
                interface ICommandBar : IInspectable
                {
                    [propget] HRESULT PrimaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                    [propget] HRESULT SecondaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                }

                [uuid(67918E1B-F2D5-44D1-8B84-92B87F80A350)]
                [version(0x06030000)]
                interface ICommandBarElement : IInspectable
                {
                    [propget] HRESULT IsCompact([out] [retval] boolean* value);
                    [propput] HRESULT IsCompact([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(5BD981EA-E278-409C-B522-F946CA253B44)]
                [version(0x06030000)]
                interface ICommandBarStatics : IInspectable
                {
                    [propget] HRESULT PrimaryCommandsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SecondaryCommandsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.CommandBar)]
                [uuid(67BDEB44-20E1-4177-AD44-F617B374E8E8)]
                [version(0x06030000)]
                interface ICommandBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.CommandBar** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Flyout)]
                [uuid(6584EBDF-CBC7-4E19-843A-A14F24A793EA)]
                [version(0x06030000)]
                interface IFlyout : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT FlyoutPresenterStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT FlyoutPresenterStyle([in] Windows.UI.Xaml.Style* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Flyout)]
                [uuid(61364E0B-DB75-47E1-B2C3-5B901C3D74B6)]
                [version(0x06030000)]
                interface IFlyoutStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FlyoutPresenterStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Flyout)]
                [uuid(4BED4933-008E-4B03-A385-79FE5266DDBA)]
                [version(0x06030000)]
                interface IFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Flyout** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlyoutPresenter)]
                [uuid(827D5B79-E37B-46A5-8D44-63A11A580E83)]
                [version(0x06030000)]
                interface IFlyoutPresenter : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FlyoutPresenter)]
                [uuid(EE4D668F-DA76-469A-ACD7-3060E613ADE7)]
                [version(0x06030000)]
                interface IFlyoutPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.FlyoutPresenter** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(D4D61391-39AC-4950-9166-3606C264418B)]
                [version(0x06030000)]
                interface IFontIcon : IInspectable
                {
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(B3BE7BF6-1467-4086-BBCB-4E21D97A7B4D)]
                [version(0x06030000)]
                interface IFontIconStatics : IInspectable
                {
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.FontIcon)]
                [uuid(1C781B6B-37BF-4DDC-A1A8-1B77DB3CF0EA)]
                [version(0x06030000)]
                interface IFontIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.FontIcon** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(68EA500B-3FE9-4735-B6A0-E7601933B089)]
                [version(0x06020000)]
                interface IFrame : IInspectable
                {
                    [propget] HRESULT CacheSize([out] [retval] INT32* value);
                    [propput] HRESULT CacheSize([in] INT32 value);
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propget] HRESULT CurrentSourcePageType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propget] HRESULT SourcePageType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propput] HRESULT SourcePageType([in] Windows.UI.Xaml.Interop.TypeName value);
                    [propget] HRESULT BackStackDepth([out] [retval] INT32* value);
                    [eventadd] HRESULT Navigated([in] Windows.UI.Xaml.Navigation.NavigatedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Navigated([in] EventRegistrationToken token);
                    [eventadd] HRESULT Navigating([in] Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Navigating([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationFailed([in] Windows.UI.Xaml.Navigation.NavigationFailedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationStopped([in] Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStopped([in] EventRegistrationToken token);
                    HRESULT GoBack();
                    HRESULT GoForward();
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [in] IInspectable* parameter, [out] [retval] boolean* returnValue);
                    HRESULT GetNavigationState([out] [retval] HSTRING* returnValue);
                    HRESULT SetNavigationState([in] HSTRING navigationState);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(D5ACF0E9-D967-471B-8459-C8AF4341511B)]
                [version(0x06020000)]
                interface IFrameStatics : IInspectable
                {
                    [propget] HRESULT CacheSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoBackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoForwardProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CurrentSourcePageTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourcePageTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackStackDepthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(02EE93D4-448E-469E-9799-0A8A1F70F171)]
                [version(0x06020000)]
                interface IFrameFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Frame** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(3F367F87-9F5A-4B04-B818-B554C069597A)]
                [version(0x06030000)]
                interface IFrame2 : IInspectable
                {
                    [propget] HRESULT BackStack([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Navigation.PageStackEntry*>** value);
                    [propget] HRESULT ForwardStack([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Navigation.PageStackEntry*>** value);
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [in] IInspectable* parameter, [in] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo* infoOverride, [out] [retval] boolean* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [uuid(E4B5CDFE-42F0-4462-A1C1-5D259DD82A03)]
                [version(0x06030000)]
                interface IFrameStatics2 : IInspectable
                {
                    [propget] HRESULT BackStackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForwardStackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GridViewHeaderItem)]
                [uuid(72D75D7E-5DC3-4FFC-9B1C-939B5C37161C)]
                [version(0x06030000)]
                interface IGridViewHeaderItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.GridViewHeaderItem)]
                [uuid(36E0C96E-B56A-4B3B-8BAC-7AEF5E6F9945)]
                [version(0x06030000)]
                interface IGridViewHeaderItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GridViewHeaderItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Hub)]
                [uuid(AE692E82-7314-4F51-AB11-2AF1ED4A19F8)]
                [version(0x06030000)]
                interface IHub : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT DefaultSectionIndex([out] [retval] INT32* value);
                    [propput] HRESULT DefaultSectionIndex([in] INT32 value);
                    [propget] HRESULT Sections([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                    [propget] HRESULT SectionsInView([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                    [propget] HRESULT SectionHeaders([out] [retval] Windows.Foundation.Collections.IObservableVector<IInspectable*>** value);
                    [eventadd] HRESULT SectionHeaderClick([in] Windows.UI.Xaml.Controls.HubSectionHeaderClickEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SectionHeaderClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT SectionsInViewChanged([in] Windows.UI.Xaml.Controls.SectionsInViewChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SectionsInViewChanged([in] EventRegistrationToken token);
                    HRESULT ScrollToSection([in] Windows.UI.Xaml.Controls.HubSection* section);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Hub)]
                [uuid(0E6FA034-AD3C-4F32-B701-E24FAB562028)]
                [version(0x06030000)]
                interface IHubStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultSectionIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SemanticZoomOwnerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsActiveViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Hub)]
                [uuid(DCA6B2BA-C6F5-4961-9953-C51873DB5424)]
                [version(0x06030000)]
                interface IHubFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Hub** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HubSection)]
                [uuid(A4E66CB7-7FDD-4FE0-AB49-C246639DCCF9)]
                [version(0x06030000)]
                interface IHubSection : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT IsHeaderInteractive([out] [retval] boolean* value);
                    [propput] HRESULT IsHeaderInteractive([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HubSection)]
                [uuid(12D2D85A-EA27-42D1-998B-61E52AED842B)]
                [version(0x06030000)]
                interface IHubSectionStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHeaderInteractiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HubSection)]
                [uuid(FFF55FA2-ECE4-4BBA-AA3B-9804AEF47883)]
                [version(0x06030000)]
                interface IHubSectionFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.HubSection** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs)]
                [uuid(E1C5EF04-1EDD-4112-AEEB-996C96400698)]
                [version(0x06030000)]
                interface IHubSectionHeaderClickEventArgs : IInspectable
                {
                    [propget] HRESULT Section([out] [retval] Windows.UI.Xaml.Controls.HubSection** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.IconElement)]
                [uuid(9AF0803B-D04C-467A-BBD5-9B81F02D9A56)]
                [version(0x06030000)]
                interface IIconElement : IInspectable
                {
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.IconElement)]
                [uuid(BE19A623-77CF-472F-82EA-047801D12012)]
                [version(0x06030000)]
                interface IIconElementStatics : IInspectable
                {
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.IconElement)]
                [uuid(CF37A562-0424-43C7-8BEA-720FBA973EF1)]
                [version(0x06030000)]
                interface IIconElementFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsStackPanel)]
                [uuid(DF7AB79D-7AD5-4B58-9363-919AF90226E6)]
                [version(0x06030000)]
                interface IItemsStackPanel : IInspectable
                {
                    [propget] HRESULT GroupPadding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT GroupPadding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT FirstCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT FirstVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT ScrollingDirection([out] [retval] Windows.UI.Xaml.Controls.PanelScrollingDirection* value);
                    [propget] HRESULT GroupHeaderPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement* value);
                    [propput] HRESULT GroupHeaderPlacement([in] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement value);
                    [propget] HRESULT ItemsUpdatingScrollMode([out] [retval] Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode* value);
                    [propput] HRESULT ItemsUpdatingScrollMode([in] Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode value);
                    [propget] HRESULT CacheLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CacheLength([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsStackPanel)]
                [uuid(CA25D63F-044F-4B6B-B315-0B60E0B4F87D)]
                [version(0x06030000)]
                interface IItemsStackPanelStatics : IInspectable
                {
                    [propget] HRESULT GroupPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupHeaderPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CacheLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsWrapGrid)]
                [uuid(DDFE6B5F-BA88-4A7D-8A5B-E58CAF0F4E2D)]
                [version(0x06030000)]
                interface IItemsWrapGrid : IInspectable
                {
                    [propget] HRESULT GroupPadding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT GroupPadding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT FirstCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT FirstVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastVisibleIndex([out] [retval] INT32* value);
                    [propget] HRESULT LastCacheIndex([out] [retval] INT32* value);
                    [propget] HRESULT ScrollingDirection([out] [retval] Windows.UI.Xaml.Controls.PanelScrollingDirection* value);
                    [propget] HRESULT GroupHeaderPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement* value);
                    [propput] HRESULT GroupHeaderPlacement([in] Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement value);
                    [propget] HRESULT CacheLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CacheLength([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ItemsWrapGrid)]
                [uuid(4EC5427D-24A0-449A-B763-3077BA0F2DD5)]
                [version(0x06030000)]
                interface IItemsWrapGridStatics : IInspectable
                {
                    [propget] HRESULT GroupPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupHeaderPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CacheLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBaseHeaderItem)]
                [uuid(6D0DED27-0D19-4091-8917-CE7C85C1E630)]
                [version(0x06030000)]
                interface IListViewBaseHeaderItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBaseHeaderItem)]
                [uuid(3872A6A1-EA19-455F-9DF7-147CC41D329C)]
                [version(0x06030000)]
                interface IListViewBaseHeaderItemFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewHeaderItem)]
                [uuid(1B61BAEB-E196-4B3B-A5F9-1ED636F3F79B)]
                [version(0x06030000)]
                interface IListViewHeaderItem : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ListViewHeaderItem)]
                [uuid(68D2C96A-96B0-4F08-A7A5-F1086720A0FA)]
                [version(0x06030000)]
                interface IListViewHeaderItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListViewHeaderItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(AD3210F1-985B-4171-BBBA-67BCC729649B)]
                [version(0x06030000)]
                interface IMenuFlyout : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>** value);
                    [propget] HRESULT MenuFlyoutPresenterStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT MenuFlyoutPresenterStyle([in] Windows.UI.Xaml.Style* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(3DBEFBA1-9522-4045-9E58-C99B13AAB9B9)]
                [version(0x06030000)]
                interface IMenuFlyoutStatics : IInspectable
                {
                    [propget] HRESULT MenuFlyoutPresenterStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyout)]
                [uuid(644533AB-BBB9-499B-9FF3-30D40E2C56D8)]
                [version(0x06030000)]
                interface IMenuFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyout** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(160775CF-B598-44AF-A488-C3CE2AF6D3F0)]
                [version(0x06030000)]
                interface IMenuFlyoutItem : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [eventadd] HRESULT Click([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(4950B424-A43A-41F7-AA3A-9CE9619747D5)]
                [version(0x06030000)]
                interface IMenuFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItem)]
                [uuid(C5AA39E2-44F3-455E-9C5B-62BB6AFCE3AD)]
                [version(0x06030000)]
                interface IMenuFlyoutItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyoutItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItemBase)]
                [uuid(F9B56047-8DA6-4730-9208-144125C6B396)]
                [version(0x06030000)]
                interface IMenuFlyoutItemBase : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutItemBase)]
                [uuid(83E6DBAD-FC67-41D5-8797-60ACD1CEB1D9)]
                [version(0x06030000)]
                interface IMenuFlyoutItemBaseFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(906E0304-254E-413F-B219-C7B97F003752)]
                [version(0x06030000)]
                interface IMenuFlyoutPresenter : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)]
                [uuid(B88B5091-101C-41F8-AAC1-1B105C14FB99)]
                [version(0x06030000)]
                interface IMenuFlyoutPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyoutPresenter** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSeparator)]
                [uuid(71FA2B7D-0B51-4950-A1A4-BBC42EAC4C12)]
                [version(0x06030000)]
                interface IMenuFlyoutSeparator : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.MenuFlyoutSeparator)]
                [uuid(C159DCC8-B437-44E0-B24B-5720AEA1DBAC)]
                [version(0x06030000)]
                interface IMenuFlyoutSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.MenuFlyoutSeparator** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(C4B27075-E641-453E-824D-012FC7CF95CF)]
                [version(0x06020000)]
                interface IPage : IInspectable
                {
                    [propget] HRESULT Frame([out] [retval] Windows.UI.Xaml.Controls.Frame** value);
                    [propget] HRESULT NavigationCacheMode([out] [retval] Windows.UI.Xaml.Navigation.NavigationCacheMode* value);
                    [propput] HRESULT NavigationCacheMode([in] Windows.UI.Xaml.Navigation.NavigationCacheMode value);
                    [propget] HRESULT TopAppBar([out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                    [propput] HRESULT TopAppBar([in] Windows.UI.Xaml.Controls.AppBar* value);
                    [propget] HRESULT BottomAppBar([out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                    [propput] HRESULT BottomAppBar([in] Windows.UI.Xaml.Controls.AppBar* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(230B9CB8-3419-4306-AABE-4A8E680D3627)]
                [version(0x06020000)]
                interface IPageOverrides : IInspectable
                {
                    HRESULT OnNavigatedFrom([in] Windows.UI.Xaml.Navigation.NavigationEventArgs* e);
                    HRESULT OnNavigatedTo([in] Windows.UI.Xaml.Navigation.NavigationEventArgs* e);
                    HRESULT OnNavigatingFrom([in] Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs* e);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(376DDE71-F725-46DD-8D80-EEEAF7DA74E5)]
                [version(0x06020000)]
                interface IPageStatics : IInspectable
                {
                    [propget] HRESULT FrameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopAppBarProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BottomAppBarProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [uuid(DFA149AC-1849-445E-937C-40A9590CC076)]
                [version(0x06020000)]
                interface IPageFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Page** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PathIcon)]
                [uuid(214C62DB-C366-4A0E-B9AD-DCF168D7EC0C)]
                [version(0x06030000)]
                interface IPathIcon : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] Windows.UI.Xaml.Media.Geometry** value);
                    [propput] HRESULT Data([in] Windows.UI.Xaml.Media.Geometry* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PathIcon)]
                [uuid(77B75DB8-FB15-491A-B6E3-7DBBA911BAFE)]
                [version(0x06030000)]
                interface IPathIconStatics : IInspectable
                {
                    [propget] HRESULT DataProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.PathIcon)]
                [uuid(AF9D9652-9C5D-4A37-9E1A-044ABEEF792B)]
                [version(0x06030000)]
                interface IPathIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.PathIcon** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBox)]
                [uuid(F89ECC5A-99BA-4BD4-966C-F11FA443D13C)]
                [version(0x06030000)]
                interface ISearchBox : IInspectable
                {
                    [propget] HRESULT SearchHistoryEnabled([out] [retval] boolean* value);
                    [propput] HRESULT SearchHistoryEnabled([in] boolean value);
                    [propget] HRESULT SearchHistoryContext([out] [retval] HSTRING* value);
                    [propput] HRESULT SearchHistoryContext([in] HSTRING value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propput] HRESULT QueryText([in] HSTRING value);
                    [propget] HRESULT FocusOnKeyboardInput([out] [retval] boolean* value);
                    [propput] HRESULT FocusOnKeyboardInput([in] boolean value);
                    [propget] HRESULT ChooseSuggestionOnEnter([out] [retval] boolean* value);
                    [propput] HRESULT ChooseSuggestionOnEnter([in] boolean value);
                    [eventadd] HRESULT QueryChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT QueryChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SuggestionsRequested([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SuggestionsRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT QuerySubmitted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT QuerySubmitted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ResultSuggestionChosen([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ResultSuggestionChosen([in] EventRegistrationToken token);
                    [eventadd] HRESULT PrepareForFocusOnKeyboardInput([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SearchBox*, Windows.UI.Xaml.RoutedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PrepareForFocusOnKeyboardInput([in] EventRegistrationToken token);
                    HRESULT SetLocalContentSuggestionSettings([in] Windows.ApplicationModel.Search.LocalContentSuggestionSettings* settings);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBox)]
                [uuid(B123634F-6871-48CD-92DF-4CFF22459082)]
                [version(0x06030000)]
                interface ISearchBoxStatics : IInspectable
                {
                    [propget] HRESULT SearchHistoryEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SearchHistoryContextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT QueryTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusOnKeyboardInputProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChooseSuggestionOnEnterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBox)]
                [uuid(CD743F6D-8685-46B4-9DDD-202F6941B701)]
                [version(0x06030000)]
                interface ISearchBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SearchBox** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs)]
                [uuid(A9A70F8F-0CB0-4BD2-9998-2FB57AD5E731)]
                [version(0x06030000)]
                interface ISearchBoxQueryChangedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propget] HRESULT LinguisticDetails([out] [retval] Windows.ApplicationModel.Search.SearchQueryLinguisticDetails** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs)]
                [uuid(126E90FD-3C4E-4CCB-9AEF-4705D19FE548)]
                [version(0x06030000)]
                interface ISearchBoxQuerySubmittedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propget] HRESULT LinguisticDetails([out] [retval] Windows.ApplicationModel.Search.SearchQueryLinguisticDetails** value);
                    [propget] HRESULT KeyModifiers([out] [retval] Windows.System.VirtualKeyModifiers* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs)]
                [uuid(18918C23-E4C3-4662-A03B-D054FFD0F905)]
                [version(0x06030000)]
                interface ISearchBoxResultSuggestionChosenEventArgs : IInspectable
                {
                    [propget] HRESULT Tag([out] [retval] HSTRING* value);
                    [propget] HRESULT KeyModifiers([out] [retval] Windows.System.VirtualKeyModifiers* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs)]
                [uuid(DA15170E-E566-48CB-BD11-FE4B0F30A44D)]
                [version(0x06030000)]
                interface ISearchBoxSuggestionsRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT QueryText([out] [retval] HSTRING* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propget] HRESULT LinguisticDetails([out] [retval] Windows.ApplicationModel.Search.SearchQueryLinguisticDetails** value);
                    [propget] HRESULT Request([out] [retval] Windows.ApplicationModel.Search.SearchSuggestionsRequest** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs)]
                [uuid(DD49EE6B-D165-430F-A37D-B807064F85E1)]
                [version(0x06030000)]
                interface ISectionsInViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedSections([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                    [propget] HRESULT RemovedSections([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs)]
                [uuid(557F5244-92F8-4150-B730-E6346E8F50D1)]
                [version(0x06030000)]
                interface ISectionsInViewChangedEventArgsFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                [uuid(1C59DB48-8233-4C0C-BCF5-02A5FB35AE00)]
                [version(0x06020000)]
                interface ISwapChainBackgroundPanel : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                [uuid(198289D4-C89B-49B2-896C-5917BF8ADCAE)]
                [version(0x06020000)]
                interface ISwapChainBackgroundPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SwapChainBackgroundPanel** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                [uuid(21E672F2-2592-4C38-870F-28FBCF52C095)]
                [version(0x06030000)]
                interface ISwapChainBackgroundPanel2 : IInspectable
                {
                    HRESULT CreateCoreIndependentInputSource([in] Windows.UI.Core.CoreInputDeviceTypes deviceTypes, [out] [retval] Windows.UI.Core.CoreIndependentInputSource** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainPanel)]
                [uuid(C589644F-EBA8-427A-B75A-9F1F93A11AE9)]
                [version(0x06030000)]
                interface ISwapChainPanel : IInspectable
                {
                    [propget] HRESULT CompositionScaleX([out] [retval] FLOAT* value);
                    [propget] HRESULT CompositionScaleY([out] [retval] FLOAT* value);
                    [eventadd] HRESULT CompositionScaleChanged([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SwapChainPanel*, IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CompositionScaleChanged([in] EventRegistrationToken token);
                    HRESULT CreateCoreIndependentInputSource([in] Windows.UI.Core.CoreInputDeviceTypes deviceTypes, [out] [retval] Windows.UI.Core.CoreIndependentInputSource** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainPanel)]
                [uuid(F89C0297-EEA8-498C-99C4-257E3660DF7E)]
                [version(0x06030000)]
                interface ISwapChainPanelStatics : IInspectable
                {
                    [propget] HRESULT CompositionScaleXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompositionScaleYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainPanel)]
                [uuid(F38F8D7F-1A48-49CB-86D2-10EAAAF6FD70)]
                [version(0x06030000)]
                interface ISwapChainPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SwapChainPanel** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIcon)]
                [uuid(7A4774C9-A6A3-4B30-8FF1-9081D70E9A5C)]
                [version(0x06030000)]
                interface ISymbolIcon : IInspectable
                {
                    [propget] HRESULT Symbol([out] [retval] Windows.UI.Xaml.Controls.Symbol* value);
                    [propput] HRESULT Symbol([in] Windows.UI.Xaml.Controls.Symbol value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIcon)]
                [uuid(8624FBDF-952C-4F76-B03F-30833BE99572)]
                [version(0x06030000)]
                interface ISymbolIconStatics : IInspectable
                {
                    [propget] HRESULT SymbolProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.SymbolIcon)]
                [uuid(C7252B88-E76C-4B44-8A05-046B9DC772B8)]
                [version(0x06030000)]
                interface ISymbolIconFactory : IInspectable
                {
                    HRESULT CreateInstanceWithSymbol([in] Windows.UI.Xaml.Controls.Symbol symbol, [out] [retval] Windows.UI.Xaml.Controls.SymbolIcon** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(E39099F2-3AFF-4792-909E-2D9941EC0357)]
                [version(0x06030000)]
                interface ITimePicker : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ClockIdentifier([out] [retval] HSTRING* value);
                    [propput] HRESULT ClockIdentifier([in] HSTRING value);
                    [propget] HRESULT MinuteIncrement([out] [retval] INT32* value);
                    [propput] HRESULT MinuteIncrement([in] INT32 value);
                    [propget] HRESULT Time([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Time([in] Windows.Foundation.TimeSpan value);
                    [eventadd] HRESULT TimeChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TimeChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(FA71DFB1-233E-4F31-B8BE-A6EA670C25CD)]
                [version(0x06030000)]
                interface ITimePickerStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ClockIdentifierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinuteIncrementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TimeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TimePicker)]
                [uuid(553FE413-6CD7-46A9-A97B-A18BDC4B4CA3)]
                [version(0x06030000)]
                interface ITimePickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.TimePicker** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs)]
                [uuid(2F4EDB8D-B995-4E31-8BA9-C4DCDEB21CA3)]
                [version(0x06030000)]
                interface ITimePickerValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldTime([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT NewTime([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)]
                [uuid(49841EDD-88E9-4663-A701-CD4FD25E398F)]
                [version(0x06030000)]
                interface IToggleMenuFlyoutItem : IInspectable
                {
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)]
                [uuid(16C724FB-6C1A-4852-9258-08C038367907)]
                [version(0x06030000)]
                interface IToggleMenuFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT IsCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)]
                [uuid(A151966F-3BF7-46B6-B61C-9B2C1BA68843)]
                [version(0x06030000)]
                interface IToggleMenuFlyoutItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(5862CC46-1F7D-479B-92A6-DE7858FE8D54)]
                [version(0x06020000)]
                interface IWebView : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [deprecated("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.", deprecate, 0x06030000)] [propget] HRESULT AllowedScriptNotifyUris([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>** value);
                    [deprecated("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.", deprecate, 0x06030000)] [propput] HRESULT AllowedScriptNotifyUris([in] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>* value);
                    [deprecated("DataTransferPackage may be altered or unavailable for releases after Windows 8.1. Instead, use CaptureSelectedContentToDataPackageAsync.", deprecate, 0x06030000)] [propget] HRESULT DataTransferPackage([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [deprecated("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, 0x06030000)] [eventadd] HRESULT LoadCompleted([in] Windows.UI.Xaml.Navigation.LoadCompletedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [deprecated("LoadCompleted may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, 0x06030000)] [eventremove] HRESULT LoadCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ScriptNotify([in] Windows.UI.Xaml.Controls.NotifyEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ScriptNotify([in] EventRegistrationToken token);
                    [deprecated("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, 0x06030000)] [eventadd] HRESULT NavigationFailed([in] Windows.UI.Xaml.Controls.WebViewNavigationFailedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [deprecated("NavigationFailed may be altered or unavailable for releases after Windows 8.1. Instead, use NavigationCompleted.", deprecate, 0x06030000)] [eventremove] HRESULT NavigationFailed([in] EventRegistrationToken token);
                    [deprecated("InvokeScript may be altered or unavailable for releases after Windows 8.1. Instead, use InvokeScriptAsync.", deprecate, 0x06030000)] HRESULT InvokeScript([in] HSTRING scriptName, [in] UINT32 __argumentsSize, [in] [size_is(__argumentsSize)] HSTRING* arguments, [out] [retval] HSTRING* returnValue);
                    HRESULT Navigate([in] Windows.Foundation.Uri* source);
                    HRESULT NavigateToString([in] HSTRING text);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(A0B561DE-5FDB-443B-B9F0-5C30F6B7A1F4)]
                [version(0x06020000)]
                interface IWebViewStatics : IInspectable
                {
                    [deprecated("AnyScriptNotifyUri is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AnyScriptNotifyUri documentation.", deprecate, 0x06030000)] [propget] HRESULT AnyScriptNotifyUri([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("AllowedScriptNotifyUris is unavailable for releases beginning with Windows 8.1. Instead, list URIs under ApplicationContentUriRules in the package manifest. For more info, see the AllowedScriptNotifyUris documentation.", deprecate, 0x06030000)] [propget] HRESULT AllowedScriptNotifyUrisProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [deprecated("DataTransferPackage may be altered or unavailable for releases after Windows 8.1. Instead, use CaptureSelectedContentToDataPackageAsync.", deprecate, 0x06030000)] [propget] HRESULT DataTransferPackageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(D481759E-3EFF-4462-823D-FD52F9BA4CC8)]
                [version(0x06030000)]
                interface IWebView2 : IInspectable
                {
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propget] HRESULT DocumentTitle([out] [retval] HSTRING* value);
                    [eventadd] HRESULT NavigationStarting([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContentLoading([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContentLoading([in] EventRegistrationToken token);
                    [eventadd] HRESULT DOMContentLoaded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DOMContentLoaded([in] EventRegistrationToken token);
                    HRESULT GoForward();
                    HRESULT GoBack();
                    HRESULT Refresh();
                    HRESULT Stop();
                    HRESULT CapturePreviewToStreamAsync([in] Windows.Storage.Streams.IRandomAccessStream* stream, [out] [retval] Windows.Foundation.IAsyncAction** returnValue);
                    HRESULT InvokeScriptAsync([in] HSTRING scriptName, [in] Windows.Foundation.Collections.IIterable<HSTRING>* arguments, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** returnValue);
                    HRESULT CaptureSelectedContentToDataPackageAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackage*>** returnValue);
                    HRESULT NavigateToLocalStreamUri([in] Windows.Foundation.Uri* source, [in] Windows.Web.IUriToStreamResolver* streamResolver);
                    HRESULT BuildLocalStreamUri([in] HSTRING contentIdentifier, [in] HSTRING relativePath, [out] [retval] Windows.Foundation.Uri** returnValue);
                    [propget] HRESULT DefaultBackgroundColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT DefaultBackgroundColor([in] Windows.UI.Color value);
                    [eventadd] HRESULT NavigationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameNavigationStarting([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameNavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameContentLoading([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameContentLoading([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameDOMContentLoaded([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameDOMContentLoaded([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameNavigationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameNavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT LongRunningScriptDetected([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT LongRunningScriptDetected([in] EventRegistrationToken token);
                    [eventadd] HRESULT UnsafeContentWarningDisplaying([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT UnsafeContentWarningDisplaying([in] EventRegistrationToken token);
                    [eventadd] HRESULT UnviewableContentIdentified([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.WebView*, Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT UnviewableContentIdentified([in] EventRegistrationToken token);
                    HRESULT NavigateWithHttpRequestMessage([in] Windows.Web.Http.HttpRequestMessage* requestMessage);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                [uuid(322F8780-E812-466B-9E50-8E9FEC24018A)]
                [version(0x06030000)]
                interface IWebViewStatics2 : IInspectable
                {
                    [propget] HRESULT CanGoBackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoForwardProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DocumentTitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultBackgroundColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewBrush)]
                [uuid(40E86F75-0CF4-4B72-A4D6-CF5D15780116)]
                [version(0x06020000)]
                interface IWebViewBrush : IInspectable
                {
                    [propget] HRESULT SourceName([out] [retval] HSTRING* value);
                    [propput] HRESULT SourceName([in] HSTRING value);
                    HRESULT Redraw();
                    HRESULT SetSource([in] Windows.UI.Xaml.Controls.WebView* source);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewBrush)]
                [uuid(D74DAA24-1D05-463E-B028-6BAA4420E762)]
                [version(0x06020000)]
                interface IWebViewBrushStatics : IInspectable
                {
                    [propget] HRESULT SourceNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs)]
                [uuid(6E2980BB-98B8-413E-8129-971C6F7E4C8A)]
                [version(0x06030000)]
                interface IWebViewContentLoadingEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs)]
                [uuid(C47EBA15-DC6B-4B36-9D80-82FB8817B988)]
                [version(0x06030000)]
                interface IWebViewDOMContentLoadedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs)]
                [uuid(F3F020AB-A46C-42B0-9EFE-69764D5CFFA6)]
                [version(0x06030000)]
                interface IWebViewLongRunningScriptDetectedEventArgs : IInspectable
                {
                    [propget] HRESULT ExecutionTime([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT StopPageScriptExecution([out] [retval] boolean* value);
                    [propput] HRESULT StopPageScriptExecution([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs)]
                [uuid(11E6F20B-EBA7-44C0-889B-EDEB6A064DDD)]
                [version(0x06030000)]
                interface IWebViewNavigationCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT IsSuccess([out] [retval] boolean* value);
                    [propget] HRESULT WebErrorStatus([out] [retval] Windows.Web.WebErrorStatus* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs)]
                [uuid(AF09609A-129C-4170-9E9C-E2CDF025DCA4)]
                [version(0x06020000)]
                interface IWebViewNavigationFailedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT WebErrorStatus([out] [retval] Windows.Web.WebErrorStatus* value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs)]
                [uuid(94CB8668-8367-43D5-91BB-96EBA37EC784)]
                [version(0x06030000)]
                interface IWebViewNavigationStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs)]
                [uuid(37BC16E1-6062-4678-B20B-6C36AC9C59AC)]
                [version(0x06030000)]
                interface IWebViewUnviewableContentIdentifiedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Referrer([out] [retval] Windows.Foundation.Uri** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WrapGrid)]
                [uuid(0552178B-7567-47C2-BD5C-AD8394C828BA)]
                [version(0x06020000)]
                interface IWrapGrid : IInspectable
                {
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT HorizontalChildrenAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalChildrenAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalChildrenAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalChildrenAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.WrapGrid)]
                [uuid(D04A6B97-13CB-479C-A285-E4E56846C4CB)]
                [version(0x06020000)]
                interface IWrapGridStatics : IInspectable
                {
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(A8912263-2951-4F58-A9C5-5A134EAA7F07)]
                [version(0x06020000)]
                interface IControl : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsTabStop([out] [retval] boolean* value);
                    [propput] HRESULT IsTabStop([in] boolean value);
                    [propget] HRESULT IsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsEnabled([in] boolean value);
                    [propget] HRESULT TabIndex([out] [retval] INT32* value);
                    [propput] HRESULT TabIndex([in] INT32 value);
                    [propget] HRESULT TabNavigation([out] [retval] Windows.UI.Xaml.Input.KeyboardNavigationMode* value);
                    [propput] HRESULT TabNavigation([in] Windows.UI.Xaml.Input.KeyboardNavigationMode value);
                    [propget] HRESULT Template([out] [retval] Windows.UI.Xaml.Controls.ControlTemplate** value);
                    [propput] HRESULT Template([in] Windows.UI.Xaml.Controls.ControlTemplate* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT HorizontalContentAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalContentAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalContentAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalContentAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT FocusState([out] [retval] Windows.UI.Xaml.FocusState* value);
                    [eventadd] HRESULT IsEnabledChanged([in] Windows.UI.Xaml.DependencyPropertyChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsEnabledChanged([in] EventRegistrationToken token);
                    HRESULT ApplyTemplate([out] [retval] boolean* returnValue);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(A09691DF-9824-41FE-B530-B0D8990E64C1)]
                [version(0x06020000)]
                interface IControlOverrides : IInspectable
                {
                    HRESULT OnPointerEntered([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerPressed([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerMoved([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerReleased([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerExited([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerCaptureLost([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerCanceled([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerWheelChanged([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnTapped([in] Windows.UI.Xaml.Input.TappedRoutedEventArgs* e);
                    HRESULT OnDoubleTapped([in] Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs* e);
                    HRESULT OnHolding([in] Windows.UI.Xaml.Input.HoldingRoutedEventArgs* e);
                    HRESULT OnRightTapped([in] Windows.UI.Xaml.Input.RightTappedRoutedEventArgs* e);
                    HRESULT OnManipulationStarting([in] Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs* e);
                    HRESULT OnManipulationInertiaStarting([in] Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs* e);
                    HRESULT OnManipulationStarted([in] Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs* e);
                    HRESULT OnManipulationDelta([in] Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs* e);
                    HRESULT OnManipulationCompleted([in] Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs* e);
                    HRESULT OnKeyUp([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnKeyDown([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnGotFocus([in] Windows.UI.Xaml.RoutedEventArgs* e);
                    HRESULT OnLostFocus([in] Windows.UI.Xaml.RoutedEventArgs* e);
                    HRESULT OnDragEnter([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDragLeave([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDragOver([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDrop([in] Windows.UI.Xaml.DragEventArgs* e);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(1791587A-2A7C-4981-A2D8-AB99FFFC65B9)]
                [version(0x06020000)]
                interface IControlProtected : IInspectable
                {
                    [propget] HRESULT DefaultStyleKey([out] [retval] IInspectable** value);
                    [propput] HRESULT DefaultStyleKey([in] IInspectable* value);
                    HRESULT GetTemplateChild([in] HSTRING childName, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(473B305B-877D-4C35-8FCA-46A05F96607A)]
                [version(0x06020000)]
                interface IControlStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTabStopProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabNavigationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultStyleKeyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusStateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [uuid(B12B1D5A-6419-4E16-B212-A45336B75778)]
                [version(0x06020000)]
                interface IControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Control** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Controls.ControlTemplate)]
                [uuid(EFD2418E-41E0-48BB-8B82-91EDA1BA3FE2)]
                [version(0x06020000)]
                interface IControlTemplate : IInspectable
                {
                    [propget] HRESULT TargetType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propput] HRESULT TargetType([in] Windows.UI.Xaml.Interop.TypeName value);
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass BackClickEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IBackClickEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass DragItemsStartingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass NotifyEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INotifyEventArgs;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.INotifyEventArgs2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SemanticZoomViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass TextControlPasteEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextControlPasteEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ColumnDefinitionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ColumnDefinition*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ColumnDefinition*>;
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ContainerContentChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass DataTemplateSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IDataTemplateSelector;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IDataTemplateSelector2;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides;
                    [overridable] [version(0x06030000)] interface Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass DatePickerValueChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RowDefinitionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.RowDefinition*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.RowDefinition*>;
                }

                [composable(Windows.UI.Xaml.Controls.IStyleSelectorFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass StyleSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IStyleSelector;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IStyleSelectorOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IGroupStyleFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GroupStyle
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupStyle;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IGroupStyle2;
                    [version(0x06020000)] interface Windows.UI.Xaml.Data.INotifyPropertyChanged;
                }

                [composable(Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GroupStyleSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupStyleSelector;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SemanticZoomLocation
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoomLocation;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemCollection
                {
                    [default] interface Windows.Foundation.Collections.IObservableVector<IInspectable*>;
                    interface Windows.Foundation.Collections.IVector<IInspectable*>;
                    interface Windows.Foundation.Collections.IIterable<IInspectable*>;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemContainerGenerator
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemContainerGenerator;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass UIElementCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IUIElementCollection;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ScrollViewerViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ScrollViewerViewChangingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ScrollViewerView
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerView;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToolTipServiceStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ToolTipService
                {
                    [default] interface Windows.UI.Xaml.Controls.IToolTipService;
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass HubSectionHeaderClickEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SectionsInViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass WebViewNavigationFailedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationFailedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass HubSectionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.HubSection*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.HubSection*>;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SearchBoxQueryChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxQueryChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SearchBoxSuggestionsRequestedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxSuggestionsRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SearchBoxQuerySubmittedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxQuerySubmittedEventArgs;
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SearchBoxResultSuggestionChosenEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBoxResultSuggestionChosenEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass TimePickerValueChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass WebViewNavigationStartingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass WebViewContentLoadingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass WebViewDOMContentLoadedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass WebViewNavigationCompletedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass WebViewLongRunningScriptDetectedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass WebViewUnviewableContentIdentifiedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IColumnDefinitionStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ColumnDefinition : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IColumnDefinition;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRowDefinitionStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RowDefinition : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IRowDefinition;
                }

                [composable(Windows.UI.Xaml.Controls.IFlyoutFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFlyoutStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass Flyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass MenuFlyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyout;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass CleanUpVirtualizedItemEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ContextMenuEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContextMenuEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemClickEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemClickEventArgs;
                }

                [composable(Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SelectionChangedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISelectionChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TextChangedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextChangedEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemsPanelTemplate : Windows.UI.Xaml.FrameworkTemplate
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPanelTemplate;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IBorderStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Border : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IBorder;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICaptureElementStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass CaptureElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ICaptureElement;
                }

                [composable(Windows.UI.Xaml.Controls.IContentPresenterFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ContentPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentPresenter;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IContentPresenter2;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IContentPresenterOverrides;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IImageStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Image : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IImage;
                }

                [composable(Windows.UI.Xaml.Controls.IPanelFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPanelStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Panel : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IPanel;
                }

                [composable(Windows.UI.Xaml.Controls.ICanvasFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICanvasStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Canvas : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.ICanvas;
                }

                [composable(Windows.UI.Xaml.Controls.IGridFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IGridStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Grid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IGrid;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsPresenterStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IItemsPresenterStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemsPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPresenter;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IItemsPresenter2;
                    [version(0x06020000)] interface Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaElementStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IMediaElementStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass MediaElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaElement;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IMediaElement2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RichTextBlockOverflow : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichTextBlockOverflow;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IRichTextBlockOverflow2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RichTextBlock : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichTextBlock;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IRichTextBlock2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ScrollContentPresenter : Windows.UI.Xaml.Controls.ContentPresenter
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollContentPresenter;
                }

                [composable(Windows.UI.Xaml.Controls.IStackPanelFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IStackPanelStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass StackPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IStackPanel;
                    [version(0x06020000)] interface Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TextBlock : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBlock;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ITextBlock2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass VariableSizedWrapGrid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVariableSizedWrapGrid;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IViewboxStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Viewbox : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IViewbox;
                }

                [composable(Windows.UI.Xaml.Controls.IVirtualizingPanelFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass VirtualizingPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVirtualizingPanel;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides;
                    [protected] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IVirtualizingPanelProtected;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass VirtualizingStackPanel : Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVirtualizingStackPanel;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IIconElementFactory, protected, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IIconElementStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass IconElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IIconElement;
                }

                [composable(Windows.UI.Xaml.Controls.IBitmapIconFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IBitmapIconStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass BitmapIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IBitmapIcon;
                }

                [composable(Windows.UI.Xaml.Controls.IFontIconFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFontIconStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass FontIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IFontIcon;
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsStackPanelStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ItemsStackPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsStackPanel;
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsWrapGridStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ItemsWrapGrid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsWrapGrid;
                }

                [composable(Windows.UI.Xaml.Controls.IPathIconFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPathIconStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass PathIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IPathIcon;
                }

                [composable(Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SwapChainBackgroundPanel : Windows.UI.Xaml.Controls.Grid
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2;
                }

                [composable(Windows.UI.Xaml.Controls.ISwapChainPanelFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISwapChainPanelStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SwapChainPanel : Windows.UI.Xaml.Controls.Grid
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwapChainPanel;
                }

                [activatable(Windows.UI.Xaml.Controls.ISymbolIconFactory, 0x06030000)]
                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISymbolIconStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SymbolIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ISymbolIcon;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IWebViewStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass WebView : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebView;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IWebView2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWrapGridStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass WrapGrid : Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
                {
                    [default] interface Windows.UI.Xaml.Controls.IWrapGrid;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWebViewBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass WebViewBrush : Windows.UI.Xaml.Media.TileBrush
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewBrush;
                }

                [composable(Windows.UI.Xaml.Controls.IControlFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IControlStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Control : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IControl;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IControlOverrides;
                    [protected] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IControlProtected;
                }

                [composable(Windows.UI.Xaml.Controls.IContentControlFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IContentControlStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ContentControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentControl;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IContentControl2;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IContentControlOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IComboBoxItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ComboBoxItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBoxItem;
                }

                [composable(Windows.UI.Xaml.Controls.IDatePickerFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IDatePickerStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass DatePicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IDatePicker;
                }

                [composable(Windows.UI.Xaml.Controls.IFlipViewItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass FlipViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlipViewItem;
                }

                [composable(Windows.UI.Xaml.Controls.IGridViewItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GridViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridViewItem;
                }

                [composable(Windows.UI.Xaml.Controls.IGroupItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GroupItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupItem;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISemanticZoomStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SemanticZoom : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoom;
                }

                [composable(Windows.UI.Xaml.Controls.IItemsControlFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsControlStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemsControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsControl;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IItemsControl2;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IItemContainerMapping;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IItemsControlOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IListBoxItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ListBoxItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListBoxItem;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ListViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewItem;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PasswordBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IPasswordBox;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IPasswordBox2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IProgressRingStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ProgressRing : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IProgressRing;
                }

                [composable(Windows.UI.Xaml.Controls.IRichEditBoxFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RichEditBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichEditBox;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IRichEditBox2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IScrollViewerStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IScrollViewerStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ScrollViewer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewer;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IScrollViewer2;
                }

                [composable(Windows.UI.Xaml.Controls.ISettingsFlyoutFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISettingsFlyoutStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SettingsFlyout : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.ISettingsFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.ITextBoxFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TextBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBox;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ITextBox2;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToggleSwitchStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ToggleSwitch : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleSwitch;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IToggleSwitchOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IToolTipFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToolTipStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ToolTip : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IToolTip;
                }

                [composable(Windows.UI.Xaml.Controls.IUserControlFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IUserControlStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass UserControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IUserControl;
                }

                [composable(Windows.UI.Xaml.Controls.IButtonFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Button : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IButton;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IButtonWithFlyout;
                }

                [composable(Windows.UI.Xaml.Controls.IHyperlinkButtonFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHyperlinkButtonStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass HyperlinkButton : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IHyperlinkButton;
                }

                [composable(Windows.UI.Xaml.Controls.IProgressBarFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IProgressBarStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ProgressBar : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IProgressBar;
                }

                [composable(Windows.UI.Xaml.Controls.ISliderFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISliderStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.ISliderStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Slider : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Windows.UI.Xaml.Controls.ISlider;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ISlider2;
                }

                [composable(Windows.UI.Xaml.Controls.IComboBoxFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ComboBox : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBox;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IComboBox2;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IComboBoxOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewBaseFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ListViewBase : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewBase;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IListViewBase2;
                    [version(0x06020000)] interface Windows.UI.Xaml.Controls.ISemanticZoomInformation;
                }

                [composable(Windows.UI.Xaml.Controls.IFlipViewFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFlipViewStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass FlipView : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlipView;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IFlipView2;
                }

                [composable(Windows.UI.Xaml.Controls.IGridViewFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GridView : Windows.UI.Xaml.Controls.ListViewBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridView;
                }

                [composable(Windows.UI.Xaml.Controls.IListBoxFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IListBoxStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ListBox : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IListBox;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ListView : Windows.UI.Xaml.Controls.ListViewBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IListView;
                }

                [composable(Windows.UI.Xaml.Controls.ICheckBoxFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass CheckBox : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.ICheckBox;
                }

                [composable(Windows.UI.Xaml.Controls.IRadioButtonFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IRadioButtonStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RadioButton : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IRadioButton;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass AppBar : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBar;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IAppBarOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarButtonFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarButtonStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass AppBarButton : Windows.UI.Xaml.Controls.Button
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarButton;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarSeparatorFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarSeparatorStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass AppBarSeparator : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarSeparator;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass AppBarToggleButton : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBarToggleButton;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ICommandBarElement;
                }

                [composable(Windows.UI.Xaml.Controls.ICommandBarFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ICommandBarStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass CommandBar : Windows.UI.Xaml.Controls.AppBar
                {
                    [default] interface Windows.UI.Xaml.Controls.ICommandBar;
                }

                [composable(Windows.UI.Xaml.Controls.IFlyoutPresenterFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass FlyoutPresenter : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlyoutPresenter;
                }

                [composable(Windows.UI.Xaml.Controls.IFrameFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IFrameStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Controls.IFrameStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Frame : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IFrame;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.IFrame2;
                    [version(0x06020000)] interface Windows.UI.Xaml.Controls.INavigate;
                }

                [composable(Windows.UI.Xaml.Controls.IHubSectionFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHubSectionStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass HubSection : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IHubSection;
                }

                [composable(Windows.UI.Xaml.Controls.IHubFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IHubStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass Hub : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IHub;
                    [version(0x06030000)] interface Windows.UI.Xaml.Controls.ISemanticZoomInformation;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory, protected, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ListViewBaseHeaderItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewBaseHeaderItem;
                }

                [composable(Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass GridViewHeaderItem : Windows.UI.Xaml.Controls.ListViewBaseHeaderItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridViewHeaderItem;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewHeaderItemFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ListViewHeaderItem : Windows.UI.Xaml.Controls.ListViewBaseHeaderItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewHeaderItem;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass MenuFlyoutItemBase : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutItemBase;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass MenuFlyoutItem : Windows.UI.Xaml.Controls.MenuFlyoutItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutItem;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass MenuFlyoutPresenter : Windows.UI.Xaml.Controls.ItemsControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutPresenter;
                }

                [composable(Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass MenuFlyoutSeparator : Windows.UI.Xaml.Controls.MenuFlyoutItemBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IMenuFlyoutSeparator;
                }

                [composable(Windows.UI.Xaml.Controls.IPageFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IPageStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Page : Windows.UI.Xaml.Controls.UserControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IPage;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Controls.IPageOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.ISearchBoxFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ISearchBoxStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SearchBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ISearchBox;
                }

                [composable(Windows.UI.Xaml.Controls.ITimePickerFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.ITimePickerStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass TimePicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITimePicker;
                }

                [composable(Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory, public, 0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass ToggleMenuFlyoutItem : Windows.UI.Xaml.Controls.MenuFlyoutItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ControlTemplate : Windows.UI.Xaml.FrameworkTemplate
                {
                    [default] interface Windows.UI.Xaml.Controls.IControlTemplate;
                }
            }
        }
    }
}
