

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0603 */
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Eui2Examl2Econtrols_h__
#define __windows2Eui2Examl2Econtrols_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__ */


#ifndef ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#endif 	/* ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__ */


#ifndef ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#endif 	/* ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__ */


#ifndef ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#endif 	/* ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__ */


#ifndef ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#endif 	/* ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__ */


#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_FWD_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_FWD_DEFINED__
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs;

#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_FWD_DEFINED__ */


#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_FWD_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_FWD_DEFINED__
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs;

#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_FWD_DEFINED__ */


#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_FWD_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_FWD_DEFINED__
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs;

#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_FWD_DEFINED__ */


#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_FWD_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_FWD_DEFINED__
typedef interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs;

#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBackClickEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICleanUpVirtualizedItemEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContextMenuOpeningEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDragItemsStartingEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemClickEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INotifyEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISelectionChangedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoomViewChangedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextChangedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextControlPasteEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubSectionHeaderClickEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISectionsInViewChangedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewNavigationFailedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBackClickEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBorder;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBorderStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton __x_ABI_CWindows_CUI_CXaml_CControls_CIButton;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IButton;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IButtonFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IButtonWithFlyout;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IButtonStaticsWithFlyout;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICanvas;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICanvasStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICanvasFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICaptureElement;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICaptureElementStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICheckBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICheckBoxFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICleanUpVirtualizedItemEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IColumnDefinition;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IColumnDefinitionStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBox2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContainerContentChangingEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentControl;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentControlOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentControlStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentControlFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentControl2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentPresenter;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentPresenterOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentPresenterStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentPresenterFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentPresenter2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContentPresenterStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IContextMenuEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDataTemplateSelector;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDataTemplateSelectorOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDataTemplateSelectorFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDataTemplateSelector2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDataTemplateSelectorOverrides2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDatePicker;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDatePickerStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDatePickerFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDatePickerValueChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDragItemsStartingEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipView;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipViewFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipView2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipViewStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipViewItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipViewItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGrid;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridView;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupStyle;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupStyleFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupStyle2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupStyleSelector;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupStyleSelectorOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupStyleSelectorFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHyperlinkButton;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHyperlinkButtonStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHyperlinkButtonFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemContainerMapping;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage __x_ABI_CWindows_CUI_CXaml_CControls_CIImage;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IImage;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IImageStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INavigate;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoomInformation;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemClickEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemContainerGenerator;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsControl;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsControlOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsControlStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsControlFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsControl2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsPanelTemplate;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsPresenter;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsPresenterStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsPresenter2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsPresenterStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBoxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBoxFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBoxItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBoxItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView __x_ABI_CWindows_CUI_CXaml_CControls_CIListView;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListView;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBase;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBaseStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBaseFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBase2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBaseStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMediaElement;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMediaElementStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMediaElement2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMediaElementStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INotifyEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INotifyEventArgs2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPanelStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPanelFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPasswordBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPasswordBoxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPasswordBox2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPasswordBoxStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressBar;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressBarStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressBarFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressRing;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressRingStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRadioButton;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRadioButtonStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRadioButtonFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichEditBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichEditBoxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichEditBoxFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichEditBox2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichEditBoxStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlock;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlock2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockOverflow;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockOverflowStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockOverflow2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockOverflowStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRowDefinition;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRowDefinitionStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollContentPresenter;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewer;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewerStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewer2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewerStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewerView;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewerViewChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewerViewChangingEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISelectionChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISelectionChangedEventArgsFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoom;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoomStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoomLocation;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoomViewChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISettingsFlyout;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISettingsFlyoutStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISettingsFlyoutFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider __x_ABI_CWindows_CUI_CXaml_CControls_CISlider;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISlider;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISliderStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISliderFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISlider2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISliderStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IStackPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IStackPanelStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IStackPanelFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IStyleSelector;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IStyleSelectorOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IStyleSelectorFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBlock;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBlockStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBlock2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBlockStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBoxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBoxFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBox2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBoxStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextControlPasteEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleSwitch;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleSwitchOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleSwitchStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToolTip;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToolTipStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToolTipFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToolTipService;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToolTipServiceStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IUIElementCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IUserControl;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IUserControlStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IUserControlFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVariableSizedWrapGrid;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVariableSizedWrapGridStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IViewbox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IViewboxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingPanelOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingPanelProtected;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingPanelFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingStackPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingStackPanelOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IVirtualizingStackPanelStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBar;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarButton;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarButtonStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarButtonFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarSeparator;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarSeparatorStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarSeparatorFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarToggleButton;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarToggleButtonStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarToggleButtonFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBitmapIcon;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBitmapIconStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBitmapIconFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICommandBar;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICommandBarElement;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICommandBarStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICommandBarFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlyout;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlyoutStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlyoutFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlyoutPresenter;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlyoutPresenterFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFontIcon;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFontIconStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFontIconFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFrame;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFrameStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFrameFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFrame2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFrameStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewHeaderItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewHeaderItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub __x_ABI_CWindows_CUI_CXaml_CControls_CIHub;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHub;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubSection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubSectionStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubSectionFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubSectionHeaderClickEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IIconElement;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IIconElementStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IIconElementFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsStackPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsStackPanelStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsWrapGrid;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsWrapGridStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBaseHeaderItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBaseHeaderItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewHeaderItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewHeaderItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyout;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutItemStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutItemBase;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutItemBaseFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutPresenter;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutPresenterFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutSeparator;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutSeparatorFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage __x_ABI_CWindows_CUI_CXaml_CControls_CIPage;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPage;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPageOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPageStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPageFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPathIcon;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPathIconStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPathIconFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBox;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBoxStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBoxFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBoxQueryChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBoxQuerySubmittedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBoxResultSuggestionChosenEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISearchBoxSuggestionsRequestedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISectionsInViewChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISectionsInViewChangedEventArgsFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISwapChainBackgroundPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISwapChainBackgroundPanelFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISwapChainBackgroundPanel2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISwapChainPanel;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISwapChainPanelStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISwapChainPanelFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISymbolIcon;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISymbolIconStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISymbolIconFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITimePicker;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITimePickerStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITimePickerFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITimePickerValueChangedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleMenuFlyoutItem;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleMenuFlyoutItemStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleMenuFlyoutItemFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebView;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebView2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewContentLoadingEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewDOMContentLoadedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewLongRunningScriptDetectedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewNavigationCompletedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewNavigationFailedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewNavigationStartingEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebViewUnviewableContentIdentifiedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWrapGrid;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWrapGridStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl __x_ABI_CWindows_CUI_CXaml_CControls_CIControl;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControl;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControlOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControlProtected;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControlStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControlFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IControlTemplate;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.ApplicationModel.Search.h"
#include "Windows.Media.Capture.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.PlayTo.h"
#include "Windows.System.h"
#include "Windows.UI.Text.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Documents.h"
#include "Windows.UI.Xaml.Navigation.h"
#include "Windows.Web.h"
#include "Windows.Web.Http.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ColumnDefinition;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IColumnDefinition;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1830 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1830 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1830_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1830_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("264ebc1f-ed90-528e-bf80-e9f7e02c0ee4"))
IIterator<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*, ABI::Windows::UI::Xaml::Controls::IColumnDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ColumnDefinition>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1831 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1831 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1831_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1831_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a99329f3-4130-55cc-a4f0-c2ba43ca0735"))
IIterable<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*, ABI::Windows::UI::Xaml::Controls::IColumnDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ColumnDefinition>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GroupStyle;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IGroupStyle;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1832 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1832 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1832_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1832_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0003 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4b1bfdea-343f-5b34-96f4-753d57227eb9"))
IIterator<ABI::Windows::UI::Xaml::Controls::GroupStyle*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::GroupStyle*, ABI::Windows::UI::Xaml::Controls::IGroupStyle*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.GroupStyle>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::GroupStyle*> __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1833 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1833 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1833_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1833_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("89be2766-2a52-5790-ad0e-d5cae305b07c"))
IIterable<ABI::Windows::UI::Xaml::Controls::GroupStyle*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::GroupStyle*, ABI::Windows::UI::Xaml::Controls::IGroupStyle*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.GroupStyle>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::GroupStyle*> __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class HubSection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IHubSection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0004 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1834 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1834 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1834_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1834_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0005 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4f845272-f53e-5652-b008-a8fbf1e091ef"))
IIterator<ABI::Windows::UI::Xaml::Controls::HubSection*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::HubSection*, ABI::Windows::UI::Xaml::Controls::IHubSection*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.HubSection>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::HubSection*> __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1835 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1835 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1835_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1835_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0006 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("558c4082-463a-5c3d-b51e-10921b4a4d6c"))
IIterable<ABI::Windows::UI::Xaml::Controls::HubSection*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::HubSection*, ABI::Windows::UI::Xaml::Controls::IHubSection*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.HubSection>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::HubSection*> __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ICommandBarElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0006 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1836 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1836 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1836_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1836_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0007 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cddb0380-e9d7-5264-ab5c-d72b642874c9"))
IIterator<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> : IIterator_impl<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.ICommandBarElement>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0007 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1837 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1837 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1837_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1837_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0008 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d4c5a8e7-0d5e-5922-a7b4-59b5e634d335"))
IIterable<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> : IIterable_impl<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.ICommandBarElement>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyoutItemBase;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IMenuFlyoutItemBase;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0008 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1838 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1838 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1838_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1838_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2a8a81ef-f351-50a7-bcdc-8368df215280"))
IIterator<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*, ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.MenuFlyoutItemBase>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0009 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1839 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1839 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1839_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1839_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0bb14d64-cc9a-58ae-b881-73fe0ecb99eb"))
IIterable<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*, ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.MenuFlyoutItemBase>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RowDefinition;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IRowDefinition;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0010 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1840 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1840 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1840_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1840_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0011 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2655d45d-38c6-53f0-8719-f3c3a739c1f9"))
IIterator<ABI::Windows::UI::Xaml::Controls::RowDefinition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::RowDefinition*, ABI::Windows::UI::Xaml::Controls::IRowDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.RowDefinition>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::RowDefinition*> __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0011 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1841 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1841 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1841_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1841_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("abef522a-7378-504f-9406-97d9f42643a7"))
IIterable<ABI::Windows::UI::Xaml::Controls::RowDefinition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::RowDefinition*, ABI::Windows::UI::Xaml::Controls::IRowDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.RowDefinition>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::RowDefinition*> __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0012 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0012_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1842 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1842 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1842_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1842_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0013 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9abc1b42-9b12-5178-a898-bb33f04ece9d"))
IVectorView<ABI::Windows::UI::Xaml::Controls::GroupStyle*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::GroupStyle*, ABI::Windows::UI::Xaml::Controls::IGroupStyle*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.GroupStyle>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::GroupStyle*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0013 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1843 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1843 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1843_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1843_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0014 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bfb6a4c1-12bb-5f22-a08a-8ebab3864396"))
IVector<ABI::Windows::UI::Xaml::Controls::GroupStyle*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::GroupStyle*, ABI::Windows::UI::Xaml::Controls::IGroupStyle*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.GroupStyle>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Controls::GroupStyle*> __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_t;
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0014 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0014_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1844 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1844 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1844_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1844_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0015 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2caa8225-b3d4-5725-b0cf-5e6e61453b23"))
VectorChangedEventHandler<ABI::Windows::UI::Xaml::Controls::GroupStyle*> : VectorChangedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::GroupStyle*, ABI::Windows::UI::Xaml::Controls::IGroupStyle*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.GroupStyle>"; }
};
typedef VectorChangedEventHandler<ABI::Windows::UI::Xaml::Controls::GroupStyle*> __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_t;
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0015 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1845 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1845 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1845_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1845_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0016 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8144f56c-1f13-5a8d-835f-5e0c9325bff1"))
IObservableVector<ABI::Windows::UI::Xaml::Controls::GroupStyle*> : IObservableVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::GroupStyle*, ABI::Windows::UI::Xaml::Controls::IGroupStyle*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.GroupStyle>"; }
};
typedef IObservableVector<ABI::Windows::UI::Xaml::Controls::GroupStyle*> __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_t;
#define ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_FWD_DEFINED__
#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle ABI::Windows::Foundation::Collections::__FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0016 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0016_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1846 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1846 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1846_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1846_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0017 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a38e89ec-f1a4-5d7b-97c3-8aefb64a5f43"))
IVectorView<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> : IVectorView_impl<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.ICommandBarElement>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0017 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1847 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1847 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1847_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1847_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0018 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("18ad7c66-a127-550f-8325-8cf1789176c1"))
IVector<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> : IVector_impl<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t;
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0018 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0018_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1848 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1848 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1848_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1848_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0019 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("20b884e1-c1da-5332-b801-4f1c21744ac8"))
VectorChangedEventHandler<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> : VectorChangedEventHandler_impl<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.Controls.ICommandBarElement>"; }
};
typedef VectorChangedEventHandler<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t;
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0019 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1849 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1849 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1849_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1849_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0020 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d5644006-717d-512d-8785-b48c17e73468"))
IObservableVector<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> : IObservableVector_impl<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.Controls.ICommandBarElement>"; }
};
typedef IObservableVector<ABI::Windows::UI::Xaml::Controls::ICommandBarElement*> __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t;
#define ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_FWD_DEFINED__
#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement ABI::Windows::Foundation::Collections::__FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0020 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0020_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1850 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1850 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1850_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1850_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0021 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d8eba449-e161-5108-b4fb-70c2424ea198"))
IVectorView<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*, ABI::Windows::UI::Xaml::Controls::IColumnDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.ColumnDefinition>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0021 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1851 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1851 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1851_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1851_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0022 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("19452449-44eb-54a4-92f5-12161eda9bd7"))
IVectorView<ABI::Windows::UI::Xaml::Controls::HubSection*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::HubSection*, ABI::Windows::UI::Xaml::Controls::IHubSection*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.HubSection>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::HubSection*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0022 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0022_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1852 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1852 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1852_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1852_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0023 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a59e9e24-f5a6-5272-a97b-7dd01a3efdd0"))
IVectorView<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*, ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.MenuFlyoutItemBase>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0023 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1853 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1853 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1853_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1853_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0024 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("27b5c835-b5ac-5f58-a770-c739f9e6665c"))
IVectorView<ABI::Windows::UI::Xaml::Controls::RowDefinition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::RowDefinition*, ABI::Windows::UI::Xaml::Controls::IRowDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.RowDefinition>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::RowDefinition*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0024 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0024_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1854 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1854 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1854_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1854_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0025 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6e137874-dd39-5b4f-a7ec-2ea69e4c2229"))
IVector<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*, ABI::Windows::UI::Xaml::Controls::IColumnDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.ColumnDefinition>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Controls::ColumnDefinition*> __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t;
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0025 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1855 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1855 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1855_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1855_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0026 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8e47087a-3ce3-57dc-a583-7db9bf188fc4"))
IVector<ABI::Windows::UI::Xaml::Controls::HubSection*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::HubSection*, ABI::Windows::UI::Xaml::Controls::IHubSection*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.HubSection>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Controls::HubSection*> __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_t;
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0026 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0026_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1856 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1856 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1856_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1856_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0027 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f7f1c37b-b4df-5128-a476-fc8399bc10af"))
IVector<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*, ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.MenuFlyoutItemBase>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Controls::MenuFlyoutItemBase*> __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t;
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0027 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0027_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1857 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1857 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1857_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1857_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0028 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("62225981-7a0d-5d38-8088-7c6bb6d959be"))
IVector<ABI::Windows::UI::Xaml::Controls::RowDefinition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::RowDefinition*, ABI::Windows::UI::Xaml::Controls::IRowDefinition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.RowDefinition>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Controls::RowDefinition*> __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_t;
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class DatePickerValueChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IDatePickerValueChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0028 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0028_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1858 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1858 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1858_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1858_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0029 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_USE
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("18a84f8e-c1ec-5b25-ac98-818267e6f9a4"))
IEventHandler<ABI::Windows::UI::Xaml::Controls::DatePickerValueChangedEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::DatePickerValueChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::IDatePickerValueChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs>"; }
};
typedef IEventHandler<ABI::Windows::UI::Xaml::Controls::DatePickerValueChangedEventArgs*> __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_t;
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_FWD_DEFINED__
#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ScrollViewerViewChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IScrollViewerViewChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0029 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0029_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1859 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1859 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1859_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1859_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0030 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_USE
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("354c0f34-e691-502a-a444-d5f07aee310e"))
IEventHandler<ABI::Windows::UI::Xaml::Controls::ScrollViewerViewChangedEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ScrollViewerViewChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::IScrollViewerViewChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>"; }
};
typedef IEventHandler<ABI::Windows::UI::Xaml::Controls::ScrollViewerViewChangedEventArgs*> __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_t;
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_FWD_DEFINED__
#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ScrollViewerViewChangingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IScrollViewerViewChangingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0030 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0030_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1860 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1860 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1860_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1860_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0031 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_USE
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e0c06ef2-dbc9-511c-bab6-25756dd516a3"))
IEventHandler<ABI::Windows::UI::Xaml::Controls::ScrollViewerViewChangingEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ScrollViewerViewChangingEventArgs*, ABI::Windows::UI::Xaml::Controls::IScrollViewerViewChangingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>"; }
};
typedef IEventHandler<ABI::Windows::UI::Xaml::Controls::ScrollViewerViewChangingEventArgs*> __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_t;
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_FWD_DEFINED__
#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TimePickerValueChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ITimePickerValueChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0031 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0031_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1861 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1861 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1861_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1861_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0032 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_USE
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ebc4d41b-356a-59ca-b135-0ec34f68c307"))
IEventHandler<ABI::Windows::UI::Xaml::Controls::TimePickerValueChangedEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::TimePickerValueChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::ITimePickerValueChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs>"; }
};
typedef IEventHandler<ABI::Windows::UI::Xaml::Controls::TimePickerValueChangedEventArgs*> __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_t;
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_FWD_DEFINED__
#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewBase;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IListViewBase;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ContainerContentChangingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IContainerContentChangingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0032 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0032_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1862 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1862 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1862_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1862_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0033 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d01fb083-5e61-5c12-a18f-62947158faa8"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::ListViewBase*,ABI::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ListViewBase*, ABI::Windows::UI::Xaml::Controls::IListViewBase*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs*, ABI::Windows::UI::Xaml::Controls::IContainerContentChangingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.ListViewBase, Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::ListViewBase*,ABI::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISearchBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBoxQueryChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISearchBoxQueryChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0033 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0033_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1863 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1863 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1863_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1863_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0034 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b15ccc28-40f3-52da-9011-87621e9c60ea"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxQueryChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBox*, ABI::Windows::UI::Xaml::Controls::ISearchBox*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBoxQueryChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::ISearchBoxQueryChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SearchBox, Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxQueryChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBoxQuerySubmittedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISearchBoxQuerySubmittedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0034 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0034_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1864 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1864 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1864_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1864_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0035 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("56d6c824-a5b2-51f4-8af7-7b8ee582c029"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxQuerySubmittedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBox*, ABI::Windows::UI::Xaml::Controls::ISearchBox*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBoxQuerySubmittedEventArgs*, ABI::Windows::UI::Xaml::Controls::ISearchBoxQuerySubmittedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SearchBox, Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxQuerySubmittedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBoxResultSuggestionChosenEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISearchBoxResultSuggestionChosenEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0035 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0035_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1865 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1865 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1865_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1865_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0036 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8d18767b-a4b8-52fc-8767-f87d05b5172e"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxResultSuggestionChosenEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBox*, ABI::Windows::UI::Xaml::Controls::ISearchBox*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBoxResultSuggestionChosenEventArgs*, ABI::Windows::UI::Xaml::Controls::ISearchBoxResultSuggestionChosenEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SearchBox, Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxResultSuggestionChosenEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBoxSuggestionsRequestedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISearchBoxSuggestionsRequestedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0036 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0036_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1866 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1866 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1866_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1866_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0037 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("287dd4fe-12fc-5289-ab8a-7c7217024a6b"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxSuggestionsRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBox*, ABI::Windows::UI::Xaml::Controls::ISearchBox*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBoxSuggestionsRequestedEventArgs*, ABI::Windows::UI::Xaml::Controls::ISearchBoxSuggestionsRequestedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SearchBox, Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::Controls::SearchBoxSuggestionsRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SwapChainPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISwapChainPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

interface IInspectable;


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0037 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0037_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1867 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1867 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1867_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1867_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0038 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a8bbf146-b687-5c03-9a42-2ae2d55bfbb4"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SwapChainPanel*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SwapChainPanel*, ABI::Windows::UI::Xaml::Controls::ISwapChainPanel*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SwapChainPanel, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SwapChainPanel*,IInspectable*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0038 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0038_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1868 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1868 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1868_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1868_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0039 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d9f52e0d-21fb-5a0b-b4c6-7d162af7fb9c"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,IInspectable*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewContentLoadingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebViewContentLoadingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0039 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0039_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1869 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1869 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1869_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1869_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0040 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e7b42a9a-f140-52ad-a658-e237b9a3dcca"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewContentLoadingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebViewContentLoadingEventArgs*, ABI::Windows::UI::Xaml::Controls::IWebViewContentLoadingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewContentLoadingEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewDOMContentLoadedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebViewDOMContentLoadedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0040 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0040_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1870 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1870 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1870_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1870_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0041 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b9cc891c-4745-5a25-9845-e44d13425a38"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewDOMContentLoadedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebViewDOMContentLoadedEventArgs*, ABI::Windows::UI::Xaml::Controls::IWebViewDOMContentLoadedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewDOMContentLoadedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewLongRunningScriptDetectedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebViewLongRunningScriptDetectedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0041 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0041_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1871 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1871 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1871_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1871_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0042 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ecdc76ef-a99b-5ce7-b9a4-c85e66fed1ee"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewLongRunningScriptDetectedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebViewLongRunningScriptDetectedEventArgs*, ABI::Windows::UI::Xaml::Controls::IWebViewLongRunningScriptDetectedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewLongRunningScriptDetectedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewNavigationCompletedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebViewNavigationCompletedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0042 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0042_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1872 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1872 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1872_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1872_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0043 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("411136f7-770d-599c-8545-6d053a6a1799"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewNavigationCompletedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebViewNavigationCompletedEventArgs*, ABI::Windows::UI::Xaml::Controls::IWebViewNavigationCompletedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewNavigationCompletedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewNavigationStartingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebViewNavigationStartingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0043 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0043_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1873 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1873 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1873_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1873_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0044 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("98055b5a-36bb-5962-971f-8b87619eb17e"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewNavigationStartingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebViewNavigationStartingEventArgs*, ABI::Windows::UI::Xaml::Controls::IWebViewNavigationStartingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewNavigationStartingEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewUnviewableContentIdentifiedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IWebViewUnviewableContentIdentifiedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0044 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0044_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1874 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1874 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1874_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1874_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0045 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f00e9fbf-d30e-5854-8927-c9512abd8118"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewUnviewableContentIdentifiedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebView*, ABI::Windows::UI::Xaml::Controls::IWebView*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::WebViewUnviewableContentIdentifiedEventArgs*, ABI::Windows::UI::Xaml::Controls::IWebViewUnviewableContentIdentifiedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.WebView, Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::WebView*,ABI::Windows::UI::Xaml::Controls::WebViewUnviewableContentIdentifiedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class Transition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface ITransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0045 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0045_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1875 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1875 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1875_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1875_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0046 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0f149913-d622-5dde-b6e3-7835c2ab54b7"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0046 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0046_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1876 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1876 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1876_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1876_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0047 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("feb51398-4fdb-5112-8a9b-6a8786ca01ce"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0047 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0047_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1877 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1877 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1877_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1877_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0048 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("43b475a1-3811-5992-be44-ab41a825d355"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0048 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0048_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1878 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1878 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1878_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1878_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0049 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e798571f-7e3e-5e1a-aa55-cbc93b83f821"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0049 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0049_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1879 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1879 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1879_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1879_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0050 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Object>"; }
};
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define ____FIEventHandler_1_IInspectable_FWD_DEFINED__
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0050 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0050_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1880 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1880 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1880_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1880_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0051 */
/* [local] */ 

#ifndef DEF___FIIterator_1_IInspectable_USE
#define DEF___FIIterator_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("44a94f2d-04f8-5091-b336-be7892dd10be"))
IIterator<IInspectable*> : IIterator_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Object>"; }
};
typedef IIterator<IInspectable*> __FIIterator_1_IInspectable_t;
#define ____FIIterator_1_IInspectable_FWD_DEFINED__
#define __FIIterator_1_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0051 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0051_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1881 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1881 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1881_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1881_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0052 */
/* [local] */ 

#ifndef DEF___FIIterable_1_IInspectable_USE
#define DEF___FIIterable_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("092b849b-60b1-52be-a44a-6fe8e933cbe4"))
IIterable<IInspectable*> : IIterable_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Object>"; }
};
typedef IIterable<IInspectable*> __FIIterable_1_IInspectable_t;
#define ____FIIterable_1_IInspectable_FWD_DEFINED__
#define __FIIterable_1_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0052 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0052_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1882 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1882 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1882_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1882_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0053 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_IInspectable_USE
#define DEF___FIVectorView_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a6487363-b074-5c60-ab16-866dce4ee54d"))
IVectorView<IInspectable*> : IVectorView_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Object>"; }
};
typedef IVectorView<IInspectable*> __FIVectorView_1_IInspectable_t;
#define ____FIVectorView_1_IInspectable_FWD_DEFINED__
#define __FIVectorView_1_IInspectable ABI::Windows::Foundation::Collections::__FIVectorView_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0053 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0053_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1883 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1883 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1883_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1883_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0054 */
/* [local] */ 

#ifndef DEF___FIVector_1_IInspectable_USE
#define DEF___FIVector_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b32bdca4-5e52-5b27-bc5d-d66a1a268c2a"))
IVector<IInspectable*> : IVector_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Object>"; }
};
typedef IVector<IInspectable*> __FIVector_1_IInspectable_t;
#define ____FIVector_1_IInspectable_FWD_DEFINED__
#define __FIVector_1_IInspectable ABI::Windows::Foundation::Collections::__FIVector_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0054 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0054_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1884 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1884 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1884_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1884_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0055 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_IInspectable_USE
#define DEF___FVectorChangedEventHandler_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b423a801-d35e-56b9-813b-00889536cb98"))
VectorChangedEventHandler<IInspectable*> : VectorChangedEventHandler_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Object>"; }
};
typedef VectorChangedEventHandler<IInspectable*> __FVectorChangedEventHandler_1_IInspectable_t;
#define ____FVectorChangedEventHandler_1_IInspectable_FWD_DEFINED__
#define __FVectorChangedEventHandler_1_IInspectable ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FVectorChangedEventHandler_1_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0055 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0055_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1885 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1885 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1885_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1885_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0056 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_IInspectable_USE
#define DEF___FIObservableVector_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7b81c56a-0985-518d-baa9-0da9ae009f65"))
IObservableVector<IInspectable*> : IObservableVector_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableVector`1<Object>"; }
};
typedef IObservableVector<IInspectable*> __FIObservableVector_1_IInspectable_t;
#define ____FIObservableVector_1_IInspectable_FWD_DEFINED__
#define __FIObservableVector_1_IInspectable ABI::Windows::Foundation::Collections::__FIObservableVector_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableVector_1_IInspectable_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Data {
struct LoadMoreItemsResult;
} /*Data*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0056 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0056_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1886 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1886 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1886_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1886_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0057 */
/* [local] */ 

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("10fb738b-a63b-506e-9ed7-2eab37915221"))
IAsyncOperationCompletedHandler<struct ABI::Windows::UI::Xaml::Data::LoadMoreItemsResult> : IAsyncOperationCompletedHandler_impl<struct ABI::Windows::UI::Xaml::Data::LoadMoreItemsResult> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Data.LoadMoreItemsResult>"; }
};
typedef IAsyncOperationCompletedHandler<struct ABI::Windows::UI::Xaml::Data::LoadMoreItemsResult> __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_t;
#define ____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_FWD_DEFINED__
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0057 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0057_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1887 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1887 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1887_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1887_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0058 */
/* [local] */ 

#ifndef DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_USE
#define DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c788089d-37ab-5ba2-b865-5a309acdfc4d"))
IAsyncOperation<struct ABI::Windows::UI::Xaml::Data::LoadMoreItemsResult> : IAsyncOperation_impl<struct ABI::Windows::UI::Xaml::Data::LoadMoreItemsResult> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Data.LoadMoreItemsResult>"; }
};
typedef IAsyncOperation<struct ABI::Windows::UI::Xaml::Data::LoadMoreItemsResult> __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_t;
#define ____FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_FWD_DEFINED__
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TimelineMarker;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface ITimelineMarker;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0058 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0058_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1888 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1888 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1888_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1888_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0059 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("63e1e513-fca3-51c0-8c2b-09db5f8f4c40"))
IIterator<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0059 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0059_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1889 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1889 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1889_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1889_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0060 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("946c5af5-4c09-5784-9cf2-506947378e8e"))
IIterable<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0060 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0060_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1890 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1890 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1890_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1890_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0061 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fef8133f-98e9-5ca3-a667-0d234c5d1d96"))
IVectorView<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0061 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0061_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1891 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1891 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1891_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1891_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0062 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b2d8ddb4-d2b8-5930-942d-26118756bd46"))
IVector<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0062 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0062_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1892 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1892 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1892_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1892_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0063 */
/* [local] */ 

#ifndef DEF___FIReference_1_int_USE
#define DEF___FIReference_1_int_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("548cefbd-bc8a-5fa0-8df2-957440fc8bf4"))
IReference<int> : IReference_impl<int> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Int32>"; }
};
typedef IReference<int> __FIReference_1_int_t;
#define ____FIReference_1_int_FWD_DEFINED__
#define __FIReference_1_int ABI::Windows::Foundation::__FIReference_1_int_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_int_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class UIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IUIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0063 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0063_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1893 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1893 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1893_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1893_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0064 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1d1f9d60-d53b-57f7-b144-8f7c487846e8"))
IIterator<ABI::Windows::UI::Xaml::UIElement*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::UIElement*> __FIIterator_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0064 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0064_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1894 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1894 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1894_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1894_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0065 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42e26ae1-d357-57e8-bb48-f75c9ff69d91"))
IIterable<ABI::Windows::UI::Xaml::UIElement*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::UIElement*> __FIIterable_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0065 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0065_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1895 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1895 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1895_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1895_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0066 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f3864c10-14a4-5516-b1d9-63b6579429b1"))
IVectorView<ABI::Windows::UI::Xaml::UIElement*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::UIElement*> __FIVectorView_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0066 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0066_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1896 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1896 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1896_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1896_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0067 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b4c1e3ac-8768-5b9d-a661-f63330b8507b"))
IVector<ABI::Windows::UI::Xaml::UIElement*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::UIElement*> __FIVector_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIVector_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
class Block;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
interface IBlock;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0067 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0067_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1897 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1897 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1897_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1897_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0068 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("798d518e-a9f8-5fc7-8ccc-2a49069aba05"))
IIterator<ABI::Windows::UI::Xaml::Documents::Block*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Block*, ABI::Windows::UI::Xaml::Documents::IBlock*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Documents.Block>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Documents::Block*> __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CDocuments__CBlock_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0068 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0068_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1898 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1898 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1898_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1898_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0069 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f7023b9a-e6d1-5e2d-8f41-b28c33323e04"))
IIterable<ABI::Windows::UI::Xaml::Documents::Block*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Block*, ABI::Windows::UI::Xaml::Documents::IBlock*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Documents.Block>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Documents::Block*> __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CDocuments__CBlock_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0069 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0069_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1899 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1899 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1899_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1899_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0070 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("995f73c4-7cf8-5b59-a0fb-7e0c6477172e"))
IVectorView<ABI::Windows::UI::Xaml::Documents::Block*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Block*, ABI::Windows::UI::Xaml::Documents::IBlock*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Documents.Block>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Documents::Block*> __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CBlock_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0070 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0070_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1900 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1900 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1900_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1900_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0071 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3ee78a34-160e-50ff-b5aa-09f263a669f8"))
IVector<ABI::Windows::UI::Xaml::Documents::Block*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Block*, ABI::Windows::UI::Xaml::Documents::IBlock*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Documents.Block>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Documents::Block*> __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock_t;
#define ____FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0071 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0071_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1901 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1901 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1901_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1901_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0072 */
/* [local] */ 

#ifndef DEF___FIIterator_1_float_USE
#define DEF___FIIterator_1_float_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42614e61-b0aa-5e72-9354-2771db20b7a8"))
IIterator<float> : IIterator_impl<float> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Single>"; }
};
typedef IIterator<float> __FIIterator_1_float_t;
#define ____FIIterator_1_float_FWD_DEFINED__
#define __FIIterator_1_float ABI::Windows::Foundation::Collections::__FIIterator_1_float_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_float_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0072 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0072_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1902 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1902 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1902_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1902_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0073 */
/* [local] */ 

#ifndef DEF___FIIterable_1_float_USE
#define DEF___FIIterable_1_float_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b01bee51-063a-5fda-bd72-d76637bb8cb8"))
IIterable<float> : IIterable_impl<float> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Single>"; }
};
typedef IIterable<float> __FIIterable_1_float_t;
#define ____FIIterable_1_float_FWD_DEFINED__
#define __FIIterable_1_float ABI::Windows::Foundation::Collections::__FIIterable_1_float_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_float_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0073 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0073_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1903 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1903 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1903_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1903_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0074 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_float_USE
#define DEF___FIVectorView_1_float_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7bca64fd-150c-5d50-b56b-9f4f474c5930"))
IVectorView<float> : IVectorView_impl<float> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Single>"; }
};
typedef IVectorView<float> __FIVectorView_1_float_t;
#define ____FIVectorView_1_float_FWD_DEFINED__
#define __FIVectorView_1_float ABI::Windows::Foundation::Collections::__FIVectorView_1_float_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_float_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0074 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0074_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1904 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1904 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1904_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1904_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0075 */
/* [local] */ 

#ifndef DEF___FIVector_1_float_USE
#define DEF___FIVector_1_float_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("61cf693f-db4c-579f-b905-5dd3d23cfd4d"))
IVector<float> : IVector_impl<float> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Single>"; }
};
typedef IVector<float> __FIVector_1_float_t;
#define ____FIVector_1_float_FWD_DEFINED__
#define __FIVector_1_float ABI::Windows::Foundation::Collections::__FIVector_1_float_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_float_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0075 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0075_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1905 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1905 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1905_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1905_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0076 */
/* [local] */ 

#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Double>"; }
};
typedef IReference<double> __FIReference_1_double_t;
#define ____FIReference_1_double_FWD_DEFINED__
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_double_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0076 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0076_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1906 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1906 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1906_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1906_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0077 */
/* [local] */ 

#ifndef DEF___FIReference_1_float_USE
#define DEF___FIReference_1_float_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("719cc2ba-3e76-5def-9f1a-38d85a145ea8"))
IReference<float> : IReference_impl<float> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Single>"; }
};
typedef IReference<float> __FIReference_1_float_t;
#define ____FIReference_1_float_FWD_DEFINED__
#define __FIReference_1_float ABI::Windows::Foundation::__FIReference_1_float_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_float_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
class Inline;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
interface IInline;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0077 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0077_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1907 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1907 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1907_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1907_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0078 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f80dc964-2542-5c6a-ba65-b04824b5ed75"))
IIterator<ABI::Windows::UI::Xaml::Documents::Inline*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Inline*, ABI::Windows::UI::Xaml::Documents::IInline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Documents.Inline>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Documents::Inline*> __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CDocuments__CInline_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0078 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0078_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1908 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1908 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1908_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1908_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0079 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e1d2b910-18c2-5906-8f8a-d62a63f93f18"))
IIterable<ABI::Windows::UI::Xaml::Documents::Inline*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Inline*, ABI::Windows::UI::Xaml::Documents::IInline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Documents.Inline>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Documents::Inline*> __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CDocuments__CInline_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0079 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0079_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1909 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1909 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1909_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1909_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0080 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c2dd082f-8cb4-51d6-b91b-7e2377780cee"))
IVectorView<ABI::Windows::UI::Xaml::Documents::Inline*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Inline*, ABI::Windows::UI::Xaml::Documents::IInline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Documents.Inline>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Documents::Inline*> __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CDocuments__CInline_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0080 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0080_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1910 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1910 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1910_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1910_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0081 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CDocuments__CInline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("92ec9252-8ee3-55d6-84b4-30b635077778"))
IVector<ABI::Windows::UI::Xaml::Documents::Inline*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Documents::Inline*, ABI::Windows::UI::Xaml::Documents::IInline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Documents.Inline>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Documents::Inline*> __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline_t;
#define ____FIVector_1_Windows__CUI__CXaml__CDocuments__CInline_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CDocuments__CInline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CDocuments__CInline_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Navigation {
class PageStackEntry;
} /*Navigation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Navigation {
interface IPageStackEntry;
} /*Navigation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0081 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0081_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1911 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1911 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1911_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1911_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0082 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b89ca96c-ded1-53bd-8744-caa84e87ba87"))
IIterator<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*, ABI::Windows::UI::Xaml::Navigation::IPageStackEntry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Navigation.PageStackEntry>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0082 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0082_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1912 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1912 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1912_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1912_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0083 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dd2278a5-4c14-5967-8a41-9a47c3c5c4a7"))
IIterable<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*, ABI::Windows::UI::Xaml::Navigation::IPageStackEntry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Navigation.PageStackEntry>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0083 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0083_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1913 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1913 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1913_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1913_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0084 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af6d7eac-086f-5c5f-be4b-0858af7506f7"))
IVectorView<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*, ABI::Windows::UI::Xaml::Navigation::IPageStackEntry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Navigation.PageStackEntry>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0084 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0084_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1914 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1914 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1914_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1914_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0085 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e561a13f-89a1-5ef2-a3fe-eba1b4539b46"))
IVector<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*, ABI::Windows::UI::Xaml::Navigation::IPageStackEntry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Navigation.PageStackEntry>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Navigation::PageStackEntry*> __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t;
#define ____FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class RoutedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IRoutedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0085 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0085_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1915 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1915 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1915_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1915_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0086 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a16eff3c-cc37-554c-8f10-0f7e6e2bcaad"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::RoutedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBox*, ABI::Windows::UI::Xaml::Controls::ISearchBox*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::RoutedEventArgs*, ABI::Windows::UI::Xaml::IRoutedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SearchBox, Windows.UI.Xaml.RoutedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::RoutedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
class Uri;
} /*Foundation*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
interface IUriRuntimeClass;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0086 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0086_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1916 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1916 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1916_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1916_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0087 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CFoundation__CUri_USE
#define DEF___FIIterator_1_Windows__CFoundation__CUri_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1c157d0f-5efe-5cec-bbd6-0c6ce9af07a5"))
IIterator<ABI::Windows::Foundation::Uri*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Foundation::Uri*, ABI::Windows::Foundation::IUriRuntimeClass*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Uri>"; }
};
typedef IIterator<ABI::Windows::Foundation::Uri*> __FIIterator_1_Windows__CFoundation__CUri_t;
#define ____FIIterator_1_Windows__CFoundation__CUri_FWD_DEFINED__
#define __FIIterator_1_Windows__CFoundation__CUri ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CFoundation__CUri_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CFoundation__CUri_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0087 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0087_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1917 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1917 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1917_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1917_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0088 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CFoundation__CUri_USE
#define DEF___FIIterable_1_Windows__CFoundation__CUri_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b0d63b78-78ad-5e31-b6d8-e32a0e16c447"))
IIterable<ABI::Windows::Foundation::Uri*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Foundation::Uri*, ABI::Windows::Foundation::IUriRuntimeClass*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Uri>"; }
};
typedef IIterable<ABI::Windows::Foundation::Uri*> __FIIterable_1_Windows__CFoundation__CUri_t;
#define ____FIIterable_1_Windows__CFoundation__CUri_FWD_DEFINED__
#define __FIIterable_1_Windows__CFoundation__CUri ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CFoundation__CUri_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CFoundation__CUri_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0088 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0088_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1918 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1918 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1918_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1918_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0089 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CFoundation__CUri_USE
#define DEF___FIVectorView_1_Windows__CFoundation__CUri_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4b8385bd-a2cd-5ff1-bf74-7ea580423e50"))
IVectorView<ABI::Windows::Foundation::Uri*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Foundation::Uri*, ABI::Windows::Foundation::IUriRuntimeClass*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Uri>"; }
};
typedef IVectorView<ABI::Windows::Foundation::Uri*> __FIVectorView_1_Windows__CFoundation__CUri_t;
#define ____FIVectorView_1_Windows__CFoundation__CUri_FWD_DEFINED__
#define __FIVectorView_1_Windows__CFoundation__CUri ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CFoundation__CUri_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CFoundation__CUri_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0089 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0089_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1919 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1919 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1919_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1919_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0090 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CFoundation__CUri_USE
#define DEF___FIVector_1_Windows__CFoundation__CUri_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0d82bd8d-fe62-5d67-a7b9-7886dd75bc4e"))
IVector<ABI::Windows::Foundation::Uri*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Foundation::Uri*, ABI::Windows::Foundation::IUriRuntimeClass*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Foundation.Uri>"; }
};
typedef IVector<ABI::Windows::Foundation::Uri*> __FIVector_1_Windows__CFoundation__CUri_t;
#define ____FIVector_1_Windows__CFoundation__CUri_FWD_DEFINED__
#define __FIVector_1_Windows__CFoundation__CUri ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CFoundation__CUri_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CFoundation__CUri_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0090 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0090_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0090_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1920 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1920 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1920_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1920_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0091 */
/* [local] */ 

#ifndef DEF___FIIterator_1_HSTRING_USE
#define DEF___FIIterator_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8c304ebb-6615-50a4-8829-879ecd443236"))
IIterator<HSTRING> : IIterator_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<String>"; }
};
typedef IIterator<HSTRING> __FIIterator_1_HSTRING_t;
#define ____FIIterator_1_HSTRING_FWD_DEFINED__
#define __FIIterator_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_HSTRING_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0091 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0091_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1921 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1921 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1921_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1921_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0092 */
/* [local] */ 

#ifndef DEF___FIIterable_1_HSTRING_USE
#define DEF___FIIterable_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2fcc7c1-3bfc-5a0b-b2b0-72e769d1cb7e"))
IIterable<HSTRING> : IIterable_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<String>"; }
};
typedef IIterable<HSTRING> __FIIterable_1_HSTRING_t;
#define ____FIIterable_1_HSTRING_FWD_DEFINED__
#define __FIIterable_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_HSTRING_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0092 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0092_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1922 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1922 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1922_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1922_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0093 */
/* [local] */ 

#ifndef DEF___FIAsyncOperationCompletedHandler_1_HSTRING_USE
#define DEF___FIAsyncOperationCompletedHandler_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b79a741f-7fb5-50ae-9e99-911201ec3d41"))
IAsyncOperationCompletedHandler<HSTRING> : IAsyncOperationCompletedHandler_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.AsyncOperationCompletedHandler`1<String>"; }
};
typedef IAsyncOperationCompletedHandler<HSTRING> __FIAsyncOperationCompletedHandler_1_HSTRING_t;
#define ____FIAsyncOperationCompletedHandler_1_HSTRING_FWD_DEFINED__
#define __FIAsyncOperationCompletedHandler_1_HSTRING ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperationCompletedHandler_1_HSTRING_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0093 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0093_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1923 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1923 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1923_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1923_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0094 */
/* [local] */ 

#ifndef DEF___FIAsyncOperation_1_HSTRING_USE
#define DEF___FIAsyncOperation_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3e1fe603-f897-5263-b328-0806426b8a79"))
IAsyncOperation<HSTRING> : IAsyncOperation_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IAsyncOperation`1<String>"; }
};
typedef IAsyncOperation<HSTRING> __FIAsyncOperation_1_HSTRING_t;
#define ____FIAsyncOperation_1_HSTRING_FWD_DEFINED__
#define __FIAsyncOperation_1_HSTRING ABI::Windows::Foundation::__FIAsyncOperation_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperation_1_HSTRING_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace DataTransfer {
class DataPackage;
} /*DataTransfer*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace DataTransfer {
interface IDataPackage;
} /*DataTransfer*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0094 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0094_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1924 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1924 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1924_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1924_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0095 */
/* [local] */ 

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a93a3b99-e946-57ce-aad9-c23d138c353e"))
IAsyncOperationCompletedHandler<ABI::Windows::ApplicationModel::DataTransfer::DataPackage*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::ApplicationModel::DataTransfer::DataPackage*, ABI::Windows::ApplicationModel::DataTransfer::IDataPackage*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.DataTransfer.DataPackage>"; }
};
typedef IAsyncOperationCompletedHandler<ABI::Windows::ApplicationModel::DataTransfer::DataPackage*> __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_t;
#define ____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_FWD_DEFINED__
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0095 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0095_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1925 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1925 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1925_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1925_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0096 */
/* [local] */ 

#ifndef DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_USE
#define DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a16f2d07-ead3-53e4-9490-75bdbaeb7a5b"))
IAsyncOperation<ABI::Windows::ApplicationModel::DataTransfer::DataPackage*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::ApplicationModel::DataTransfer::DataPackage*, ABI::Windows::ApplicationModel::DataTransfer::IDataPackage*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackage>"; }
};
typedef IAsyncOperation<ABI::Windows::ApplicationModel::DataTransfer::DataPackage*> __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_t;
#define ____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_FWD_DEFINED__
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Eapplicationmodel2Edatatransfer_h__)
#include <Windows.ApplicationModel.DataTransfer.h>
#endif // !defined(__windows2Eapplicationmodel2Edatatransfer_h__)
#if !defined(__windows2Eapplicationmodel2Esearch_h__)
#include <Windows.ApplicationModel.Search.h>
#endif // !defined(__windows2Eapplicationmodel2Esearch_h__)
#if !defined(__windows2Emedia2Ecapture_h__)
#include <Windows.Media.Capture.h>
#endif // !defined(__windows2Emedia2Ecapture_h__)
#if !defined(__windows2Emedia2Ecore_h__)
#include <Windows.Media.Core.h>
#endif // !defined(__windows2Emedia2Ecore_h__)
#if !defined(__windows2Emedia2Eplayto_h__)
#include <Windows.Media.PlayTo.h>
#endif // !defined(__windows2Emedia2Eplayto_h__)
#if !defined(__windows2Emedia2Eprotection_h__)
#include <Windows.Media.Protection.h>
#endif // !defined(__windows2Emedia2Eprotection_h__)
#if !defined(__windows2Estorage2Estreams_h__)
#include <Windows.Storage.Streams.h>
#endif // !defined(__windows2Estorage2Estreams_h__)
#if !defined(__windows2Esystem_h__)
#include <Windows.System.h>
#endif // !defined(__windows2Esystem_h__)
#if !defined(__windows2Eui_h__)
#include <Windows.UI.h>
#endif // !defined(__windows2Eui_h__)
#if !defined(__windows2Eui2Ecore_h__)
#include <Windows.UI.Core.h>
#endif // !defined(__windows2Eui2Ecore_h__)
#if !defined(__windows2Eui2Etext_h__)
#include <Windows.UI.Text.h>
#endif // !defined(__windows2Eui2Etext_h__)
#if !defined(__windows2Eui2Examl_h__)
#include <Windows.UI.Xaml.h>
#endif // !defined(__windows2Eui2Examl_h__)
#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#include <Windows.UI.Xaml.Controls.Primitives.h>
#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#if !defined(__windows2Eui2Examl2Edata_h__)
#include <Windows.UI.Xaml.Data.h>
#endif // !defined(__windows2Eui2Examl2Edata_h__)
#if !defined(__windows2Eui2Examl2Edocuments_h__)
#include <Windows.UI.Xaml.Documents.h>
#endif // !defined(__windows2Eui2Examl2Edocuments_h__)
#if !defined(__windows2Eui2Examl2Einput_h__)
#include <Windows.UI.Xaml.Input.h>
#endif // !defined(__windows2Eui2Examl2Einput_h__)
#if !defined(__windows2Eui2Examl2Einterop_h__)
#include <Windows.UI.Xaml.Interop.h>
#endif // !defined(__windows2Eui2Examl2Einterop_h__)
#if !defined(__windows2Eui2Examl2Emedia_h__)
#include <Windows.UI.Xaml.Media.h>
#endif // !defined(__windows2Eui2Examl2Emedia_h__)
#if !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)
#include <Windows.UI.Xaml.Media.Animation.h>
#endif // !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)
#if !defined(__windows2Eui2Examl2Enavigation_h__)
#include <Windows.UI.Xaml.Navigation.h>
#endif // !defined(__windows2Eui2Examl2Enavigation_h__)
#if !defined(__windows2Eweb_h__)
#include <Windows.Web.h>
#endif // !defined(__windows2Eweb_h__)
#if !defined(__windows2Eweb2Ehttp_h__)
#include <Windows.Web.Http.h>
#endif // !defined(__windows2Eweb2Ehttp_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Search {
class LocalContentSuggestionSettings;
} /*Search*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Search {
class SearchQueryLinguisticDetails;
} /*Search*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Search {
class SearchSuggestionsRequest;
} /*Search*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif


#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Capture {
class MediaCapture;
} /*Capture*/
} /*Media*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace PlayTo {
class PlayToSource;
} /*PlayTo*/
} /*Media*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Media {
namespace Protection {
class MediaProtectionManager;
} /*Protection*/
} /*Media*/
} /*Windows*/
}
#endif


#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CSystem_CVirtualKeyModifiers __x_ABI_CWindows_CSystem_CVirtualKeyModifiers;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class CoreIndependentInputSource;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CText_CFontStretch __x_ABI_CWindows_CUI_CText_CFontStretch;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CText_CFontStyle __x_ABI_CWindows_CUI_CText_CFontStyle;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CText_CFontWeight __x_ABI_CWindows_CUI_CText_CFontWeight;

#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ComboBoxTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class FlyoutBase;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class GridViewItemTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement;


#endif /* end if !defined(__cplusplus) */


#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ItemsChangedEventArgs;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ListViewItemTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ProgressBarTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ProgressRingTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class SelectorItem;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class SettingsFlyoutTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ToggleSwitchTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ToolTipTemplateSettings;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius __x_ABI_CWindows_CUI_CXaml_CCornerRadius;

#endif


#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult __x_ABI_CWindows_CUI_CXaml_CData_CLoadMoreItemsResult;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DataTemplate;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyObject;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyProperty;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
class BlockCollection;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
class InlineCollection;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Documents {
class TextPointer;
} /*Documents*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DragEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;

#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFocusState __x_ABI_CWindows_CUI_CXaml_CFocusState;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class FrameworkElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CGridLength __x_ABI_CWindows_CUI_CXaml_CGridLength;

#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class DoubleTappedRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class HoldingRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class InputScope;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class KeyRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class ManipulationCompletedRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class ManipulationDeltaRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class ManipulationInertiaStartingRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class ManipulationStartedRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class ManipulationStartingRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class PointerRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class RightTappedRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class TappedRoutedEventArgs;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;

#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class NavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class TransitionCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Brush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class FontFamily;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Geometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class ImageSource;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState;


#endif /* end if !defined(__cplusplus) */


#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class SolidColorBrush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TimelineMarkerCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif



#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Navigation {
class NavigatingCancelEventArgs;
} /*Navigation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Navigation {
class NavigationEventArgs;
} /*Navigation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif



#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment;


#endif /* end if !defined(__cplusplus) */


#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class Style;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment __x_ABI_CWindows_CUI_CXaml_CTextAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds __x_ABI_CWindows_CUI_CXaml_CTextLineBounds;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming __x_ABI_CWindows_CUI_CXaml_CTextTrimming;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping __x_ABI_CWindows_CUI_CXaml_CTextWrapping;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;

#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CVisibility __x_ABI_CWindows_CUI_CXaml_CVisibility;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
class HttpRequestMessage;
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CWeb_CWebErrorStatus __x_ABI_CWindows_CWeb_CWebErrorStatus;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation __x_ABI_CWindows_CUI_CXaml_CControls_COrientation;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol;


#endif /* end if !defined(__cplusplus) */


#endif



















































































































































































































































































































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class BackClickEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class DragItemsStartingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class NotifyEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SemanticZoomViewChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TextControlPasteEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ColumnDefinitionCollection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class DataTemplateSelector;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RowDefinitionCollection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class StyleSelector;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GroupStyleSelector;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SemanticZoomLocation;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemCollection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemContainerGenerator;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class UIElementCollection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ScrollViewerView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ToolTipService;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class HubSectionHeaderClickEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SectionsInViewChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewNavigationFailedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class HubSectionCollection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Flyout;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyout;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class CleanUpVirtualizedItemEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ContextMenuEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemClickEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SelectionChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TextChangedEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemsPanelTemplate;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Border;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class CaptureElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ContentPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Image;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Panel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Canvas;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Grid;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemsPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MediaElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RichTextBlockOverflow;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RichTextBlock;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ScrollContentPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class StackPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TextBlock;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class VariableSizedWrapGrid;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Viewbox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class VirtualizingPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class VirtualizingStackPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class IconElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class BitmapIcon;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FontIcon;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemsStackPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemsWrapGrid;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class PathIcon;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SwapChainBackgroundPanel;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SymbolIcon;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WrapGrid;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class WebViewBrush;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Control;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ContentControl;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ComboBoxItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class DatePicker;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FlipViewItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GridViewItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GroupItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SemanticZoom;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemsControl;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListBoxItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class PasswordBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ProgressRing;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RichEditBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ScrollViewer;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SettingsFlyout;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TextBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ToggleSwitch;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ToolTip;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class UserControl;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Button;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class HyperlinkButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ProgressBar;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Slider;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ComboBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FlipView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GridView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class CheckBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RadioButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBar;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBarButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBarSeparator;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBarToggleButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class CommandBar;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FlyoutPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Frame;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Hub;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewBaseHeaderItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GridViewHeaderItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewHeaderItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyoutItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyoutPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyoutSeparator;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Page;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TimePicker;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ToggleMenuFlyoutItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ControlTemplate;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0096 */
/* [local] */ 






#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct DateTime DateTime;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Point Point;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Rect Rect;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif






#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace System {
            
            typedef enum VirtualKeyModifiers VirtualKeyModifiers;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            
            typedef struct Color Color;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Core {
                
                typedef enum CoreInputDeviceTypes CoreInputDeviceTypes;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Text {
                
                typedef enum FontStretch FontStretch;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Text {
                
                typedef enum FontStyle FontStyle;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Text {
                
                typedef struct FontWeight FontWeight;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif




#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum GeneratorDirection GeneratorDirection;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef struct GeneratorPosition GeneratorPosition;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum GroupHeaderPlacement GroupHeaderPlacement;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif





#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum PlacementMode PlacementMode;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif





#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum SliderSnapsTo SliderSnapsTo;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum SnapPointsAlignment SnapPointsAlignment;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum TickPlacement TickPlacement;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct CornerRadius CornerRadius;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Data {
                    
                    typedef struct LoadMoreItemsResult LoadMoreItemsResult;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif







#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct Duration Duration;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FocusState FocusState;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct GridLength GridLength;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum HorizontalAlignment HorizontalAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif






#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    
                    typedef enum KeyboardNavigationMode KeyboardNavigationMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif









#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Interop {
                    
                    typedef struct TypeName TypeName;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum LineStackingStrategy LineStackingStrategy;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum AudioCategory AudioCategory;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum AudioDeviceType AudioDeviceType;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif





#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum MediaCanPlayResponse MediaCanPlayResponse;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum MediaElementState MediaElementState;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum Stretch Stretch;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif






#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Navigation {
                    
                    typedef enum NavigationCacheMode NavigationCacheMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif




#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum OpticalMarginAlignment OpticalMarginAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextAlignment TextAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextLineBounds TextLineBounds;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextReadingOrder TextReadingOrder;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextTrimming TextTrimming;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextWrapping TextWrapping;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct Thickness Thickness;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum VerticalAlignment VerticalAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum Visibility Visibility;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Web {
            
            typedef enum WebErrorStatus WebErrorStatus;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ClickMode ClickMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum IncrementalLoadingTrigger IncrementalLoadingTrigger;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ItemsUpdatingScrollMode ItemsUpdatingScrollMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ListViewSelectionMode ListViewSelectionMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum Orientation Orientation;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum PanelScrollingDirection PanelScrollingDirection;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ScrollBarVisibility ScrollBarVisibility;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ScrollIntoViewAlignment ScrollIntoViewAlignment;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ScrollMode ScrollMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum SelectionMode SelectionMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum SnapPointsType SnapPointsType;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum StretchDirection StretchDirection;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum VirtualizationMode VirtualizationMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum ZoomMode ZoomMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    typedef enum Symbol Symbol;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif






















































































































































































































































































































extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0096_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1926 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1926 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1926_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1926_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0097 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0097_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("264ebc1f-ed90-528e-bf80-e9f7e02c0ee4")
    __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IColumnDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0098 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0098_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1927 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1927 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1927_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1927_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0099 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0099_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a99329f3-4130-55cc-a4f0-c2ba43ca0735")
    __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CColumnDefinition **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0100 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CColumnDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0100_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1928 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1928 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1928_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1928_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0101 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0101_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4b1bfdea-343f-5b34-96f4-753d57227eb9")
    __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IGroupStyle **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0102 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0102_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1929 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1929 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1929_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1929_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0103 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0103_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89be2766-2a52-5790-ad0e-d5cae305b07c")
    __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CGroupStyle **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0104 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CGroupStyle */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0104_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1930 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1930 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1930_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1930_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0105 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0105_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4f845272-f53e-5652-b008-a8fbf1e091ef")
    __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHubSection **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IHubSection **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0106 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0106_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1931 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1931 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1931_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1931_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0107 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0107_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("558c4082-463a-5c3d-b51e-10921b4a4d6c")
    __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CHubSection **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0108 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CHubSection */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0108_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1932 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1932 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1932_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1932_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0109 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0109_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cddb0380-e9d7-5264-ab5c-d72b642874c9")
    __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::ICommandBarElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0110 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0110_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1933 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1933 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1933_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1933_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0111 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0111_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d4c5a8e7-0d5e-5922-a7b4-59b5e634d335")
    __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CICommandBarElement **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0112 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CICommandBarElement */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0112 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0112_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1934 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1934 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1934_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1934_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0113 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0113_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2a8a81ef-f351-50a7-bcdc-8368df215280")
    __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0114 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0114_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1935 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1935 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1935_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1935_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0115 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0115_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0bb14d64-cc9a-58ae-b881-73fe0ecb99eb")
    __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0116 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0116_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1936 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1936 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1936_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1936_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0117 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0117_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2655d45d-38c6-53f0-8719-f3c3a739c1f9")
    __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IRowDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0118 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0118_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1937 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1937 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1937_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1937_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0119 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0119_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("abef522a-7378-504f-9406-97d9f42643a7")
    __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CRowDefinition **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0120 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CRowDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0120_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1938 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1938 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1938_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1938_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0121 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0121_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9abc1b42-9b12-5178-a898-bb33f04ece9d")
    __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IGroupStyle **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0122 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0122_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1939 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1939 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1939_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1939_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0123 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0123_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bfb6a4c1-12bb-5f22-a08a-8ebab3864396")
    __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IGroupStyle **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Controls::IGroupStyle **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CGroupStyle **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0124 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CGroupStyle */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0124_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1940 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1940 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1940_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1940_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0125 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)



/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0125 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0125_v0_0_s_ifspec;

#ifndef ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

/* interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 



/* interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2caa8225-b3d4-5725-b0cf-5e6e61453b23")
    __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IVectorChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
        
        END_INTERFACE
    } __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0126 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0126_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1941 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1941 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1941_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1941_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0127 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0127_v0_0_s_ifspec;

#ifndef ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__
#define ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__

/* interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 



/* interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8144f56c-1f13-5a8d-835f-5e0c9325bff1")
    __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE add_VectorChanged( 
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE remove_VectorChanged( 
            /* [in] */ EventRegistrationToken token) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CGroupStyle *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl;

    interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle
    {
        CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_add_VectorChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_remove_VectorChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0128 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0128_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1942 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1942 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1942_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1942_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0129 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0129_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a38e89ec-f1a4-5d7b-97c3-8aefb64a5f43")
    __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::ICommandBarElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0130 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0130_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1943 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1943 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1943_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1943_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0131 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0131_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18ad7c66-a127-550f-8325-8cf1789176c1")
    __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICommandBarElement *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::ICommandBarElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Controls::ICommandBarElement **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CICommandBarElement **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0132 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0132_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1944 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1944 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1944_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1944_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0133 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)



/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0133 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0133_v0_0_s_ifspec;

#ifndef ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

/* interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 



/* interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("20b884e1-c1da-5332-b801-4f1c21744ac8")
    __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IVectorChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
        
        END_INTERFACE
    } __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0134 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0134 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0134_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1945 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1945 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1945_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1945_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0135 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0135_v0_0_s_ifspec;

#ifndef ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__
#define ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__

/* interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 



/* interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d5644006-717d-512d-8785-b48c17e73468")
    __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE add_VectorChanged( 
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE remove_VectorChanged( 
            /* [in] */ EventRegistrationToken token) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CControls__CICommandBarElement *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl;

    interface __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement
    {
        CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_add_VectorChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_remove_VectorChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0136 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0136_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1946 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1946 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1946_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1946_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0137 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0137_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d8eba449-e161-5108-b4fb-70c2424ea198")
    __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IColumnDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0138 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0138_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1947 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1947 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1947_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1947_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0139 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0139_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19452449-44eb-54a4-92f5-12161eda9bd7")
    __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHubSection **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IHubSection **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0140 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0140_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1948 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1948 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1948_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1948_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0141 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0141_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a59e9e24-f5a6-5272-a97b-7dd01a3efdd0")
    __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0142 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0142 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0142_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1949 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1949 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1949_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1949_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0143 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0143_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("27b5c835-b5ac-5f58-a770-c739f9e6665c")
    __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IRowDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0144 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0144_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1950 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1950 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1950_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1950_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0145 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0145_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6e137874-dd39-5b4f-a7ec-2ea69e4c2229")
    __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IColumnDefinition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IColumnDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Controls::IColumnDefinition **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CColumnDefinition **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0146 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0146_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1951 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1951 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1951_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1951_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0147 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0147_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8e47087a-3ce3-57dc-a583-7db9bf188fc4")
    __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHubSection **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IHubSection **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Controls::IHubSection **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CHubSection **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CHubSectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CHubSection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0148 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CHubSection */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0148_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1952 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1952 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1952_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1952_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0149 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0149_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f7f1c37b-b4df-5128-a476-fc8399bc10af")
    __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0150 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0150_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1953 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1953 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1953_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1953_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0151 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0151_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("62225981-7a0d-5d38-8088-7c6bb6d959be")
    __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRowDefinition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Controls::IRowDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Controls::IRowDefinition **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CRowDefinition **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0152 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0152_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1954 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1954 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1954_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1954_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0153 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0153_v0_0_s_ifspec;

#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_INTERFACE_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_INTERFACE_DEFINED__

/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18a84f8e-c1ec-5b25-ac98-818267e6f9a4")
    __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDatePickerValueChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs *e);
        
        END_INTERFACE
    } __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl;

    interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs
    {
        CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0154 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0154_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1955 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1955 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1955_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1955_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0155 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0155_v0_0_s_ifspec;

#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__

/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("354c0f34-e691-502a-a444-d5f07aee310e")
    __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IScrollViewerViewChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs *e);
        
        END_INTERFACE
    } __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl;

    interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs
    {
        CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0156 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0156_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1956 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1956 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1956_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1956_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0157 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0157_v0_0_s_ifspec;

#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__

/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e0c06ef2-dbc9-511c-bab6-25756dd516a3")
    __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IScrollViewerViewChangingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs *e);
        
        END_INTERFACE
    } __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl;

    interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs
    {
        CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0158 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0158_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1957 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1957 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1957_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1957_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0159 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs
#define DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0159_v0_0_s_ifspec;

#ifndef ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_INTERFACE_DEFINED__
#define ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_INTERFACE_DEFINED__

/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ebc4d41b-356a-59ca-b135-0ec34f68c307")
    __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITimePickerValueChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs *e);
        
        END_INTERFACE
    } __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl;

    interface __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs
    {
        CONST_VTBL struct __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0160 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0160_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1958 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1958 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1958_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1958_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0161 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0161_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d01fb083-5e61-5c12-a18f-62947158faa8")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewBase *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContainerContentChangingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0162 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0162_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1959 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1959 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1959_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1959_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0163 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0163 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0163_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b15ccc28-40f3-52da-9011-87621e9c60ea")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBox *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBoxQueryChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0164 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0164 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0164_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1960 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1960 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1960_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1960_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0165 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0165 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0165_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56d6c824-a5b2-51f4-8af7-7b8ee582c029")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBox *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBoxQuerySubmittedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0166 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0166 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0166_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1961 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1961 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1961_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1961_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0167 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0167 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0167_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8d18767b-a4b8-52fc-8767-f87d05b5172e")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBox *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBoxResultSuggestionChosenEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0168 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0168 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0168_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1962 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1962 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1962_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1962_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0169 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0169 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0169_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("287dd4fe-12fc-5289-ab8a-7c7217024a6b")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBox *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBoxSuggestionsRequestedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0170 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0170 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0170_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1963 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1963 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1963_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1963_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0171 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0171 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0171_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a8bbf146-b687-5c03-9a42-2ae2d55bfbb4")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISwapChainPanel *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0172 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0172 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0172_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1964 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1964 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1964_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1964_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0173 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0173 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0173_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d9f52e0d-21fb-5a0b-b4c6-7d162af7fb9c")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0174 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0174 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0174_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1965 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1965 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1965_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1965_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0175 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0175 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0175_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e7b42a9a-f140-52ad-a658-e237b9a3dcca")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewContentLoadingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0176 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0176 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0176_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1966 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1966 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1966_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1966_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0177 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0177 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0177_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b9cc891c-4745-5a25-9845-e44d13425a38")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewDOMContentLoadedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0178 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0178 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0178_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1967 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1967 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1967_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1967_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0179 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0179 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0179_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ecdc76ef-a99b-5ce7-b9a4-c85e66fed1ee")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewLongRunningScriptDetectedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0180 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0180_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1968 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1968 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1968_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1968_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0181 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0181_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("411136f7-770d-599c-8545-6d053a6a1799")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewNavigationCompletedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0182 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0182_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1969 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1969 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1969_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1969_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0183 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0183_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98055b5a-36bb-5962-971f-8b87619eb17e")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewNavigationStartingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0184 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0184_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1970 */




/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1970 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1970_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_1970_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0185 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0185_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f00e9fbf-d30e-5854-8927-c9512abd8118")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewUnviewableContentIdentifiedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0186 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs */
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CClickMode
    {
        ClickMode_Release	= 0,
        ClickMode_Press	= 1,
        ClickMode_Hover	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger
    {
        IncrementalLoadingTrigger_None	= 0,
        IncrementalLoadingTrigger_Edge	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode
    {
        ItemsUpdatingScrollMode_KeepItemsInView	= 0,
        ItemsUpdatingScrollMode_KeepScrollOffset	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode
    {
        ListViewSelectionMode_None	= 0,
        ListViewSelectionMode_Single	= 1,
        ListViewSelectionMode_Multiple	= 2,
        ListViewSelectionMode_Extended	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_COrientation
    {
        Orientation_Vertical	= 0,
        Orientation_Horizontal	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection
    {
        PanelScrollingDirection_None	= 0,
        PanelScrollingDirection_Forward	= 1,
        PanelScrollingDirection_Backward	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility
    {
        ScrollBarVisibility_Disabled	= 0,
        ScrollBarVisibility_Auto	= 1,
        ScrollBarVisibility_Hidden	= 2,
        ScrollBarVisibility_Visible	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment
    {
        ScrollIntoViewAlignment_Default	= 0,
        ScrollIntoViewAlignment_Leading	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode
    {
        ScrollMode_Disabled	= 0,
        ScrollMode_Enabled	= 1,
        ScrollMode_Auto	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode
    {
        SelectionMode_Single	= 0,
        SelectionMode_Multiple	= 1,
        SelectionMode_Extended	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType
    {
        SnapPointsType_None	= 0,
        SnapPointsType_Optional	= 1,
        SnapPointsType_Mandatory	= 2,
        SnapPointsType_OptionalSingle	= 3,
        SnapPointsType_MandatorySingle	= 4
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection
    {
        StretchDirection_UpOnly	= 0,
        StretchDirection_DownOnly	= 1,
        StretchDirection_Both	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode
    {
        VirtualizationMode_Standard	= 0,
        VirtualizationMode_Recycling	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode
    {
        ZoomMode_Disabled	= 0,
        ZoomMode_Enabled	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol
    {
        Symbol_Previous	= 57600,
        Symbol_Next	= 57601,
        Symbol_Play	= 57602,
        Symbol_Pause	= 57603,
        Symbol_Edit	= 57604,
        Symbol_Save	= 57605,
        Symbol_Clear	= 57606,
        Symbol_Delete	= 57607,
        Symbol_Remove	= 57608,
        Symbol_Add	= 57609,
        Symbol_Cancel	= 57610,
        Symbol_Accept	= 57611,
        Symbol_More	= 57612,
        Symbol_Redo	= 57613,
        Symbol_Undo	= 57614,
        Symbol_Home	= 57615,
        Symbol_Up	= 57616,
        Symbol_Forward	= 57617,
        Symbol_Back	= 57618,
        Symbol_Favorite	= 57619,
        Symbol_Camera	= 57620,
        Symbol_Setting	= 57621,
        Symbol_Video	= 57622,
        Symbol_Sync	= 57623,
        Symbol_Download	= 57624,
        Symbol_Mail	= 57625,
        Symbol_Find	= 57626,
        Symbol_Help	= 57627,
        Symbol_Upload	= 57628,
        Symbol_Emoji	= 57629,
        Symbol_TwoPage	= 57630,
        Symbol_LeaveChat	= 57631,
        Symbol_MailForward	= 57632,
        Symbol_Clock	= 57633,
        Symbol_Send	= 57634,
        Symbol_Crop	= 57635,
        Symbol_RotateCamera	= 57636,
        Symbol_People	= 57637,
        Symbol_OpenPane	= 57638,
        Symbol_ClosePane	= 57639,
        Symbol_World	= 57640,
        Symbol_Flag	= 57641,
        Symbol_PreviewLink	= 57642,
        Symbol_Globe	= 57643,
        Symbol_Trim	= 57644,
        Symbol_AttachCamera	= 57645,
        Symbol_ZoomIn	= 57646,
        Symbol_Bookmarks	= 57647,
        Symbol_Document	= 57648,
        Symbol_ProtectedDocument	= 57649,
        Symbol_Page	= 57650,
        Symbol_Bullets	= 57651,
        Symbol_Comment	= 57652,
        Symbol_MailFilled	= 57653,
        Symbol_ContactInfo	= 57654,
        Symbol_HangUp	= 57655,
        Symbol_ViewAll	= 57656,
        Symbol_MapPin	= 57657,
        Symbol_Phone	= 57658,
        Symbol_VideoChat	= 57659,
        Symbol_Switch	= 57660,
        Symbol_Contact	= 57661,
        Symbol_Rename	= 57662,
        Symbol_Pin	= 57665,
        Symbol_MusicInfo	= 57666,
        Symbol_Go	= 57667,
        Symbol_Keyboard	= 57668,
        Symbol_DockLeft	= 57669,
        Symbol_DockRight	= 57670,
        Symbol_DockBottom	= 57671,
        Symbol_Remote	= 57672,
        Symbol_Refresh	= 57673,
        Symbol_Rotate	= 57674,
        Symbol_Shuffle	= 57675,
        Symbol_List	= 57676,
        Symbol_Shop	= 57677,
        Symbol_SelectAll	= 57678,
        Symbol_Orientation	= 57679,
        Symbol_Import	= 57680,
        Symbol_ImportAll	= 57681,
        Symbol_BrowsePhotos	= 57685,
        Symbol_WebCam	= 57686,
        Symbol_Pictures	= 57688,
        Symbol_SaveLocal	= 57689,
        Symbol_Caption	= 57690,
        Symbol_Stop	= 57691,
        Symbol_ShowResults	= 57692,
        Symbol_Volume	= 57693,
        Symbol_Repair	= 57694,
        Symbol_Message	= 57695,
        Symbol_Page2	= 57696,
        Symbol_CalendarDay	= 57697,
        Symbol_CalendarWeek	= 57698,
        Symbol_Calendar	= 57699,
        Symbol_Character	= 57700,
        Symbol_MailReplyAll	= 57701,
        Symbol_Read	= 57702,
        Symbol_Link	= 57703,
        Symbol_Account	= 57704,
        Symbol_ShowBcc	= 57705,
        Symbol_HideBcc	= 57706,
        Symbol_Cut	= 57707,
        Symbol_Attach	= 57708,
        Symbol_Paste	= 57709,
        Symbol_Filter	= 57710,
        Symbol_Copy	= 57711,
        Symbol_Emoji2	= 57712,
        Symbol_Important	= 57713,
        Symbol_MailReply	= 57714,
        Symbol_SlideShow	= 57715,
        Symbol_Sort	= 57716,
        Symbol_Manage	= 57720,
        Symbol_AllApps	= 57721,
        Symbol_DisconnectDrive	= 57722,
        Symbol_MapDrive	= 57723,
        Symbol_NewWindow	= 57724,
        Symbol_OpenWith	= 57725,
        Symbol_ContactPresence	= 57729,
        Symbol_Priority	= 57730,
        Symbol_GoToToday	= 57732,
        Symbol_Font	= 57733,
        Symbol_FontColor	= 57734,
        Symbol_Contact2	= 57735,
        Symbol_Folder	= 57736,
        Symbol_Audio	= 57737,
        Symbol_Placeholder	= 57738,
        Symbol_View	= 57739,
        Symbol_SetLockScreen	= 57740,
        Symbol_SetTile	= 57741,
        Symbol_ClosedCaption	= 57744,
        Symbol_StopSlideShow	= 57745,
        Symbol_Permissions	= 57746,
        Symbol_Highlight	= 57747,
        Symbol_DisableUpdates	= 57748,
        Symbol_UnFavorite	= 57749,
        Symbol_UnPin	= 57750,
        Symbol_OpenLocal	= 57751,
        Symbol_Mute	= 57752,
        Symbol_Italic	= 57753,
        Symbol_Underline	= 57754,
        Symbol_Bold	= 57755,
        Symbol_MoveToFolder	= 57756,
        Symbol_LikeDislike	= 57757,
        Symbol_Dislike	= 57758,
        Symbol_Like	= 57759,
        Symbol_AlignRight	= 57760,
        Symbol_AlignCenter	= 57761,
        Symbol_AlignLeft	= 57762,
        Symbol_Zoom	= 57763,
        Symbol_ZoomOut	= 57764,
        Symbol_OpenFile	= 57765,
        Symbol_OtherUser	= 57766,
        Symbol_Admin	= 57767,
        Symbol_Street	= 57795,
        Symbol_Map	= 57796,
        Symbol_ClearSelection	= 57797,
        Symbol_FontDecrease	= 57798,
        Symbol_FontIncrease	= 57799,
        Symbol_FontSize	= 57800,
        Symbol_CellPhone	= 57801,
        Symbol_ReShare	= 57802,
        Symbol_Tag	= 57803,
        Symbol_RepeatOne	= 57804,
        Symbol_RepeatAll	= 57805,
        Symbol_OutlineStar	= 57806,
        Symbol_SolidStar	= 57807,
        Symbol_Calculator	= 57808,
        Symbol_Directions	= 57809,
        Symbol_Target	= 57810,
        Symbol_Library	= 57811,
        Symbol_PhoneBook	= 57812,
        Symbol_Memo	= 57813,
        Symbol_Microphone	= 57814,
        Symbol_PostUpdate	= 57815,
        Symbol_BackToWindow	= 57816,
        Symbol_FullScreen	= 57817,
        Symbol_NewFolder	= 57818,
        Symbol_CalendarReply	= 57819,
        Symbol_UnSyncFolder	= 57821,
        Symbol_ReportHacked	= 57822,
        Symbol_SyncFolder	= 57823,
        Symbol_BlockContact	= 57824,
        Symbol_SwitchApps	= 57825,
        Symbol_AddFriend	= 57826,
        Symbol_TouchPointer	= 57827,
        Symbol_GoToStart	= 57828,
        Symbol_ZeroBars	= 57829,
        Symbol_OneBar	= 57830,
        Symbol_TwoBars	= 57831,
        Symbol_ThreeBars	= 57832,
        Symbol_FourBars	= 57833,
        Symbol_Scan	= 58004,
        Symbol_Preview	= 58005
    } ;
#endif /* end if !defined(__cplusplus) */

#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0186 */
/* [local] */ 

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ClickMode
                        {
                            ClickMode_Release	= 0,
                            ClickMode_Press	= 1,
                            ClickMode_Hover	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum IncrementalLoadingTrigger
                        {
                            IncrementalLoadingTrigger_None	= 0,
                            IncrementalLoadingTrigger_Edge	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ItemsUpdatingScrollMode
                        {
                            ItemsUpdatingScrollMode_KeepItemsInView	= 0,
                            ItemsUpdatingScrollMode_KeepScrollOffset	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ListViewSelectionMode
                        {
                            ListViewSelectionMode_None	= 0,
                            ListViewSelectionMode_Single	= 1,
                            ListViewSelectionMode_Multiple	= 2,
                            ListViewSelectionMode_Extended	= 3
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum Orientation
                        {
                            Orientation_Vertical	= 0,
                            Orientation_Horizontal	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum PanelScrollingDirection
                        {
                            PanelScrollingDirection_None	= 0,
                            PanelScrollingDirection_Forward	= 1,
                            PanelScrollingDirection_Backward	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ScrollBarVisibility
                        {
                            ScrollBarVisibility_Disabled	= 0,
                            ScrollBarVisibility_Auto	= 1,
                            ScrollBarVisibility_Hidden	= 2,
                            ScrollBarVisibility_Visible	= 3
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ScrollIntoViewAlignment
                        {
                            ScrollIntoViewAlignment_Default	= 0,
                            ScrollIntoViewAlignment_Leading	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ScrollMode
                        {
                            ScrollMode_Disabled	= 0,
                            ScrollMode_Enabled	= 1,
                            ScrollMode_Auto	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum SelectionMode
                        {
                            SelectionMode_Single	= 0,
                            SelectionMode_Multiple	= 1,
                            SelectionMode_Extended	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum SnapPointsType
                        {
                            SnapPointsType_None	= 0,
                            SnapPointsType_Optional	= 1,
                            SnapPointsType_Mandatory	= 2,
                            SnapPointsType_OptionalSingle	= 3,
                            SnapPointsType_MandatorySingle	= 4
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum StretchDirection
                        {
                            StretchDirection_UpOnly	= 0,
                            StretchDirection_DownOnly	= 1,
                            StretchDirection_Both	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum VirtualizationMode
                        {
                            VirtualizationMode_Standard	= 0,
                            VirtualizationMode_Recycling	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum ZoomMode
                        {
                            ZoomMode_Disabled	= 0,
                            ZoomMode_Enabled	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    
                    /* [v1_enum] */ 
                    enum Symbol
                        {
                            Symbol_Previous	= 57600,
                            Symbol_Next	= 57601,
                            Symbol_Play	= 57602,
                            Symbol_Pause	= 57603,
                            Symbol_Edit	= 57604,
                            Symbol_Save	= 57605,
                            Symbol_Clear	= 57606,
                            Symbol_Delete	= 57607,
                            Symbol_Remove	= 57608,
                            Symbol_Add	= 57609,
                            Symbol_Cancel	= 57610,
                            Symbol_Accept	= 57611,
                            Symbol_More	= 57612,
                            Symbol_Redo	= 57613,
                            Symbol_Undo	= 57614,
                            Symbol_Home	= 57615,
                            Symbol_Up	= 57616,
                            Symbol_Forward	= 57617,
                            Symbol_Back	= 57618,
                            Symbol_Favorite	= 57619,
                            Symbol_Camera	= 57620,
                            Symbol_Setting	= 57621,
                            Symbol_Video	= 57622,
                            Symbol_Sync	= 57623,
                            Symbol_Download	= 57624,
                            Symbol_Mail	= 57625,
                            Symbol_Find	= 57626,
                            Symbol_Help	= 57627,
                            Symbol_Upload	= 57628,
                            Symbol_Emoji	= 57629,
                            Symbol_TwoPage	= 57630,
                            Symbol_LeaveChat	= 57631,
                            Symbol_MailForward	= 57632,
                            Symbol_Clock	= 57633,
                            Symbol_Send	= 57634,
                            Symbol_Crop	= 57635,
                            Symbol_RotateCamera	= 57636,
                            Symbol_People	= 57637,
                            Symbol_OpenPane	= 57638,
                            Symbol_ClosePane	= 57639,
                            Symbol_World	= 57640,
                            Symbol_Flag	= 57641,
                            Symbol_PreviewLink	= 57642,
                            Symbol_Globe	= 57643,
                            Symbol_Trim	= 57644,
                            Symbol_AttachCamera	= 57645,
                            Symbol_ZoomIn	= 57646,
                            Symbol_Bookmarks	= 57647,
                            Symbol_Document	= 57648,
                            Symbol_ProtectedDocument	= 57649,
                            Symbol_Page	= 57650,
                            Symbol_Bullets	= 57651,
                            Symbol_Comment	= 57652,
                            Symbol_MailFilled	= 57653,
                            Symbol_ContactInfo	= 57654,
                            Symbol_HangUp	= 57655,
                            Symbol_ViewAll	= 57656,
                            Symbol_MapPin	= 57657,
                            Symbol_Phone	= 57658,
                            Symbol_VideoChat	= 57659,
                            Symbol_Switch	= 57660,
                            Symbol_Contact	= 57661,
                            Symbol_Rename	= 57662,
                            Symbol_Pin	= 57665,
                            Symbol_MusicInfo	= 57666,
                            Symbol_Go	= 57667,
                            Symbol_Keyboard	= 57668,
                            Symbol_DockLeft	= 57669,
                            Symbol_DockRight	= 57670,
                            Symbol_DockBottom	= 57671,
                            Symbol_Remote	= 57672,
                            Symbol_Refresh	= 57673,
                            Symbol_Rotate	= 57674,
                            Symbol_Shuffle	= 57675,
                            Symbol_List	= 57676,
                            Symbol_Shop	= 57677,
                            Symbol_SelectAll	= 57678,
                            Symbol_Orientation	= 57679,
                            Symbol_Import	= 57680,
                            Symbol_ImportAll	= 57681,
                            Symbol_BrowsePhotos	= 57685,
                            Symbol_WebCam	= 57686,
                            Symbol_Pictures	= 57688,
                            Symbol_SaveLocal	= 57689,
                            Symbol_Caption	= 57690,
                            Symbol_Stop	= 57691,
                            Symbol_ShowResults	= 57692,
                            Symbol_Volume	= 57693,
                            Symbol_Repair	= 57694,
                            Symbol_Message	= 57695,
                            Symbol_Page2	= 57696,
                            Symbol_CalendarDay	= 57697,
                            Symbol_CalendarWeek	= 57698,
                            Symbol_Calendar	= 57699,
                            Symbol_Character	= 57700,
                            Symbol_MailReplyAll	= 57701,
                            Symbol_Read	= 57702,
                            Symbol_Link	= 57703,
                            Symbol_Account	= 57704,
                            Symbol_ShowBcc	= 57705,
                            Symbol_HideBcc	= 57706,
                            Symbol_Cut	= 57707,
                            Symbol_Attach	= 57708,
                            Symbol_Paste	= 57709,
                            Symbol_Filter	= 57710,
                            Symbol_Copy	= 57711,
                            Symbol_Emoji2	= 57712,
                            Symbol_Important	= 57713,
                            Symbol_MailReply	= 57714,
                            Symbol_SlideShow	= 57715,
                            Symbol_Sort	= 57716,
                            Symbol_Manage	= 57720,
                            Symbol_AllApps	= 57721,
                            Symbol_DisconnectDrive	= 57722,
                            Symbol_MapDrive	= 57723,
                            Symbol_NewWindow	= 57724,
                            Symbol_OpenWith	= 57725,
                            Symbol_ContactPresence	= 57729,
                            Symbol_Priority	= 57730,
                            Symbol_GoToToday	= 57732,
                            Symbol_Font	= 57733,
                            Symbol_FontColor	= 57734,
                            Symbol_Contact2	= 57735,
                            Symbol_Folder	= 57736,
                            Symbol_Audio	= 57737,
                            Symbol_Placeholder	= 57738,
                            Symbol_View	= 57739,
                            Symbol_SetLockScreen	= 57740,
                            Symbol_SetTile	= 57741,
                            Symbol_ClosedCaption	= 57744,
                            Symbol_StopSlideShow	= 57745,
                            Symbol_Permissions	= 57746,
                            Symbol_Highlight	= 57747,
                            Symbol_DisableUpdates	= 57748,
                            Symbol_UnFavorite	= 57749,
                            Symbol_UnPin	= 57750,
                            Symbol_OpenLocal	= 57751,
                            Symbol_Mute	= 57752,
                            Symbol_Italic	= 57753,
                            Symbol_Underline	= 57754,
                            Symbol_Bold	= 57755,
                            Symbol_MoveToFolder	= 57756,
                            Symbol_LikeDislike	= 57757,
                            Symbol_Dislike	= 57758,
                            Symbol_Like	= 57759,
                            Symbol_AlignRight	= 57760,
                            Symbol_AlignCenter	= 57761,
                            Symbol_AlignLeft	= 57762,
                            Symbol_Zoom	= 57763,
                            Symbol_ZoomOut	= 57764,
                            Symbol_OpenFile	= 57765,
                            Symbol_OtherUser	= 57766,
                            Symbol_Admin	= 57767,
                            Symbol_Street	= 57795,
                            Symbol_Map	= 57796,
                            Symbol_ClearSelection	= 57797,
                            Symbol_FontDecrease	= 57798,
                            Symbol_FontIncrease	= 57799,
                            Symbol_FontSize	= 57800,
                            Symbol_CellPhone	= 57801,
                            Symbol_ReShare	= 57802,
                            Symbol_Tag	= 57803,
                            Symbol_RepeatOne	= 57804,
                            Symbol_RepeatAll	= 57805,
                            Symbol_OutlineStar	= 57806,
                            Symbol_SolidStar	= 57807,
                            Symbol_Calculator	= 57808,
                            Symbol_Directions	= 57809,
                            Symbol_Target	= 57810,
                            Symbol_Library	= 57811,
                            Symbol_PhoneBook	= 57812,
                            Symbol_Memo	= 57813,
                            Symbol_Microphone	= 57814,
                            Symbol_PostUpdate	= 57815,
                            Symbol_BackToWindow	= 57816,
                            Symbol_FullScreen	= 57817,
                            Symbol_NewFolder	= 57818,
                            Symbol_CalendarReply	= 57819,
                            Symbol_UnSyncFolder	= 57821,
                            Symbol_ReportHacked	= 57822,
                            Symbol_SyncFolder	= 57823,
                            Symbol_BlockContact	= 57824,
                            Symbol_SwitchApps	= 57825,
                            Symbol_AddFriend	= 57826,
                            Symbol_TouchPointer	= 57827,
                            Symbol_GoToStart	= 57828,
                            Symbol_ZeroBars	= 57829,
                            Symbol_OneBar	= 57830,
                            Symbol_TwoBars	= 57831,
                            Symbol_ThreeBars	= 57832,
                            Symbol_FourBars	= 57833,
                            Symbol_Scan	= 58004,
                            Symbol_Preview	= 58005
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0186_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBackClickEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FA9BC21F-9892-482E-ABF6-EB2D607D32DE")
                        IBackClickEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IBackClickEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBackClickEventHandler = __uuidof(IBackClickEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICleanUpVirtualizedItemEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("CACAD0D6-0F0D-4870-884D-F2DEDF674288")
                        ICleanUpVirtualizedItemEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICleanUpVirtualizedItemEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICleanUpVirtualizedItemEventHandler = __uuidof(ICleanUpVirtualizedItemEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContextMenuOpeningEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DF945151-745C-4446-B2FC-216D765847A0")
                        IContextMenuOpeningEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContextMenuEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContextMenuOpeningEventHandler = __uuidof(IContextMenuOpeningEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDragItemsStartingEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3AAEAB4C-14CB-4434-BECC-88A8585C2F89")
                        IDragItemsStartingEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDragItemsStartingEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDragItemsStartingEventHandler = __uuidof(IDragItemsStartingEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemClickEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3DF6D14E-E18A-4A75-9395-627C5F3CD489")
                        IItemClickEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IItemClickEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemClickEventHandler = __uuidof(IItemClickEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::INotifyEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C2FDD1F8-7105-4A74-A109-DE29DFF56B98")
                        INotifyEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::INotifyEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_INotifyEventHandler = __uuidof(INotifyEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISelectionChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E1A05352-5AA0-42CA-9CD9-068A14DB6E68")
                        ISelectionChangedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISelectionChangedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISelectionChangedEventHandler = __uuidof(ISelectionChangedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1FA9161D-5D73-44FB-81AC-D1C9384919D4")
                        ISemanticZoomViewChangedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomViewChangedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISemanticZoomViewChangedEventHandler = __uuidof(ISemanticZoomViewChangedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8EB35B97-AD87-40E8-818B-77DB24759566")
                        ITextChangedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextChangedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextChangedEventHandler = __uuidof(ITextChangedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextControlPasteEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D56DB359-6F77-4296-AB9C-794939444365")
                        ITextControlPasteEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextControlPasteEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextControlPasteEventHandler = __uuidof(ITextControlPasteEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubSectionHeaderClickEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AFE17B9B-9C63-4583-88E4-C59019B7F49D")
                        IHubSectionHeaderClickEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSectionHeaderClickEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubSectionHeaderClickEventHandler = __uuidof(IHubSectionHeaderClickEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISectionsInViewChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6BECAA6A-63F8-47FF-B6AC-76E7DA247D67")
                        ISectionsInViewChangedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISectionsInViewChangedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISectionsInViewChangedEventHandler = __uuidof(ISectionsInViewChangedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewNavigationFailedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A31EAFE1-41DC-47F8-AE22-9706C8F143D4")
                        IWebViewNavigationFailedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewNavigationFailedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewNavigationFailedEventHandler = __uuidof(IWebViewNavigationFailedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0199 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBackClickEventArgs[] = L"Windows.UI.Xaml.Controls.IBackClickEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0199 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0199_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0199_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBackClickEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("2AE6146C-477E-48C9-8830-2C464B7C7104")
                        IBackClickEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBackClickEventArgs = __uuidof(IBackClickEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0200 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBorder[] = L"Windows.UI.Xaml.Controls.IBorder";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0200 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0200_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0200_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBorder */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("797C4539-45BD-4633-A044-BFB02EF5170F")
                        IBorder : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderBrush( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BorderBrush( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderThickness( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BorderThickness( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Background( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Background( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CornerRadius( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::CornerRadius *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CornerRadius( 
                                /* [in] */ ABI::Windows::UI::Xaml::CornerRadius value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Child( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Child( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ChildTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBorder = __uuidof(IBorder);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Background )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CCornerRadius value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Child )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Child )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChildTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_BorderBrush(This,value)	\
    ( (This)->lpVtbl -> get_BorderBrush(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_BorderBrush(This,value)	\
    ( (This)->lpVtbl -> put_BorderBrush(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_BorderThickness(This,value)	\
    ( (This)->lpVtbl -> get_BorderThickness(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_BorderThickness(This,value)	\
    ( (This)->lpVtbl -> put_BorderThickness(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_Background(This,value)	\
    ( (This)->lpVtbl -> get_Background(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_Background(This,value)	\
    ( (This)->lpVtbl -> put_Background(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_CornerRadius(This,value)	\
    ( (This)->lpVtbl -> get_CornerRadius(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_CornerRadius(This,value)	\
    ( (This)->lpVtbl -> put_CornerRadius(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_Child(This,value)	\
    ( (This)->lpVtbl -> get_Child(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_Child(This,value)	\
    ( (This)->lpVtbl -> put_Child(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_get_ChildTransitions(This,value)	\
    ( (This)->lpVtbl -> get_ChildTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_put_ChildTransitions(This,value)	\
    ( (This)->lpVtbl -> put_ChildTransitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0201 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBorderStatics[] = L"Windows.UI.Xaml.Controls.IBorderStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0201 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0201_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0201_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBorderStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B81D1639-E911-4FD7-A4C4-B9C7F008B7FC")
                        IBorderStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderBrushProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderThicknessProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackgroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CornerRadiusProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBorderStatics = __uuidof(IBorderStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CornerRadiusProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_get_BorderBrushProperty(This,value)	\
    ( (This)->lpVtbl -> get_BorderBrushProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_get_BorderThicknessProperty(This,value)	\
    ( (This)->lpVtbl -> get_BorderThicknessProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_get_BackgroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_BackgroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_get_CornerRadiusProperty(This,value)	\
    ( (This)->lpVtbl -> get_CornerRadiusProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_get_PaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_PaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_get_ChildTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_ChildTransitionsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBorderStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0202 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButton[] = L"Windows.UI.Xaml.Controls.IButton";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0202 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0202_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0202_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IButton */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("280335AE-5570-46C7-8E0B-602BE71229A2")
                        IButton : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IButton = __uuidof(IButton);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButton * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButton_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButton_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButton_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButton_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0203 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButtonFactory[] = L"Windows.UI.Xaml.Controls.IButtonFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0203 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0203_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0203_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IButtonFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("80A13C19-843A-451C-8CF5-44C701B0E216")
                        IButtonFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IButton **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IButtonFactory = __uuidof(IButtonFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIButton **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0204 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButtonWithFlyout[] = L"Windows.UI.Xaml.Controls.IButtonWithFlyout";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0204 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0204_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0204_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IButtonWithFlyout */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("09108F87-DF6C-4180-9B3A-E60845825811")
                        IButtonWithFlyout : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Flyout( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IFlyoutBase **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Flyout( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IFlyoutBase *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IButtonWithFlyout = __uuidof(IButtonWithFlyout);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Flyout )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Flyout )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_get_Flyout(This,value)	\
    ( (This)->lpVtbl -> get_Flyout(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_put_Flyout(This,value)	\
    ( (This)->lpVtbl -> put_Flyout(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonWithFlyout_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0205 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IButtonStaticsWithFlyout[] = L"Windows.UI.Xaml.Controls.IButtonStaticsWithFlyout";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0205 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0205_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0205_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IButtonStaticsWithFlyout */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("90143898-A16C-4759-B2F0-A5F7E625169E")
                        IButtonStaticsWithFlyout : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FlyoutProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IButtonStaticsWithFlyout = __uuidof(IButtonStaticsWithFlyout);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FlyoutProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_get_FlyoutProperty(This,value)	\
    ( (This)->lpVtbl -> get_FlyoutProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIButtonStaticsWithFlyout_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0206 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICanvas[] = L"Windows.UI.Xaml.Controls.ICanvas";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0206 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0206_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0206_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICanvas */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvas;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("79190E19-CD38-4823-AEAE-64A77132F519")
                        ICanvas : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ICanvas = __uuidof(ICanvas);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvas_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0207 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICanvasStatics[] = L"Windows.UI.Xaml.Controls.ICanvasStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0207 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0207_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0207_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICanvasStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("40CE5C46-2962-446F-AAFB-4CDC486939C9")
                        ICanvasStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LeftProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetLeft( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [out][retval] */ __RPC__out DOUBLE *length) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetLeft( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [in] */ DOUBLE length) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetTop( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [out][retval] */ __RPC__out DOUBLE *length) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetTop( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [in] */ DOUBLE length) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZIndexProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetZIndex( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetZIndex( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICanvasStatics = __uuidof(ICanvasStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeftProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out DOUBLE *length);
        
        HRESULT ( STDMETHODCALLTYPE *SetLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ DOUBLE length);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetTop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out DOUBLE *length);
        
        HRESULT ( STDMETHODCALLTYPE *SetTop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ DOUBLE length);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZIndexProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetZIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetZIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ INT32 value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_get_LeftProperty(This,value)	\
    ( (This)->lpVtbl -> get_LeftProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_GetLeft(This,element,length)	\
    ( (This)->lpVtbl -> GetLeft(This,element,length) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_SetLeft(This,element,length)	\
    ( (This)->lpVtbl -> SetLeft(This,element,length) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_get_TopProperty(This,value)	\
    ( (This)->lpVtbl -> get_TopProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_GetTop(This,element,length)	\
    ( (This)->lpVtbl -> GetTop(This,element,length) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_SetTop(This,element,length)	\
    ( (This)->lpVtbl -> SetTop(This,element,length) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_get_ZIndexProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZIndexProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_GetZIndex(This,element,value)	\
    ( (This)->lpVtbl -> GetZIndex(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_SetZIndex(This,element,value)	\
    ( (This)->lpVtbl -> SetZIndex(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0208 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICanvasFactory[] = L"Windows.UI.Xaml.Controls.ICanvasFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0208 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0208_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0208_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICanvasFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1B328BD1-B400-4A8E-943B-5AD2C45BE0DF")
                        ICanvasFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ICanvas **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICanvasFactory = __uuidof(ICanvasFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICanvas **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICanvasFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0209 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICaptureElement[] = L"Windows.UI.Xaml.Controls.ICaptureElement";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0209 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0209_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0209_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICaptureElement */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("31A5C0E7-F307-4D4A-B626-E978863F5B74")
                        ICaptureElement : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Capture::IMediaCapture **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Media::Capture::IMediaCapture *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stretch( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stretch value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICaptureElement = __uuidof(ICaptureElement);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCapture_CIMediaCapture *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_put_Source(This,value)	\
    ( (This)->lpVtbl -> put_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_get_Stretch(This,value)	\
    ( (This)->lpVtbl -> get_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_put_Stretch(This,value)	\
    ( (This)->lpVtbl -> put_Stretch(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0210 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICaptureElementStatics[] = L"Windows.UI.Xaml.Controls.ICaptureElementStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0210 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0210_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0210_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICaptureElementStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1E438DED-7DA6-409E-806E-305AE4AD9B3F")
                        ICaptureElementStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICaptureElementStatics = __uuidof(ICaptureElementStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_get_SourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_SourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_get_StretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_StretchProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElementStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0211 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICheckBox[] = L"Windows.UI.Xaml.Controls.ICheckBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0211 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0211_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0211_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICheckBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("2294C894-7E2A-4B70-B088-8F5D814875BA")
                        ICheckBox : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ICheckBox = __uuidof(ICheckBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0212 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICheckBoxFactory[] = L"Windows.UI.Xaml.Controls.ICheckBoxFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0212 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0212_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0212_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICheckBoxFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4FA6AABB-3F4B-4301-BE07-1172EA61EEFB")
                        ICheckBoxFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ICheckBox **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICheckBoxFactory = __uuidof(ICheckBoxFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICheckBoxFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0213 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICleanUpVirtualizedItemEventArgs[] = L"Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0213 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0213_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0213_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICleanUpVirtualizedItemEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("EA05CCE9-937C-4120-8406-792185784338")
                        ICleanUpVirtualizedItemEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UIElement( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cancel( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Cancel( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICleanUpVirtualizedItemEventArgs = __uuidof(ICleanUpVirtualizedItemEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UIElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_get_UIElement(This,value)	\
    ( (This)->lpVtbl -> get_UIElement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_get_Cancel(This,value)	\
    ( (This)->lpVtbl -> get_Cancel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_put_Cancel(This,value)	\
    ( (This)->lpVtbl -> put_Cancel(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0214 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColumnDefinition[] = L"Windows.UI.Xaml.Controls.IColumnDefinition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0214 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0214_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0214_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IColumnDefinition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F7F1B229-F024-467F-970A-7E705615DB7B")
                        IColumnDefinition : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::GridLength *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
                                /* [in] */ ABI::Windows::UI::Xaml::GridLength value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxWidth( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinWidth( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IColumnDefinition = __uuidof(IColumnDefinition);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_get_Width(This,value)	\
    ( (This)->lpVtbl -> get_Width(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_put_Width(This,value)	\
    ( (This)->lpVtbl -> put_Width(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_get_MaxWidth(This,value)	\
    ( (This)->lpVtbl -> get_MaxWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_put_MaxWidth(This,value)	\
    ( (This)->lpVtbl -> put_MaxWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_get_MinWidth(This,value)	\
    ( (This)->lpVtbl -> get_MinWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_put_MinWidth(This,value)	\
    ( (This)->lpVtbl -> put_MinWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_get_ActualWidth(This,value)	\
    ( (This)->lpVtbl -> get_ActualWidth(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0215 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IColumnDefinitionStatics[] = L"Windows.UI.Xaml.Controls.IColumnDefinitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0215 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0215_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0215_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IColumnDefinitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("06B0D728-D044-40C6-942E-AE60EAC74851")
                        IColumnDefinitionStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_WidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IColumnDefinitionStatics = __uuidof(IColumnDefinitionStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_get_WidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_WidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_get_MaxWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_get_MinWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinWidthProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIColumnDefinitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0216 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox[] = L"Windows.UI.Xaml.Controls.IComboBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0216 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0216_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0216_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B9A8D05C-AC97-47F1-A5F4-3F9F4D4B116C")
                        IComboBox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDropDownOpen( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsDropDownOpen( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsEditable( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSelectionBoxHighlighted( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxDropDownHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxDropDownHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionBoxItem( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionBoxItemTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IComboBoxTemplateSettings **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_DropDownClosed( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_DropDownClosed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_DropDownOpened( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_DropDownOpened( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBox = __uuidof(IComboBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDropDownOpen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsDropDownOpen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEditable )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSelectionBoxHighlighted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxDropDownHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxDropDownHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionBoxItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionBoxItemTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIComboBoxTemplateSettings **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_DropDownClosed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DropDownClosed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DropDownOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DropDownOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_IsDropDownOpen(This,value)	\
    ( (This)->lpVtbl -> get_IsDropDownOpen(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_put_IsDropDownOpen(This,value)	\
    ( (This)->lpVtbl -> put_IsDropDownOpen(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_IsEditable(This,value)	\
    ( (This)->lpVtbl -> get_IsEditable(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_IsSelectionBoxHighlighted(This,value)	\
    ( (This)->lpVtbl -> get_IsSelectionBoxHighlighted(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_MaxDropDownHeight(This,value)	\
    ( (This)->lpVtbl -> get_MaxDropDownHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_put_MaxDropDownHeight(This,value)	\
    ( (This)->lpVtbl -> put_MaxDropDownHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_SelectionBoxItem(This,value)	\
    ( (This)->lpVtbl -> get_SelectionBoxItem(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_SelectionBoxItemTemplate(This,value)	\
    ( (This)->lpVtbl -> get_SelectionBoxItemTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_add_DropDownClosed(This,value,token)	\
    ( (This)->lpVtbl -> add_DropDownClosed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_remove_DropDownClosed(This,token)	\
    ( (This)->lpVtbl -> remove_DropDownClosed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_add_DropDownOpened(This,value,token)	\
    ( (This)->lpVtbl -> add_DropDownOpened(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_remove_DropDownOpened(This,token)	\
    ( (This)->lpVtbl -> remove_DropDownOpened(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0217 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxOverrides[] = L"Windows.UI.Xaml.Controls.IComboBoxOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0217 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0217_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0217_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBoxOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4F016541-BCFE-4A22-8932-C914981C2240")
                        IComboBoxOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnDropDownClosed( 
                                /* [in] */ __RPC__in_opt IInspectable *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnDropDownOpened( 
                                /* [in] */ __RPC__in_opt IInspectable *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBoxOverrides = __uuidof(IComboBoxOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnDropDownClosed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnDropDownOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_OnDropDownClosed(This,e)	\
    ( (This)->lpVtbl -> OnDropDownClosed(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_OnDropDownOpened(This,e)	\
    ( (This)->lpVtbl -> OnDropDownOpened(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0218 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0218 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0218_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0218_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBoxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3E14C9B1-D15B-4DC9-8110-CF3A117B96E7")
                        IComboBoxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDropDownOpenProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxDropDownHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBoxStatics = __uuidof(IComboBoxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDropDownOpenProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxDropDownHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_get_IsDropDownOpenProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsDropDownOpenProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_get_MaxDropDownHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxDropDownHeightProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0219 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxFactory[] = L"Windows.UI.Xaml.Controls.IComboBoxFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0219 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0219_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0219_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBoxFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AC0D0444-A65B-4ABD-86DF-3016049EFEDC")
                        IComboBoxFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IComboBox **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBoxFactory = __uuidof(IComboBoxFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0220 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBox2[] = L"Windows.UI.Xaml.Controls.IComboBox2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0220 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0220_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0220_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBox2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("EA0CBF91-CA36-4FAD-972A-2E53A6718B9F")
                        IComboBox2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlaceholderText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBox2 = __uuidof(IComboBox2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2 * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_get_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_put_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> put_PlaceholderText(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0221 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxStatics2[] = L"Windows.UI.Xaml.Controls.IComboBoxStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0221 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0221_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0221_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBoxStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("93988A11-402C-4B13-96D1-7220266B9220")
                        IComboBoxStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBoxStatics2 = __uuidof(IComboBoxStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_get_PlaceholderTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderTextProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0222 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxItem[] = L"Windows.UI.Xaml.Controls.IComboBoxItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0222 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0222_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0222_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBoxItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("993FD6D2-2AAE-4F3B-B44D-5648F4D06114")
                        IComboBoxItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IComboBoxItem = __uuidof(IComboBoxItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0223 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IComboBoxItemFactory[] = L"Windows.UI.Xaml.Controls.IComboBoxItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0223 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0223_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0223_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IComboBoxItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8FFFE867-D94C-4E87-8FC4-6EBCD63C5AC2")
                        IComboBoxItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IComboBoxItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IComboBoxItemFactory = __uuidof(IComboBoxItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0224 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContainerContentChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0224 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0224_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0224_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContainerContentChangingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("07DEEAA7-018F-4DDA-B399-FD4E13A31BEA")
                        IContainerContentChangingEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainer( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::ISelectorItem **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InRecycleQueue( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Phase( 
                                /* [out][retval] */ __RPC__out UINT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE RegisterUpdateCallback( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs *callback) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE RegisterUpdateCallbackWithPhase( 
                                /* [in] */ UINT32 callbackPhase,
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs *callback) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContainerContentChangingEventArgs = __uuidof(IContainerContentChangingEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelectorItem **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InRecycleQueue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Phase )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out][retval] */ __RPC__out UINT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterUpdateCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs *callback);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterUpdateCallbackWithPhase )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * This,
            /* [in] */ UINT32 callbackPhase,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs *callback);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_get_ItemContainer(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainer(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_get_InRecycleQueue(This,value)	\
    ( (This)->lpVtbl -> get_InRecycleQueue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_get_ItemIndex(This,value)	\
    ( (This)->lpVtbl -> get_ItemIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_get_Item(This,value)	\
    ( (This)->lpVtbl -> get_Item(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_get_Phase(This,value)	\
    ( (This)->lpVtbl -> get_Phase(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_RegisterUpdateCallback(This,callback)	\
    ( (This)->lpVtbl -> RegisterUpdateCallback(This,callback) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_RegisterUpdateCallbackWithPhase(This,callbackPhase,callback)	\
    ( (This)->lpVtbl -> RegisterUpdateCallbackWithPhase(This,callbackPhase,callback) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0225 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControl[] = L"Windows.UI.Xaml.Controls.IContentControl";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0225 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0225_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0225_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentControl */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A26DD1DC-CD44-435C-BE94-01D6241C231C")
                        IContentControl : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Content( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Content( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTemplateSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentControl = __uuidof(IContentControl);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_get_Content(This,value)	\
    ( (This)->lpVtbl -> get_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_put_Content(This,value)	\
    ( (This)->lpVtbl -> put_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_get_ContentTemplate(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_put_ContentTemplate(This,value)	\
    ( (This)->lpVtbl -> put_ContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_get_ContentTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_put_ContentTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> put_ContentTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_get_ContentTransitions(This,value)	\
    ( (This)->lpVtbl -> get_ContentTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_put_ContentTransitions(This,value)	\
    ( (This)->lpVtbl -> put_ContentTransitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0226 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControlOverrides[] = L"Windows.UI.Xaml.Controls.IContentControlOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0226 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0226_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0226_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentControlOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5F4C0B10-E38E-4B5D-BE1A-5ED04246A635")
                        IContentControlOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnContentChanged( 
                                /* [in] */ __RPC__in_opt IInspectable *oldContent,
                                /* [in] */ __RPC__in_opt IInspectable *newContent) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnContentTemplateChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *oldContentTemplate,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *newContentTemplate) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnContentTemplateSelectorChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *oldContentTemplateSelector,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *newContentTemplateSelector) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentControlOverrides = __uuidof(IContentControlOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnContentChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *oldContent,
            /* [in] */ __RPC__in_opt IInspectable *newContent);
        
        HRESULT ( STDMETHODCALLTYPE *OnContentTemplateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *oldContentTemplate,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *newContentTemplate);
        
        HRESULT ( STDMETHODCALLTYPE *OnContentTemplateSelectorChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *oldContentTemplateSelector,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *newContentTemplateSelector);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_OnContentChanged(This,oldContent,newContent)	\
    ( (This)->lpVtbl -> OnContentChanged(This,oldContent,newContent) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_OnContentTemplateChanged(This,oldContentTemplate,newContentTemplate)	\
    ( (This)->lpVtbl -> OnContentTemplateChanged(This,oldContentTemplate,newContentTemplate) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_OnContentTemplateSelectorChanged(This,oldContentTemplateSelector,newContentTemplateSelector)	\
    ( (This)->lpVtbl -> OnContentTemplateSelectorChanged(This,oldContentTemplateSelector,newContentTemplateSelector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0227 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControlStatics[] = L"Windows.UI.Xaml.Controls.IContentControlStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0227 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0227_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0227_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentControlStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("116982A4-5CF5-4C05-A53F-15E4876C85EC")
                        IContentControlStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateSelectorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentControlStatics = __uuidof(IContentControlStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelectorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_get_ContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_get_ContentTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_get_ContentTemplateSelectorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateSelectorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_get_ContentTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTransitionsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0228 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControlFactory[] = L"Windows.UI.Xaml.Controls.IContentControlFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0228 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0228_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0228_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentControlFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AB017B19-196E-4ED5-A27F-55C58FB1673F")
                        IContentControlFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IContentControl **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentControlFactory = __uuidof(IContentControlFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControlFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0229 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentControl2[] = L"Windows.UI.Xaml.Controls.IContentControl2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0229 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0229_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0229_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentControl2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("652C208C-8CCF-4399-BD3E-5A015AA1BC03")
                        IContentControl2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateRoot( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentControl2 = __uuidof(IContentControl2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateRoot )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_get_ContentTemplateRoot(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateRoot(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentControl2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0230 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter[] = L"Windows.UI.Xaml.Controls.IContentPresenter";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0230 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0230_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0230_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentPresenter */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("79FDE5B4-CD37-491C-8845-DAF472DEFFF6")
                        IContentPresenter : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Content( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Content( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTemplateSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamily( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFamily( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IFontFamily *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeight( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontWeight *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontWeight( 
                                /* [in] */ ABI::Windows::UI::Text::FontWeight value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyle( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStyle *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStyle( 
                                /* [in] */ ABI::Windows::UI::Text::FontStyle value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStretch( 
                                /* [in] */ ABI::Windows::UI::Text::FontStretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacing( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharacterSpacing( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Foreground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Foreground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentPresenter = __uuidof(IContentPresenter);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontWeight value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStyle value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_Content(This,value)	\
    ( (This)->lpVtbl -> get_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_Content(This,value)	\
    ( (This)->lpVtbl -> put_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_ContentTemplate(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_ContentTemplate(This,value)	\
    ( (This)->lpVtbl -> put_ContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_ContentTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_ContentTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> put_ContentTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_ContentTransitions(This,value)	\
    ( (This)->lpVtbl -> get_ContentTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_ContentTransitions(This,value)	\
    ( (This)->lpVtbl -> put_ContentTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_FontSize(This,value)	\
    ( (This)->lpVtbl -> get_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_FontSize(This,value)	\
    ( (This)->lpVtbl -> put_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_FontFamily(This,value)	\
    ( (This)->lpVtbl -> get_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_FontFamily(This,value)	\
    ( (This)->lpVtbl -> put_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_FontWeight(This,value)	\
    ( (This)->lpVtbl -> get_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_FontWeight(This,value)	\
    ( (This)->lpVtbl -> put_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_FontStyle(This,value)	\
    ( (This)->lpVtbl -> get_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_FontStyle(This,value)	\
    ( (This)->lpVtbl -> put_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_FontStretch(This,value)	\
    ( (This)->lpVtbl -> get_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_FontStretch(This,value)	\
    ( (This)->lpVtbl -> put_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> put_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_get_Foreground(This,value)	\
    ( (This)->lpVtbl -> get_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_put_Foreground(This,value)	\
    ( (This)->lpVtbl -> put_Foreground(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0231 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterOverrides[] = L"Windows.UI.Xaml.Controls.IContentPresenterOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0231 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0231_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0231_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentPresenterOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A76339ED-32FF-438B-AAD5-1D68FAE93426")
                        IContentPresenterOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnContentTemplateChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *oldContentTemplate,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *newContentTemplate) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnContentTemplateSelectorChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *oldContentTemplateSelector,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *newContentTemplateSelector) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentPresenterOverrides = __uuidof(IContentPresenterOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnContentTemplateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *oldContentTemplate,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *newContentTemplate);
        
        HRESULT ( STDMETHODCALLTYPE *OnContentTemplateSelectorChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *oldContentTemplateSelector,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *newContentTemplateSelector);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_OnContentTemplateChanged(This,oldContentTemplate,newContentTemplate)	\
    ( (This)->lpVtbl -> OnContentTemplateChanged(This,oldContentTemplate,newContentTemplate) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_OnContentTemplateSelectorChanged(This,oldContentTemplateSelector,newContentTemplateSelector)	\
    ( (This)->lpVtbl -> OnContentTemplateSelectorChanged(This,oldContentTemplateSelector,newContentTemplateSelector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0232 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0232 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0232_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0232_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentPresenterStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("18C2893B-DA2E-4426-B85A-2C7E2171BEDF")
                        IContentPresenterStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateSelectorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamilyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForegroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentPresenterStatics = __uuidof(IContentPresenterStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateSelectorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_ContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_ContentTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_ContentTemplateSelectorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateSelectorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_ContentTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTransitionsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_FontSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_FontFamilyProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontFamilyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_FontWeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontWeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_FontStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStyleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_FontStretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_CharacterSpacingProperty(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_get_ForegroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_ForegroundProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0233 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterFactory[] = L"Windows.UI.Xaml.Controls.IContentPresenterFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0233 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0233_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0233_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentPresenterFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3339D4F7-4815-44C4-9F76-68C83880EF10")
                        IContentPresenterFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IContentPresenter **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentPresenterFactory = __uuidof(IContentPresenterFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0234 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenter2[] = L"Windows.UI.Xaml.Controls.IContentPresenter2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0234 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0234_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0234_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentPresenter2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5138E958-335D-4210-8BBB-0AA2B4B5C29E")
                        IContentPresenter2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpticalMarginAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::OpticalMarginAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpticalMarginAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::OpticalMarginAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextLineBounds( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextLineBounds *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextLineBounds( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextLineBounds value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentPresenter2 = __uuidof(IContentPresenter2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpticalMarginAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextLineBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextLineBounds *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextLineBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_get_OpticalMarginAlignment(This,value)	\
    ( (This)->lpVtbl -> get_OpticalMarginAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_put_OpticalMarginAlignment(This,value)	\
    ( (This)->lpVtbl -> put_OpticalMarginAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_get_TextLineBounds(This,value)	\
    ( (This)->lpVtbl -> get_TextLineBounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_put_TextLineBounds(This,value)	\
    ( (This)->lpVtbl -> put_TextLineBounds(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenter2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0235 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContentPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IContentPresenterStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0235 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0235_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0235_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContentPresenterStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C7D89DD9-06E6-46BE-A8A0-9C117D3024A3")
                        IContentPresenterStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpticalMarginAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextLineBoundsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContentPresenterStatics2 = __uuidof(IContentPresenterStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextLineBoundsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_get_OpticalMarginAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpticalMarginAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_get_TextLineBoundsProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextLineBoundsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContentPresenterStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0236 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IContextMenuEventArgs[] = L"Windows.UI.Xaml.Controls.IContextMenuEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0236 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0236_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0236_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IContextMenuEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1F7DF263-C14B-4528-B6F0-637999D83CC6")
                        IContextMenuEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CursorLeft( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CursorTop( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IContextMenuEventArgs = __uuidof(IContextMenuEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CursorLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CursorTop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_get_CursorLeft(This,value)	\
    ( (This)->lpVtbl -> get_CursorLeft(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_get_CursorTop(This,value)	\
    ( (This)->lpVtbl -> get_CursorTop(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0237 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelector[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelector";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0237 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0237_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0237_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A907D496-46A0-4CD7-8DBE-F9A581DF60B1")
                        IDataTemplateSelector : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectTemplate( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDataTemplateSelector = __uuidof(IDataTemplateSelector);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_SelectTemplate(This,item,container,returnValue)	\
    ( (This)->lpVtbl -> SelectTemplate(This,item,container,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0238 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelectorOverrides[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0238 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0238_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0238_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDataTemplateSelectorOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("2D162925-5966-4BFA-8638-4D345689F6CF")
                        IDataTemplateSelectorOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectTemplateCore( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDataTemplateSelectorOverrides = __uuidof(IDataTemplateSelectorOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectTemplateCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_SelectTemplateCore(This,item,container,returnValue)	\
    ( (This)->lpVtbl -> SelectTemplateCore(This,item,container,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0239 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelectorFactory[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0239 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0239_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0239_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDataTemplateSelectorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("511BAAD0-210A-457D-9521-433D2B11B7D2")
                        IDataTemplateSelectorFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDataTemplateSelectorFactory = __uuidof(IDataTemplateSelectorFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0240 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelector2[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelector2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0240 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0240_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0240_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3792BC47-8C4B-4257-A5AE-CC3F8ED786EB")
                        IDataTemplateSelector2 : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectTemplateForItem( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDataTemplateSelector2 = __uuidof(IDataTemplateSelector2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectTemplateForItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2 * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_SelectTemplateForItem(This,item,returnValue)	\
    ( (This)->lpVtbl -> SelectTemplateForItem(This,item,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0241 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDataTemplateSelectorOverrides2[] = L"Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0241 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0241_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0241_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDataTemplateSelectorOverrides2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6C3FB5FC-8E84-4C91-AC15-04A1D885500F")
                        IDataTemplateSelectorOverrides2 : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectTemplateForItemCore( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDataTemplateSelectorOverrides2 = __uuidof(IDataTemplateSelectorOverrides2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectTemplateForItemCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2 * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_SelectTemplateForItemCore(This,item,returnValue)	\
    ( (This)->lpVtbl -> SelectTemplateForItemCore(This,item,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelectorOverrides2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0242 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePicker[] = L"Windows.UI.Xaml.Controls.IDatePicker";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0242 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0242_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0242_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDatePicker */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("06DA3946-08B8-4103-8B8A-093EFD6A7657")
                        IDatePicker : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CalendarIdentifier( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CalendarIdentifier( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Date( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::DateTime *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Date( 
                                /* [in] */ ABI::Windows::Foundation::DateTime value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DayVisible( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DayVisible( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MonthVisible( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MonthVisible( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_YearVisible( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_YearVisible( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DayFormat( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DayFormat( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MonthFormat( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MonthFormat( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_YearFormat( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_YearFormat( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinYear( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::DateTime *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinYear( 
                                /* [in] */ ABI::Windows::Foundation::DateTime value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxYear( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::DateTime *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxYear( 
                                /* [in] */ ABI::Windows::Foundation::DateTime value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_DateChanged( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_DateChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDatePicker = __uuidof(IDatePicker);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifier )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CalendarIdentifier )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Date )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CDateTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Date )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CDateTime value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DayVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DayVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MonthVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MonthVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_YearVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_YearVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DayFormat )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DayFormat )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MonthFormat )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MonthFormat )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_YearFormat )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_YearFormat )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinYear )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CDateTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinYear )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CDateTime value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxYear )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CDateTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxYear )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CDateTime value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        HRESULT ( STDMETHODCALLTYPE *add_DateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CDatePickerValueChangedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_CalendarIdentifier(This,value)	\
    ( (This)->lpVtbl -> get_CalendarIdentifier(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_CalendarIdentifier(This,value)	\
    ( (This)->lpVtbl -> put_CalendarIdentifier(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_Date(This,value)	\
    ( (This)->lpVtbl -> get_Date(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_Date(This,value)	\
    ( (This)->lpVtbl -> put_Date(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_DayVisible(This,value)	\
    ( (This)->lpVtbl -> get_DayVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_DayVisible(This,value)	\
    ( (This)->lpVtbl -> put_DayVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_MonthVisible(This,value)	\
    ( (This)->lpVtbl -> get_MonthVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_MonthVisible(This,value)	\
    ( (This)->lpVtbl -> put_MonthVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_YearVisible(This,value)	\
    ( (This)->lpVtbl -> get_YearVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_YearVisible(This,value)	\
    ( (This)->lpVtbl -> put_YearVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_DayFormat(This,value)	\
    ( (This)->lpVtbl -> get_DayFormat(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_DayFormat(This,value)	\
    ( (This)->lpVtbl -> put_DayFormat(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_MonthFormat(This,value)	\
    ( (This)->lpVtbl -> get_MonthFormat(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_MonthFormat(This,value)	\
    ( (This)->lpVtbl -> put_MonthFormat(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_YearFormat(This,value)	\
    ( (This)->lpVtbl -> get_YearFormat(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_YearFormat(This,value)	\
    ( (This)->lpVtbl -> put_YearFormat(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_MinYear(This,value)	\
    ( (This)->lpVtbl -> get_MinYear(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_MinYear(This,value)	\
    ( (This)->lpVtbl -> put_MinYear(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_MaxYear(This,value)	\
    ( (This)->lpVtbl -> get_MaxYear(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_MaxYear(This,value)	\
    ( (This)->lpVtbl -> put_MaxYear(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_add_DateChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_DateChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_remove_DateChanged(This,token)	\
    ( (This)->lpVtbl -> remove_DateChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0243 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerStatics[] = L"Windows.UI.Xaml.Controls.IDatePickerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0243 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0243_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0243_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDatePickerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("182E7C69-2116-4C67-B513-713364831D79")
                        IDatePickerStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CalendarIdentifierProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DayVisibleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MonthVisibleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_YearVisibleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DayFormatProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MonthFormatProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_YearFormatProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinYearProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxYearProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDatePickerStatics = __uuidof(IDatePickerStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CalendarIdentifierProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DayVisibleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MonthVisibleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_YearVisibleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DayFormatProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MonthFormatProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_YearFormatProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinYearProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxYearProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_CalendarIdentifierProperty(This,value)	\
    ( (This)->lpVtbl -> get_CalendarIdentifierProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_DateProperty(This,value)	\
    ( (This)->lpVtbl -> get_DateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_DayVisibleProperty(This,value)	\
    ( (This)->lpVtbl -> get_DayVisibleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_MonthVisibleProperty(This,value)	\
    ( (This)->lpVtbl -> get_MonthVisibleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_YearVisibleProperty(This,value)	\
    ( (This)->lpVtbl -> get_YearVisibleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_DayFormatProperty(This,value)	\
    ( (This)->lpVtbl -> get_DayFormatProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_MonthFormatProperty(This,value)	\
    ( (This)->lpVtbl -> get_MonthFormatProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_YearFormatProperty(This,value)	\
    ( (This)->lpVtbl -> get_YearFormatProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_MinYearProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinYearProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_MaxYearProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxYearProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0244 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerFactory[] = L"Windows.UI.Xaml.Controls.IDatePickerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0244 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0244_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0244_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDatePickerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("EEC3CA84-9896-4A7D-BB35-6FB21EAECA11")
                        IDatePickerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IDatePicker **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDatePickerFactory = __uuidof(IDatePickerFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0245 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDatePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IDatePickerValueChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0245 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0245_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0245_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDatePickerValueChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1AE661B2-B1B4-4273-96E0-19DAFF187446")
                        IDatePickerValueChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OldDate( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::DateTime *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewDate( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::DateTime *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDatePickerValueChangedEventArgs = __uuidof(IDatePickerValueChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OldDate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CDateTime *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewDate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CDateTime *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_get_OldDate(This,value)	\
    ( (This)->lpVtbl -> get_OldDate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_get_NewDate(This,value)	\
    ( (This)->lpVtbl -> get_NewDate(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDatePickerValueChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0246 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IDragItemsStartingEventArgs[] = L"Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0246 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0246_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0246_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IDragItemsStartingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("71CF215C-DAED-4783-AA11-DC574D2713E9")
                        IDragItemsStartingEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cancel( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Cancel( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Items( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::DataTransfer::IDataPackage **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IDragItemsStartingEventArgs = __uuidof(IDragItemsStartingEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Items )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_get_Cancel(This,value)	\
    ( (This)->lpVtbl -> get_Cancel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_put_Cancel(This,value)	\
    ( (This)->lpVtbl -> put_Cancel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_get_Items(This,value)	\
    ( (This)->lpVtbl -> get_Items(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_get_Data(This,value)	\
    ( (This)->lpVtbl -> get_Data(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0247 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipView[] = L"Windows.UI.Xaml.Controls.IFlipView";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0247 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0247_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0247_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlipView */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A1582F68-3D7D-4D3B-B71D-488EED1E3493")
                        IFlipView : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IFlipView = __uuidof(IFlipView);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0248 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewFactory[] = L"Windows.UI.Xaml.Controls.IFlipViewFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0248 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0248_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0248_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlipViewFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F1DEA9BE-9AE8-4D4B-AB43-16D31E05F4F3")
                        IFlipViewFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFlipView **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlipViewFactory = __uuidof(IFlipViewFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0249 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipView2[] = L"Windows.UI.Xaml.Controls.IFlipView2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0249 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0249_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0249_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlipView2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C4FEA4FD-7AF3-4952-9FD9-9E0987FC4F29")
                        IFlipView2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UseTouchAnimationsForAllNavigation( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UseTouchAnimationsForAllNavigation( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlipView2 = __uuidof(IFlipView2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTouchAnimationsForAllNavigation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTouchAnimationsForAllNavigation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2 * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_get_UseTouchAnimationsForAllNavigation(This,value)	\
    ( (This)->lpVtbl -> get_UseTouchAnimationsForAllNavigation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_put_UseTouchAnimationsForAllNavigation(This,value)	\
    ( (This)->lpVtbl -> put_UseTouchAnimationsForAllNavigation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0250 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewStatics2[] = L"Windows.UI.Xaml.Controls.IFlipViewStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0250 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0250_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0250_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlipViewStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("70E3D93F-4308-4BA2-BBCE-E2CB0ED34476")
                        IFlipViewStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UseTouchAnimationsForAllNavigationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlipViewStatics2 = __uuidof(IFlipViewStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTouchAnimationsForAllNavigationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_get_UseTouchAnimationsForAllNavigationProperty(This,value)	\
    ( (This)->lpVtbl -> get_UseTouchAnimationsForAllNavigationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0251 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewItem[] = L"Windows.UI.Xaml.Controls.IFlipViewItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0251 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0251_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0251_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlipViewItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("56196565-CE2B-4BDA-A36B-82A2B8B0D4C0")
                        IFlipViewItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IFlipViewItem = __uuidof(IFlipViewItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0252 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlipViewItemFactory[] = L"Windows.UI.Xaml.Controls.IFlipViewItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0252 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0252_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0252_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlipViewItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F21D91FE-22A0-4412-A853-9D6A6E8F2AAF")
                        IFlipViewItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFlipViewItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlipViewItemFactory = __uuidof(IFlipViewItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0253 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGrid[] = L"Windows.UI.Xaml.Controls.IGrid";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0253 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0253_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0253_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGrid */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGrid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FD104460-2E15-4BA3-8B8F-FA693A4161E9")
                        IGrid : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RowDefinitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColumnDefinitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGrid = __uuidof(IGrid);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RowDefinitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CRowDefinition **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnDefinitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CColumnDefinition **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_get_RowDefinitions(This,value)	\
    ( (This)->lpVtbl -> get_RowDefinitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_get_ColumnDefinitions(This,value)	\
    ( (This)->lpVtbl -> get_ColumnDefinitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGrid_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0254 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridStatics[] = L"Windows.UI.Xaml.Controls.IGridStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0254 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0254_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0254_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("64FE2E9F-F951-42B6-A9CE-BB179AF11595")
                        IGridStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RowProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetRow( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetRow( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColumnProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetColumn( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetColumn( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RowSpanProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetRowSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetRowSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColumnSpanProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetColumnSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetColumnSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGridStatics = __uuidof(IGridStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RowProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetRow )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetRow )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetColumn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetColumn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RowSpanProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetRowSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetRowSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnSpanProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetColumnSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetColumnSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [in] */ INT32 value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_get_RowProperty(This,value)	\
    ( (This)->lpVtbl -> get_RowProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetRow(This,element,value)	\
    ( (This)->lpVtbl -> GetRow(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_SetRow(This,element,value)	\
    ( (This)->lpVtbl -> SetRow(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_get_ColumnProperty(This,value)	\
    ( (This)->lpVtbl -> get_ColumnProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetColumn(This,element,value)	\
    ( (This)->lpVtbl -> GetColumn(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_SetColumn(This,element,value)	\
    ( (This)->lpVtbl -> SetColumn(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_get_RowSpanProperty(This,value)	\
    ( (This)->lpVtbl -> get_RowSpanProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetRowSpan(This,element,value)	\
    ( (This)->lpVtbl -> GetRowSpan(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_SetRowSpan(This,element,value)	\
    ( (This)->lpVtbl -> SetRowSpan(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_get_ColumnSpanProperty(This,value)	\
    ( (This)->lpVtbl -> get_ColumnSpanProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_GetColumnSpan(This,element,value)	\
    ( (This)->lpVtbl -> GetColumnSpan(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_SetColumnSpan(This,element,value)	\
    ( (This)->lpVtbl -> SetColumnSpan(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0255 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridFactory[] = L"Windows.UI.Xaml.Controls.IGridFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0255 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0255_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0255_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AE814041-C531-43B4-BF99-12F506F7B01C")
                        IGridFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGrid **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGridFactory = __uuidof(IGridFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGrid **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0256 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridView[] = L"Windows.UI.Xaml.Controls.IGridView";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0256 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0256_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0256_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridView */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("026AE934-B67E-4D80-8F72-8AA64B4D827B")
                        IGridView : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IGridView = __uuidof(IGridView);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0257 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewFactory[] = L"Windows.UI.Xaml.Controls.IGridViewFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0257 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0257_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0257_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridViewFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D9BCCA89-09F9-4C6E-A83E-F199146F0E7D")
                        IGridViewFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGridView **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGridViewFactory = __uuidof(IGridViewFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0258 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewItem[] = L"Windows.UI.Xaml.Controls.IGridViewItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0258 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0258_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0258_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridViewItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7D9901F1-E7C1-4E83-B470-C9D6D7BDA9F5")
                        IGridViewItem : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IGridViewItemTemplateSettings **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGridViewItem = __uuidof(IGridViewItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIGridViewItemTemplateSettings **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0259 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewItemFactory[] = L"Windows.UI.Xaml.Controls.IGridViewItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0259 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0259_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0259_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridViewItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("229B00AF-3FA6-43E9-979D-07EA0D6280DC")
                        IGridViewItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGridViewItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGridViewItemFactory = __uuidof(IGridViewItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0260 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupItem[] = L"Windows.UI.Xaml.Controls.IGroupItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0260 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0260_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0260_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4AE8D5D1-7228-4A16-A61F-88C0E8F45C76")
                        IGroupItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IGroupItem = __uuidof(IGroupItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0261 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupItemFactory[] = L"Windows.UI.Xaml.Controls.IGroupItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0261 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0261_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0261_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D9A1D53E-B1E0-4319-9808-7A9E887E13B0")
                        IGroupItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupItemFactory = __uuidof(IGroupItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0262 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyle[] = L"Windows.UI.Xaml.Controls.IGroupStyle";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0262 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0262_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0262_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupStyle */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("71CA300B-B89E-4184-B0DF-A9E95447DE8D")
                        IGroupStyle : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Panel( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemsPanelTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Panel( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IItemsPanelTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContainerStyle( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContainerStyle( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContainerStyleSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContainerStyleSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplateSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HidesIfEmpty( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HidesIfEmpty( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupStyle = __uuidof(IGroupStyle);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Panel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Panel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainerStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContainerStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainerStyleSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContainerStyleSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HidesIfEmpty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HidesIfEmpty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_get_Panel(This,value)	\
    ( (This)->lpVtbl -> get_Panel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_put_Panel(This,value)	\
    ( (This)->lpVtbl -> put_Panel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_get_ContainerStyle(This,value)	\
    ( (This)->lpVtbl -> get_ContainerStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_put_ContainerStyle(This,value)	\
    ( (This)->lpVtbl -> put_ContainerStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_get_ContainerStyleSelector(This,value)	\
    ( (This)->lpVtbl -> get_ContainerStyleSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_put_ContainerStyleSelector(This,value)	\
    ( (This)->lpVtbl -> put_ContainerStyleSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_get_HeaderTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_put_HeaderTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_get_HidesIfEmpty(This,value)	\
    ( (This)->lpVtbl -> get_HidesIfEmpty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_put_HidesIfEmpty(This,value)	\
    ( (This)->lpVtbl -> put_HidesIfEmpty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0263 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleFactory[] = L"Windows.UI.Xaml.Controls.IGroupStyleFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0263 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0263_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0263_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupStyleFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("56FF664F-E2D7-4F49-803D-C727CDF9372D")
                        IGroupStyleFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupStyleFactory = __uuidof(IGroupStyleFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0264 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyle2[] = L"Windows.UI.Xaml.Controls.IGroupStyle2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0264 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0264_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0264_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupStyle2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("69F90679-3A11-4FE7-B4DF-2A0139D4018B")
                        IGroupStyle2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderContainerStyle( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderContainerStyle( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupStyle2 = __uuidof(IGroupStyle2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderContainerStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderContainerStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_get_HeaderContainerStyle(This,value)	\
    ( (This)->lpVtbl -> get_HeaderContainerStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_put_HeaderContainerStyle(This,value)	\
    ( (This)->lpVtbl -> put_HeaderContainerStyle(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0265 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleSelector[] = L"Windows.UI.Xaml.Controls.IGroupStyleSelector";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0265 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0265_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0265_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupStyleSelector */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6DDA119E-9A74-478F-A339-5BB52DE6C51E")
                        IGroupStyleSelector : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectGroupStyle( 
                                /* [in] */ __RPC__in_opt IInspectable *group,
                                /* [in] */ UINT32 level,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupStyleSelector = __uuidof(IGroupStyleSelector);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectGroupStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector * This,
            /* [in] */ __RPC__in_opt IInspectable *group,
            /* [in] */ UINT32 level,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_SelectGroupStyle(This,group,level,returnValue)	\
    ( (This)->lpVtbl -> SelectGroupStyle(This,group,level,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0266 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleSelectorOverrides[] = L"Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0266 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0266_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0266_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupStyleSelectorOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F691CAB2-77AD-4D3D-A51C-8EF9C3836456")
                        IGroupStyleSelectorOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectGroupStyleCore( 
                                /* [in] */ __RPC__in_opt IInspectable *group,
                                /* [in] */ UINT32 level,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyle **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupStyleSelectorOverrides = __uuidof(IGroupStyleSelectorOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectGroupStyleCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *group,
            /* [in] */ UINT32 level,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyle **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_SelectGroupStyleCore(This,group,level,returnValue)	\
    ( (This)->lpVtbl -> SelectGroupStyleCore(This,group,level,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0267 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGroupStyleSelectorFactory[] = L"Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0267 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0267_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0267_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGroupStyleSelectorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BF570D33-B2F6-481F-A450-C80C291FB22D")
                        IGroupStyleSelectorFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyleSelector **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGroupStyleSelectorFactory = __uuidof(IGroupStyleSelectorFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelectorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0268 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHyperlinkButton[] = L"Windows.UI.Xaml.Controls.IHyperlinkButton";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0268 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0268_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0268_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHyperlinkButton */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("CCEBACA3-3B5C-4F4C-9BFD-86887BC79772")
                        IHyperlinkButton : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NavigateUri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_NavigateUri( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHyperlinkButton = __uuidof(IHyperlinkButton);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigateUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NavigateUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_get_NavigateUri(This,value)	\
    ( (This)->lpVtbl -> get_NavigateUri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_put_NavigateUri(This,value)	\
    ( (This)->lpVtbl -> put_NavigateUri(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0269 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHyperlinkButtonStatics[] = L"Windows.UI.Xaml.Controls.IHyperlinkButtonStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0269 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0269_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0269_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHyperlinkButtonStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FBAEB5C7-CDB7-4263-B7D6-3C0D2904ED98")
                        IHyperlinkButtonStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NavigateUriProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHyperlinkButtonStatics = __uuidof(IHyperlinkButtonStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigateUriProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_get_NavigateUriProperty(This,value)	\
    ( (This)->lpVtbl -> get_NavigateUriProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0270 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHyperlinkButtonFactory[] = L"Windows.UI.Xaml.Controls.IHyperlinkButtonFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0270 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0270_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0270_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHyperlinkButtonFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("43521BAD-4E97-4DA9-A64D-935DFD8CEDF2")
                        IHyperlinkButtonFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHyperlinkButton **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHyperlinkButtonFactory = __uuidof(IHyperlinkButtonFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButtonFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0271 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemContainerMapping[] = L"Windows.UI.Xaml.Controls.IItemContainerMapping";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0271 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0271_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0271_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemContainerMapping */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("53C9F23A-F25D-446A-99B8-C7AEB839050F")
                        IItemContainerMapping : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ItemFromContainer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ContainerFromItem( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE IndexFromContainer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ContainerFromIndex( 
                                /* [in] */ INT32 index,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemContainerMapping = __uuidof(IItemContainerMapping);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ItemFromContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ContainerFromItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IndexFromContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ContainerFromIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping * This,
            /* [in] */ INT32 index,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMappingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_ItemFromContainer(This,container,returnValue)	\
    ( (This)->lpVtbl -> ItemFromContainer(This,container,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_ContainerFromItem(This,item,returnValue)	\
    ( (This)->lpVtbl -> ContainerFromItem(This,item,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_IndexFromContainer(This,container,returnValue)	\
    ( (This)->lpVtbl -> IndexFromContainer(This,container,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_ContainerFromIndex(This,index,returnValue)	\
    ( (This)->lpVtbl -> ContainerFromIndex(This,index,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerMapping_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0272 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IImage[] = L"Windows.UI.Xaml.Controls.IImage";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0272 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0272_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0272_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IImage */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("495B7402-9AF3-4E50-AA90-03388F3086D2")
                        IImage : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IImageSource **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IImageSource *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stretch( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NineGrid( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_NineGrid( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlayToSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::PlayTo::IPlayToSource **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ImageFailed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IExceptionRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ImageFailed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ImageOpened( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ImageOpened( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IImage = __uuidof(IImage);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NineGrid )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NineGrid )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayToSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ImageFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ImageFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ImageOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ImageOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImage * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImage
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_put_Source(This,value)	\
    ( (This)->lpVtbl -> put_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_get_Stretch(This,value)	\
    ( (This)->lpVtbl -> get_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_put_Stretch(This,value)	\
    ( (This)->lpVtbl -> put_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_get_NineGrid(This,value)	\
    ( (This)->lpVtbl -> get_NineGrid(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_put_NineGrid(This,value)	\
    ( (This)->lpVtbl -> put_NineGrid(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_get_PlayToSource(This,value)	\
    ( (This)->lpVtbl -> get_PlayToSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_add_ImageFailed(This,value,token)	\
    ( (This)->lpVtbl -> add_ImageFailed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_remove_ImageFailed(This,token)	\
    ( (This)->lpVtbl -> remove_ImageFailed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_add_ImageOpened(This,value,token)	\
    ( (This)->lpVtbl -> add_ImageOpened(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImage_remove_ImageOpened(This,token)	\
    ( (This)->lpVtbl -> remove_ImageOpened(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIImage_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0273 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IImageStatics[] = L"Windows.UI.Xaml.Controls.IImageStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0273 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0273_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0273_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IImageStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("89903772-C336-43D1-9D51-C3BBD5D5D691")
                        IImageStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NineGridProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlayToSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IImageStatics = __uuidof(IImageStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NineGridProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayToSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_get_SourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_SourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_get_StretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_StretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_get_NineGridProperty(This,value)	\
    ( (This)->lpVtbl -> get_NineGridProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_get_PlayToSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlayToSourceProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIImageStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0274 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INavigate[] = L"Windows.UI.Xaml.Controls.INavigate";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0274 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0274_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0274_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::INavigate */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINavigate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BF2195A9-F4EA-4336-977C-F8FCF78B0D9E")
                        INavigate : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Navigate( 
                                /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName sourcePageType,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_INavigate = __uuidof(INavigate);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINavigateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_Navigate(This,sourcePageType,returnValue)	\
    ( (This)->lpVtbl -> Navigate(This,sourcePageType,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINavigate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0275 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomInformation[] = L"Windows.UI.Xaml.Controls.ISemanticZoomInformation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0275 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0275_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0275_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISemanticZoomInformation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A76A3B63-229B-4DC5-AA11-9D922FBF8A98")
                        ISemanticZoomInformation : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SemanticZoomOwner( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoom **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SemanticZoomOwner( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoom *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActiveView( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsActiveView( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomedInView( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsZoomedInView( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE InitializeViewChange( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CompleteViewChange( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE MakeVisible( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *item) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE StartViewChangeFrom( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *source,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *destination) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE StartViewChangeTo( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *source,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *destination) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CompleteViewChangeFrom( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *source,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *destination) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CompleteViewChangeTo( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *source,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *destination) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISemanticZoomInformation = __uuidof(ISemanticZoomInformation);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SemanticZoomOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SemanticZoomOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActiveView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsActiveView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomedInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeViewChange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This);
        
        HRESULT ( STDMETHODCALLTYPE *CompleteViewChange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This);
        
        HRESULT ( STDMETHODCALLTYPE *MakeVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *item);
        
        HRESULT ( STDMETHODCALLTYPE *StartViewChangeFrom )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *source,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *destination);
        
        HRESULT ( STDMETHODCALLTYPE *StartViewChangeTo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *source,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *destination);
        
        HRESULT ( STDMETHODCALLTYPE *CompleteViewChangeFrom )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *source,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *destination);
        
        HRESULT ( STDMETHODCALLTYPE *CompleteViewChangeTo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *source,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *destination);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_get_SemanticZoomOwner(This,value)	\
    ( (This)->lpVtbl -> get_SemanticZoomOwner(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_put_SemanticZoomOwner(This,value)	\
    ( (This)->lpVtbl -> put_SemanticZoomOwner(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_get_IsActiveView(This,value)	\
    ( (This)->lpVtbl -> get_IsActiveView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_put_IsActiveView(This,value)	\
    ( (This)->lpVtbl -> put_IsActiveView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_get_IsZoomedInView(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomedInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_put_IsZoomedInView(This,value)	\
    ( (This)->lpVtbl -> put_IsZoomedInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_InitializeViewChange(This)	\
    ( (This)->lpVtbl -> InitializeViewChange(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_CompleteViewChange(This)	\
    ( (This)->lpVtbl -> CompleteViewChange(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_MakeVisible(This,item)	\
    ( (This)->lpVtbl -> MakeVisible(This,item) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_StartViewChangeFrom(This,source,destination)	\
    ( (This)->lpVtbl -> StartViewChangeFrom(This,source,destination) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_StartViewChangeTo(This,source,destination)	\
    ( (This)->lpVtbl -> StartViewChangeTo(This,source,destination) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_CompleteViewChangeFrom(This,source,destination)	\
    ( (This)->lpVtbl -> CompleteViewChangeFrom(This,source,destination) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_CompleteViewChangeTo(This,source,destination)	\
    ( (This)->lpVtbl -> CompleteViewChangeTo(This,source,destination) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0276 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemClickEventArgs[] = L"Windows.UI.Xaml.Controls.IItemClickEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0276 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0276_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0276_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemClickEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("9C314242-F29A-494D-A3A5-D4C7B2A46852")
                        IItemClickEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClickedItem( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemClickEventArgs = __uuidof(IItemClickEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClickedItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_get_ClickedItem(This,value)	\
    ( (This)->lpVtbl -> get_ClickedItem(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0277 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemContainerGenerator[] = L"Windows.UI.Xaml.Controls.IItemContainerGenerator";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0277 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0277_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0277_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemContainerGenerator */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("40765F00-83F0-4D7F-B1B8-F19DE4F1D5DA")
                        IItemContainerGenerator : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE add_ItemsChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IItemsChangedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ItemsChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ItemFromContainer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ContainerFromItem( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE IndexFromContainer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ContainerFromIndex( 
                                /* [in] */ INT32 index,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetItemContainerGeneratorForPanel( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IPanel *panel,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemContainerGenerator **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE StartAt( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GeneratorPosition position,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GeneratorDirection direction,
                                /* [in] */ boolean allowStartAtRealizedItem) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GenerateNext( 
                                /* [out] */ __RPC__out boolean *isNewlyRealized,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE PrepareItemContainer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Remove( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GeneratorPosition position,
                                /* [in] */ INT32 count) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GeneratorPositionFromIndex( 
                                /* [in] */ INT32 itemIndex,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::GeneratorPosition *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE IndexFromGeneratorPosition( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GeneratorPosition position,
                                /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Recycle( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GeneratorPosition position,
                                /* [in] */ INT32 count) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemContainerGenerator = __uuidof(IItemContainerGenerator);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_ItemsChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ItemsChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ItemFromContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ContainerFromItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IndexFromContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ContainerFromIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ INT32 index,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemContainerGeneratorForPanel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel *panel,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *StartAt )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorDirection direction,
            /* [in] */ boolean allowStartAtRealizedItem);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GenerateNext )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [out] */ __RPC__out boolean *isNewlyRealized,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *PrepareItemContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
            /* [in] */ INT32 count);
        
        HRESULT ( STDMETHODCALLTYPE *GeneratorPositionFromIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ INT32 itemIndex,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IndexFromGeneratorPosition )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Recycle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGeneratorPosition position,
            /* [in] */ INT32 count);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGeneratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_add_ItemsChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_ItemsChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_remove_ItemsChanged(This,token)	\
    ( (This)->lpVtbl -> remove_ItemsChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_ItemFromContainer(This,container,returnValue)	\
    ( (This)->lpVtbl -> ItemFromContainer(This,container,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_ContainerFromItem(This,item,returnValue)	\
    ( (This)->lpVtbl -> ContainerFromItem(This,item,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_IndexFromContainer(This,container,returnValue)	\
    ( (This)->lpVtbl -> IndexFromContainer(This,container,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_ContainerFromIndex(This,index,returnValue)	\
    ( (This)->lpVtbl -> ContainerFromIndex(This,index,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_GetItemContainerGeneratorForPanel(This,panel,returnValue)	\
    ( (This)->lpVtbl -> GetItemContainerGeneratorForPanel(This,panel,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_StartAt(This,position,direction,allowStartAtRealizedItem)	\
    ( (This)->lpVtbl -> StartAt(This,position,direction,allowStartAtRealizedItem) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_GenerateNext(This,isNewlyRealized,returnValue)	\
    ( (This)->lpVtbl -> GenerateNext(This,isNewlyRealized,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_PrepareItemContainer(This,container)	\
    ( (This)->lpVtbl -> PrepareItemContainer(This,container) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_Remove(This,position,count)	\
    ( (This)->lpVtbl -> Remove(This,position,count) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_GeneratorPositionFromIndex(This,itemIndex,returnValue)	\
    ( (This)->lpVtbl -> GeneratorPositionFromIndex(This,itemIndex,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_IndexFromGeneratorPosition(This,position,returnValue)	\
    ( (This)->lpVtbl -> IndexFromGeneratorPosition(This,position,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_Recycle(This,position,count)	\
    ( (This)->lpVtbl -> Recycle(This,position,count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0278 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControl[] = L"Windows.UI.Xaml.Controls.IItemsControl";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0278 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0278_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0278_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsControl */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F4A91DD8-D979-4381-8652-BDA0342A765E")
                        IItemsControl : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsSource( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemsSource( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Items( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemTemplateSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemTemplateSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsPanel( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemsPanelTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemsPanel( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IItemsPanelTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DisplayMemberPath( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DisplayMemberPath( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerStyle( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemContainerStyle( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerStyleSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemContainerStyleSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerGenerator( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemContainerGenerator **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemContainerTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupStyle( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupStyleSelector( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGroupStyleSelector **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GroupStyleSelector( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyleSelector *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsGrouping( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsControl = __uuidof(IItemsControl);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemsSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Items )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemTemplateSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsPanel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemsPanel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayMemberPath )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayMemberPath )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemContainerStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemContainerStyleSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerGenerator )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemContainerTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CGroupStyle **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupStyleSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GroupStyleSelector )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGrouping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemsSource(This,value)	\
    ( (This)->lpVtbl -> get_ItemsSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemsSource(This,value)	\
    ( (This)->lpVtbl -> put_ItemsSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_Items(This,value)	\
    ( (This)->lpVtbl -> get_Items(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemTemplate(This,value)	\
    ( (This)->lpVtbl -> get_ItemTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemTemplate(This,value)	\
    ( (This)->lpVtbl -> put_ItemTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> get_ItemTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemTemplateSelector(This,value)	\
    ( (This)->lpVtbl -> put_ItemTemplateSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemsPanel(This,value)	\
    ( (This)->lpVtbl -> get_ItemsPanel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemsPanel(This,value)	\
    ( (This)->lpVtbl -> put_ItemsPanel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_DisplayMemberPath(This,value)	\
    ( (This)->lpVtbl -> get_DisplayMemberPath(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_DisplayMemberPath(This,value)	\
    ( (This)->lpVtbl -> put_DisplayMemberPath(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemContainerStyle(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemContainerStyle(This,value)	\
    ( (This)->lpVtbl -> put_ItemContainerStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemContainerStyleSelector(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerStyleSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemContainerStyleSelector(This,value)	\
    ( (This)->lpVtbl -> put_ItemContainerStyleSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemContainerGenerator(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerGenerator(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_ItemContainerTransitions(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_ItemContainerTransitions(This,value)	\
    ( (This)->lpVtbl -> put_ItemContainerTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_GroupStyle(This,value)	\
    ( (This)->lpVtbl -> get_GroupStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_GroupStyleSelector(This,value)	\
    ( (This)->lpVtbl -> get_GroupStyleSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_put_GroupStyleSelector(This,value)	\
    ( (This)->lpVtbl -> put_GroupStyleSelector(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_get_IsGrouping(This,value)	\
    ( (This)->lpVtbl -> get_IsGrouping(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0279 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControlOverrides[] = L"Windows.UI.Xaml.Controls.IItemsControlOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0279 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0279_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0279_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsControlOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C79BB41B-A084-4301-A496-72971F364ED1")
                        IItemsControlOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE IsItemItsOwnContainerOverride( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetContainerForItemOverride( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ClearContainerForItemOverride( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ __RPC__in_opt IInspectable *item) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE PrepareContainerForItemOverride( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ __RPC__in_opt IInspectable *item) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnItemsChanged( 
                                /* [in] */ __RPC__in_opt IInspectable *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnItemContainerStyleChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *oldItemContainerStyle,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *newItemContainerStyle) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnItemContainerStyleSelectorChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector *oldItemContainerStyleSelector,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector *newItemContainerStyleSelector) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnItemTemplateChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *oldItemTemplate,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *newItemTemplate) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnItemTemplateSelectorChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *oldItemTemplateSelector,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDataTemplateSelector *newItemTemplateSelector) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnGroupStyleSelectorChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyleSelector *oldGroupStyleSelector,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupStyleSelector *newGroupStyleSelector) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsControlOverrides = __uuidof(IItemsControlOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *IsItemItsOwnContainerOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainerForItemOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ClearContainerForItemOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __RPC__in_opt IInspectable *item);
        
        HRESULT ( STDMETHODCALLTYPE *PrepareContainerForItemOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __RPC__in_opt IInspectable *item);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemsChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemContainerStyleChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *oldItemContainerStyle,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *newItemContainerStyle);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemContainerStyleSelectorChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector *oldItemContainerStyleSelector,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector *newItemContainerStyleSelector);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemTemplateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *oldItemTemplate,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *newItemTemplate);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemTemplateSelectorChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *oldItemTemplateSelector,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDataTemplateSelector *newItemTemplateSelector);
        
        HRESULT ( STDMETHODCALLTYPE *OnGroupStyleSelectorChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector *oldGroupStyleSelector,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupStyleSelector *newGroupStyleSelector);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_IsItemItsOwnContainerOverride(This,item,returnValue)	\
    ( (This)->lpVtbl -> IsItemItsOwnContainerOverride(This,item,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_GetContainerForItemOverride(This,returnValue)	\
    ( (This)->lpVtbl -> GetContainerForItemOverride(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_ClearContainerForItemOverride(This,element,item)	\
    ( (This)->lpVtbl -> ClearContainerForItemOverride(This,element,item) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_PrepareContainerForItemOverride(This,element,item)	\
    ( (This)->lpVtbl -> PrepareContainerForItemOverride(This,element,item) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_OnItemsChanged(This,e)	\
    ( (This)->lpVtbl -> OnItemsChanged(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_OnItemContainerStyleChanged(This,oldItemContainerStyle,newItemContainerStyle)	\
    ( (This)->lpVtbl -> OnItemContainerStyleChanged(This,oldItemContainerStyle,newItemContainerStyle) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_OnItemContainerStyleSelectorChanged(This,oldItemContainerStyleSelector,newItemContainerStyleSelector)	\
    ( (This)->lpVtbl -> OnItemContainerStyleSelectorChanged(This,oldItemContainerStyleSelector,newItemContainerStyleSelector) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_OnItemTemplateChanged(This,oldItemTemplate,newItemTemplate)	\
    ( (This)->lpVtbl -> OnItemTemplateChanged(This,oldItemTemplate,newItemTemplate) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_OnItemTemplateSelectorChanged(This,oldItemTemplateSelector,newItemTemplateSelector)	\
    ( (This)->lpVtbl -> OnItemTemplateSelectorChanged(This,oldItemTemplateSelector,newItemTemplateSelector) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_OnGroupStyleSelectorChanged(This,oldGroupStyleSelector,newGroupStyleSelector)	\
    ( (This)->lpVtbl -> OnGroupStyleSelectorChanged(This,oldGroupStyleSelector,newGroupStyleSelector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0280 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControlStatics[] = L"Windows.UI.Xaml.Controls.IItemsControlStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0280 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0280_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0280_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsControlStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("37DABD89-DCFB-45B8-9AFE-874DF097905E")
                        IItemsControlStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemTemplateSelectorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsPanelProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DisplayMemberPathProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerStyleSelectorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupStyleSelectorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsGroupingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetItemsOwner( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemsControl **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ItemsControlFromItemContainer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemsControl **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsControlStatics = __uuidof(IItemsControlStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateSelectorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsPanelProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayMemberPathProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerStyleSelectorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupStyleSelectorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGroupingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemsOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ItemsControlFromItemContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemsSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemsSourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemTemplateSelectorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemTemplateSelectorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemsPanelProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemsPanelProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_DisplayMemberPathProperty(This,value)	\
    ( (This)->lpVtbl -> get_DisplayMemberPathProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemContainerStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerStyleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemContainerStyleSelectorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerStyleSelectorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_ItemContainerTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerTransitionsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_GroupStyleSelectorProperty(This,value)	\
    ( (This)->lpVtbl -> get_GroupStyleSelectorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_get_IsGroupingProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsGroupingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_GetItemsOwner(This,element,returnValue)	\
    ( (This)->lpVtbl -> GetItemsOwner(This,element,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_ItemsControlFromItemContainer(This,container,returnValue)	\
    ( (This)->lpVtbl -> ItemsControlFromItemContainer(This,container,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0281 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControlFactory[] = L"Windows.UI.Xaml.Controls.IItemsControlFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0281 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0281_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0281_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsControlFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F7BBC359-F8FD-471C-BCB2-2C74BE8EBF8C")
                        IItemsControlFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemsControl **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsControlFactory = __uuidof(IItemsControlFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControlFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0282 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsControl2[] = L"Windows.UI.Xaml.Controls.IItemsControl2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0282 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0282_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0282_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsControl2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("754C3266-0529-45E3-8748-BF747D158357")
                        IItemsControl2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsPanelRoot( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IPanel **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsControl2 = __uuidof(IItemsControl2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsPanelRoot )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_get_ItemsPanelRoot(This,value)	\
    ( (This)->lpVtbl -> get_ItemsPanelRoot(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0283 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPanelTemplate[] = L"Windows.UI.Xaml.Controls.IItemsPanelTemplate";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0283 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0283_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0283_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsPanelTemplate */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("14EAD768-34B2-4B97-BF3C-E8D73230A2AA")
                        IItemsPanelTemplate : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IItemsPanelTemplate = __uuidof(IItemsPanelTemplate);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPanelTemplate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0284 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenter[] = L"Windows.UI.Xaml.Controls.IItemsPresenter";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0284 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0284_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0284_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsPresenter */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C271569B-6DCA-4E2B-8E14-C55136B02A71")
                        IItemsPresenter : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsPresenter = __uuidof(IItemsPresenter);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_get_HeaderTransitions(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_put_HeaderTransitions(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0285 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenterStatics[] = L"Windows.UI.Xaml.Controls.IItemsPresenterStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0285 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0285_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0285_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsPresenterStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("18DE66CD-4A6C-4B2E-AA86-CB126C9A2920")
                        IItemsPresenterStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsPresenterStatics = __uuidof(IItemsPresenterStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_get_HeaderTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTransitionsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_get_PaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_PaddingProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0286 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenter2[] = L"Windows.UI.Xaml.Controls.IItemsPresenter2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0286 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0286_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0286_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsPresenter2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5C04AA33-1DF3-4731-A4C9-DA818378D63D")
                        IItemsPresenter2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Footer( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Footer( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FooterTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FooterTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsPresenter2 = __uuidof(IItemsPresenter2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Footer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Footer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FooterTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FooterTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2 * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_get_Footer(This,value)	\
    ( (This)->lpVtbl -> get_Footer(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_put_Footer(This,value)	\
    ( (This)->lpVtbl -> put_Footer(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_get_FooterTemplate(This,value)	\
    ( (This)->lpVtbl -> get_FooterTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_put_FooterTemplate(This,value)	\
    ( (This)->lpVtbl -> put_FooterTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_get_FooterTransitions(This,value)	\
    ( (This)->lpVtbl -> get_FooterTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_put_FooterTransitions(This,value)	\
    ( (This)->lpVtbl -> put_FooterTransitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenter2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0287 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsPresenterStatics2[] = L"Windows.UI.Xaml.Controls.IItemsPresenterStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0287 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0287_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0287_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsPresenterStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8971632E-7867-4D66-9630-29F1C5F7403F")
                        IItemsPresenterStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsPresenterStatics2 = __uuidof(IItemsPresenterStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_get_FooterProperty(This,value)	\
    ( (This)->lpVtbl -> get_FooterProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_get_FooterTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_FooterTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_get_FooterTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_FooterTransitionsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsPresenterStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0288 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBox[] = L"Windows.UI.Xaml.Controls.IListBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0288 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0288_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0288_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E9F3B9FF-8E91-4ECF-A707-C927F694F881")
                        IListBox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::SelectionMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::SelectionMode value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ScrollIntoView( 
                                /* [in] */ __RPC__in_opt IInspectable *item) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListBox = __uuidof(IListBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CSelectionMode value);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollIntoView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This,
            /* [in] */ __RPC__in_opt IInspectable *item);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_get_SelectedItems(This,value)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_get_SelectionMode(This,value)	\
    ( (This)->lpVtbl -> get_SelectionMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_put_SelectionMode(This,value)	\
    ( (This)->lpVtbl -> put_SelectionMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_ScrollIntoView(This,item)	\
    ( (This)->lpVtbl -> ScrollIntoView(This,item) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0289 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxStatics[] = L"Windows.UI.Xaml.Controls.IListBoxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0289 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0289_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0289_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListBoxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6D3F7F73-706A-4E53-A9AA-C9A53C9CDD70")
                        IListBoxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListBoxStatics = __uuidof(IListBoxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_get_SelectionModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionModeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0290 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxFactory[] = L"Windows.UI.Xaml.Controls.IListBoxFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0290 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0290_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0290_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListBoxFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("60CDFDA2-2F44-444B-9C94-B8C9FDA46F59")
                        IListBoxFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IListBox **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListBoxFactory = __uuidof(IListBoxFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0291 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxItem[] = L"Windows.UI.Xaml.Controls.IListBoxItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0291 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0291_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0291_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListBoxItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("43C13323-6EDF-4E4B-B6B2-3A93EEC41D95")
                        IListBoxItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IListBoxItem = __uuidof(IListBoxItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0292 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListBoxItemFactory[] = L"Windows.UI.Xaml.Controls.IListBoxItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0292 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0292_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0292_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListBoxItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4398B8D4-A3DE-402C-B23D-190384B27CA8")
                        IListBoxItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IListBoxItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListBoxItemFactory = __uuidof(IListBoxItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0293 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListView[] = L"Windows.UI.Xaml.Controls.IListView";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0293 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0293_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0293_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListView */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F6CE8C6D-FE96-41AD-A64A-C2B81C4AF7F8")
                        IListView : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IListView = __uuidof(IListView);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0294 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewFactory[] = L"Windows.UI.Xaml.Controls.IListViewFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0294 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0294_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0294_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BDFF696D-3F22-41F9-97A6-883134A76113")
                        IListViewFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IListView **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewFactory = __uuidof(IListViewFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListView **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0295 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase[] = L"Windows.UI.Xaml.Controls.IListViewBase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0295 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0295_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0295_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3D0813BA-6890-4537-BFE5-796D9458EDD6")
                        IListViewBase : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedItems( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ListViewSelectionMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ListViewSelectionMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSwipeEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsSwipeEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanDragItems( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanDragItems( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanReorderItems( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanReorderItems( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsItemClickEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsItemClickEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataFetchSize( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DataFetchSize( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IncrementalLoadingThreshold( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IncrementalLoadingThreshold( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IncrementalLoadingTrigger( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::IncrementalLoadingTrigger *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IncrementalLoadingTrigger( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::IncrementalLoadingTrigger value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ItemClick( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IItemClickEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ItemClick( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_DragItemsStarting( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDragItemsStartingEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_DragItemsStarting( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ScrollIntoView( 
                                /* [in] */ __RPC__in_opt IInspectable *item) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE LoadMoreItemsAsync( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ScrollIntoViewWithAlignment( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollIntoViewAlignment alignment) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBase = __uuidof(IListViewBase);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CListViewSelectionMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSwipeEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSwipeEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanDragItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanDragItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanReorderItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanReorderItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsItemClickEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsItemClickEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataFetchSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataFetchSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingThreshold )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IncrementalLoadingThreshold )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingTrigger )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IncrementalLoadingTrigger )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CIncrementalLoadingTrigger value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ItemClick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemClickEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ItemClick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DragItemsStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDragItemsStartingEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DragItemsStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollIntoView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt IInspectable *item);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *LoadMoreItemsAsync )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CData__CLoadMoreItemsResult **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollIntoViewWithAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollIntoViewAlignment alignment);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_SelectedItems(This,value)	\
    ( (This)->lpVtbl -> get_SelectedItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_SelectionMode(This,value)	\
    ( (This)->lpVtbl -> get_SelectionMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_SelectionMode(This,value)	\
    ( (This)->lpVtbl -> put_SelectionMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_IsSwipeEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsSwipeEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_IsSwipeEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsSwipeEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_CanDragItems(This,value)	\
    ( (This)->lpVtbl -> get_CanDragItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_CanDragItems(This,value)	\
    ( (This)->lpVtbl -> put_CanDragItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_CanReorderItems(This,value)	\
    ( (This)->lpVtbl -> get_CanReorderItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_CanReorderItems(This,value)	\
    ( (This)->lpVtbl -> put_CanReorderItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_IsItemClickEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsItemClickEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_IsItemClickEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsItemClickEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_DataFetchSize(This,value)	\
    ( (This)->lpVtbl -> get_DataFetchSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_DataFetchSize(This,value)	\
    ( (This)->lpVtbl -> put_DataFetchSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_IncrementalLoadingThreshold(This,value)	\
    ( (This)->lpVtbl -> get_IncrementalLoadingThreshold(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_IncrementalLoadingThreshold(This,value)	\
    ( (This)->lpVtbl -> put_IncrementalLoadingThreshold(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_IncrementalLoadingTrigger(This,value)	\
    ( (This)->lpVtbl -> get_IncrementalLoadingTrigger(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_IncrementalLoadingTrigger(This,value)	\
    ( (This)->lpVtbl -> put_IncrementalLoadingTrigger(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_add_ItemClick(This,value,token)	\
    ( (This)->lpVtbl -> add_ItemClick(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_remove_ItemClick(This,token)	\
    ( (This)->lpVtbl -> remove_ItemClick(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_add_DragItemsStarting(This,value,token)	\
    ( (This)->lpVtbl -> add_DragItemsStarting(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_remove_DragItemsStarting(This,token)	\
    ( (This)->lpVtbl -> remove_DragItemsStarting(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_ScrollIntoView(This,item)	\
    ( (This)->lpVtbl -> ScrollIntoView(This,item) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_LoadMoreItemsAsync(This,returnValue)	\
    ( (This)->lpVtbl -> LoadMoreItemsAsync(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_ScrollIntoViewWithAlignment(This,item,alignment)	\
    ( (This)->lpVtbl -> ScrollIntoViewWithAlignment(This,item,alignment) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_get_HeaderTransitions(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_put_HeaderTransitions(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTransitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0296 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0296 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0296_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0296_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8532B8F7-3E16-455B-89A8-C1346223F6D3")
                        IListViewBaseStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSwipeEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanDragItemsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanReorderItemsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsItemClickEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataFetchSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IncrementalLoadingThresholdProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IncrementalLoadingTriggerProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SemanticZoomOwnerProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActiveViewProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomedInViewProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBaseStatics = __uuidof(IListViewBaseStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSwipeEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanDragItemsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanReorderItemsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsItemClickEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataFetchSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingThresholdProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IncrementalLoadingTriggerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SemanticZoomOwnerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActiveViewProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_SelectionModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_IsSwipeEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsSwipeEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_CanDragItemsProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanDragItemsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_CanReorderItemsProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanReorderItemsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_IsItemClickEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsItemClickEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_DataFetchSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_DataFetchSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_IncrementalLoadingThresholdProperty(This,value)	\
    ( (This)->lpVtbl -> get_IncrementalLoadingThresholdProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_IncrementalLoadingTriggerProperty(This,value)	\
    ( (This)->lpVtbl -> get_IncrementalLoadingTriggerProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_SemanticZoomOwnerProperty(This,value)	\
    ( (This)->lpVtbl -> get_SemanticZoomOwnerProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_IsActiveViewProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsActiveViewProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_IsZoomedInViewProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomedInViewProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_get_HeaderTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTransitionsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0297 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseFactory[] = L"Windows.UI.Xaml.Controls.IListViewBaseFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0297 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0297_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0297_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBaseFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E67E6C7F-150F-46D0-A6AC-C5002BD9CA53")
                        IListViewBaseFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IListViewBase **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBaseFactory = __uuidof(IListViewBaseFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0298 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBase2[] = L"Windows.UI.Xaml.Controls.IListViewBase2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0298 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0298_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0298_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBase2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D1C2A4F7-78A3-4491-86E0-2DDEBC007AC5")
                        IListViewBase2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ShowsScrollingPlaceholders( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ShowsScrollingPlaceholders( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContainerContentChanging( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContainerContentChanging( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetDesiredContainerUpdateDuration( 
                                /* [in] */ ABI::Windows::Foundation::TimeSpan duration) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Footer( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Footer( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FooterTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FooterTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBase2 = __uuidof(IListViewBase2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowsScrollingPlaceholders )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowsScrollingPlaceholders )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContainerContentChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CListViewBase_Windows__CUI__CXaml__CControls__CContainerContentChangingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContainerContentChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *SetDesiredContainerUpdateDuration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan duration);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Footer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Footer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FooterTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FooterTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2 * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_get_ShowsScrollingPlaceholders(This,value)	\
    ( (This)->lpVtbl -> get_ShowsScrollingPlaceholders(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_put_ShowsScrollingPlaceholders(This,value)	\
    ( (This)->lpVtbl -> put_ShowsScrollingPlaceholders(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_add_ContainerContentChanging(This,value,token)	\
    ( (This)->lpVtbl -> add_ContainerContentChanging(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_remove_ContainerContentChanging(This,token)	\
    ( (This)->lpVtbl -> remove_ContainerContentChanging(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_SetDesiredContainerUpdateDuration(This,duration)	\
    ( (This)->lpVtbl -> SetDesiredContainerUpdateDuration(This,duration) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_get_Footer(This,value)	\
    ( (This)->lpVtbl -> get_Footer(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_put_Footer(This,value)	\
    ( (This)->lpVtbl -> put_Footer(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_get_FooterTemplate(This,value)	\
    ( (This)->lpVtbl -> get_FooterTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_put_FooterTemplate(This,value)	\
    ( (This)->lpVtbl -> put_FooterTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_get_FooterTransitions(This,value)	\
    ( (This)->lpVtbl -> get_FooterTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_put_FooterTransitions(This,value)	\
    ( (This)->lpVtbl -> put_FooterTransitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0299 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseStatics2[] = L"Windows.UI.Xaml.Controls.IListViewBaseStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0299 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0299_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0299_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBaseStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("821C00C8-78CC-411F-9F2E-A55758227F3E")
                        IListViewBaseStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ShowsScrollingPlaceholdersProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FooterTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBaseStatics2 = __uuidof(IListViewBaseStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowsScrollingPlaceholdersProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FooterTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_get_ShowsScrollingPlaceholdersProperty(This,value)	\
    ( (This)->lpVtbl -> get_ShowsScrollingPlaceholdersProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_get_FooterProperty(This,value)	\
    ( (This)->lpVtbl -> get_FooterProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_get_FooterTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_FooterTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_get_FooterTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_FooterTransitionsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0300 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewItem[] = L"Windows.UI.Xaml.Controls.IListViewItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0300 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0300_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0300_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B7BB4305-3DD9-43DE-A8C0-C472F085BC11")
                        IListViewItem : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IListViewItemTemplateSettings **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewItem = __uuidof(IListViewItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIListViewItemTemplateSettings **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0301 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewItemFactory[] = L"Windows.UI.Xaml.Controls.IListViewItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0301 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0301_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0301_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F431073D-9CAC-42A2-82DF-0F4490BC4E2E")
                        IListViewItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IListViewItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewItemFactory = __uuidof(IListViewItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0302 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElement[] = L"Windows.UI.Xaml.Controls.IMediaElement";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0302 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0302_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0302_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMediaElement */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A38ED2CF-13DE-4299-ADE2-AE18F74ED353")
                        IMediaElement : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PosterSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IImageSource **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PosterSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IImageSource *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsMuted( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsMuted( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsAudioOnly( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AutoPlay( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AutoPlay( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Volume( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Volume( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Balance( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Balance( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NaturalVideoHeight( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NaturalVideoWidth( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NaturalDuration( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Position( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Position( 
                                /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DownloadProgress( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BufferingProgress( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DownloadProgressOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CurrentState( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::MediaElementState *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Markers( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanSeek( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanPause( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioStreamCount( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioStreamIndex( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_int **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AudioStreamIndex( 
                                /* [in] */ __RPC__in_opt __FIReference_1_int *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaybackRate( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlaybackRate( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsLooping( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsLooping( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlayToSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::PlayTo::IPlayToSource **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultPlaybackRate( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DefaultPlaybackRate( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AspectRatioWidth( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AspectRatioHeight( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RealTimePlayback( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RealTimePlayback( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioCategory( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::AudioCategory *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AudioCategory( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::AudioCategory value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioDeviceType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::AudioDeviceType *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AudioDeviceType( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::AudioDeviceType value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProtectionManager( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Media::Protection::IMediaProtectionManager **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ProtectionManager( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Media::Protection::IMediaProtectionManager *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stereo3DVideoPackingMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stereo3DVideoPackingMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stereo3DVideoPackingMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stereo3DVideoPackingMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stereo3DVideoRenderMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stereo3DVideoRenderMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stereo3DVideoRenderMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stereo3DVideoRenderMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStereo3DVideo( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_MediaOpened( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_MediaOpened( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_MediaEnded( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_MediaEnded( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_MediaFailed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IExceptionRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_MediaFailed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_DownloadProgressChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_DownloadProgressChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_BufferingProgressChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_BufferingProgressChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_MarkerReached( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarkerRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_MarkerReached( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_RateChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IRateChangedRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_RateChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_VolumeChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_VolumeChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SeekCompleted( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SeekCompleted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Play( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Pause( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CanPlayType( 
                                /* [in] */ __RPC__in HSTRING type,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::MediaCanPlayResponse *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStream *stream,
                                /* [in] */ __RPC__in HSTRING mimeType) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetAudioStreamLanguage( 
                                /* [in] */ __RPC__in_opt __FIReference_1_int *index,
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE AddAudioEffect( 
                                /* [in] */ __RPC__in HSTRING effectID,
                                /* [in] */ boolean effectOptional,
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IPropertySet *effectConfiguration) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE AddVideoEffect( 
                                /* [in] */ __RPC__in HSTRING effectID,
                                /* [in] */ boolean effectOptional,
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IPropertySet *effectConfiguration) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE RemoveAllEffects( void) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualStereo3DVideoPackingMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stereo3DVideoPackingMode *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMediaElement = __uuidof(IMediaElement);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PosterSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PosterSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMuted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsMuted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsAudioOnly )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoPlay )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoPlay )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NaturalDuration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Position )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Position )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadProgress )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BufferingProgress )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadProgressOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Markers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanSeek )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanPause )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioStreamCount )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioStreamIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_int **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioStreamIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __FIReference_1_int *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaybackRate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlaybackRate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLooping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsLooping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayToSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CPlayTo_CIPlayToSource **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultPlaybackRate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultPlaybackRate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectRatioWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectRatioHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RealTimePlayback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RealTimePlayback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCategory )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioCategory )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDeviceType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioDeviceType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionManager )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectionManager )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoPackingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stereo3DVideoPackingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoRenderMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stereo3DVideoRenderMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStereo3DVideo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_MediaOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_MediaOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_MediaEnded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_MediaEnded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_MediaFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_MediaFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DownloadProgressChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DownloadProgressChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_BufferingProgressChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_BufferingProgressChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_CurrentStateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CurrentStateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_MarkerReached )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_MarkerReached )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_RateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_RateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_VolumeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VolumeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SeekCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SeekCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Play )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *CanPlayType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in HSTRING type,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream *stream,
            /* [in] */ __RPC__in HSTRING mimeType);
        
        HRESULT ( STDMETHODCALLTYPE *GetAudioStreamLanguage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in_opt __FIReference_1_int *index,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *AddAudioEffect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in HSTRING effectID,
            /* [in] */ boolean effectOptional,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet *effectConfiguration);
        
        HRESULT ( STDMETHODCALLTYPE *AddVideoEffect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [in] */ __RPC__in HSTRING effectID,
            /* [in] */ boolean effectOptional,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet *effectConfiguration);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAllEffects )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualStereo3DVideoPackingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_PosterSource(This,value)	\
    ( (This)->lpVtbl -> get_PosterSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_PosterSource(This,value)	\
    ( (This)->lpVtbl -> put_PosterSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_Source(This,value)	\
    ( (This)->lpVtbl -> put_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_IsMuted(This,value)	\
    ( (This)->lpVtbl -> get_IsMuted(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_IsMuted(This,value)	\
    ( (This)->lpVtbl -> put_IsMuted(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_IsAudioOnly(This,value)	\
    ( (This)->lpVtbl -> get_IsAudioOnly(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AutoPlay(This,value)	\
    ( (This)->lpVtbl -> get_AutoPlay(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_AutoPlay(This,value)	\
    ( (This)->lpVtbl -> put_AutoPlay(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Volume(This,value)	\
    ( (This)->lpVtbl -> get_Volume(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_Volume(This,value)	\
    ( (This)->lpVtbl -> put_Volume(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Balance(This,value)	\
    ( (This)->lpVtbl -> get_Balance(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_Balance(This,value)	\
    ( (This)->lpVtbl -> put_Balance(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_NaturalVideoHeight(This,value)	\
    ( (This)->lpVtbl -> get_NaturalVideoHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_NaturalVideoWidth(This,value)	\
    ( (This)->lpVtbl -> get_NaturalVideoWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_NaturalDuration(This,value)	\
    ( (This)->lpVtbl -> get_NaturalDuration(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Position(This,value)	\
    ( (This)->lpVtbl -> get_Position(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_Position(This,value)	\
    ( (This)->lpVtbl -> put_Position(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_DownloadProgress(This,value)	\
    ( (This)->lpVtbl -> get_DownloadProgress(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_BufferingProgress(This,value)	\
    ( (This)->lpVtbl -> get_BufferingProgress(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_DownloadProgressOffset(This,value)	\
    ( (This)->lpVtbl -> get_DownloadProgressOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_CurrentState(This,value)	\
    ( (This)->lpVtbl -> get_CurrentState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Markers(This,value)	\
    ( (This)->lpVtbl -> get_Markers(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_CanSeek(This,value)	\
    ( (This)->lpVtbl -> get_CanSeek(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_CanPause(This,value)	\
    ( (This)->lpVtbl -> get_CanPause(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AudioStreamCount(This,value)	\
    ( (This)->lpVtbl -> get_AudioStreamCount(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AudioStreamIndex(This,value)	\
    ( (This)->lpVtbl -> get_AudioStreamIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_AudioStreamIndex(This,value)	\
    ( (This)->lpVtbl -> put_AudioStreamIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_PlaybackRate(This,value)	\
    ( (This)->lpVtbl -> get_PlaybackRate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_PlaybackRate(This,value)	\
    ( (This)->lpVtbl -> put_PlaybackRate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_IsLooping(This,value)	\
    ( (This)->lpVtbl -> get_IsLooping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_IsLooping(This,value)	\
    ( (This)->lpVtbl -> put_IsLooping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_PlayToSource(This,value)	\
    ( (This)->lpVtbl -> get_PlayToSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_DefaultPlaybackRate(This,value)	\
    ( (This)->lpVtbl -> get_DefaultPlaybackRate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_DefaultPlaybackRate(This,value)	\
    ( (This)->lpVtbl -> put_DefaultPlaybackRate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AspectRatioWidth(This,value)	\
    ( (This)->lpVtbl -> get_AspectRatioWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AspectRatioHeight(This,value)	\
    ( (This)->lpVtbl -> get_AspectRatioHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_RealTimePlayback(This,value)	\
    ( (This)->lpVtbl -> get_RealTimePlayback(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_RealTimePlayback(This,value)	\
    ( (This)->lpVtbl -> put_RealTimePlayback(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AudioCategory(This,value)	\
    ( (This)->lpVtbl -> get_AudioCategory(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_AudioCategory(This,value)	\
    ( (This)->lpVtbl -> put_AudioCategory(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_AudioDeviceType(This,value)	\
    ( (This)->lpVtbl -> get_AudioDeviceType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_AudioDeviceType(This,value)	\
    ( (This)->lpVtbl -> put_AudioDeviceType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_ProtectionManager(This,value)	\
    ( (This)->lpVtbl -> get_ProtectionManager(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_ProtectionManager(This,value)	\
    ( (This)->lpVtbl -> put_ProtectionManager(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Stereo3DVideoPackingMode(This,value)	\
    ( (This)->lpVtbl -> get_Stereo3DVideoPackingMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_Stereo3DVideoPackingMode(This,value)	\
    ( (This)->lpVtbl -> put_Stereo3DVideoPackingMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_Stereo3DVideoRenderMode(This,value)	\
    ( (This)->lpVtbl -> get_Stereo3DVideoRenderMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_put_Stereo3DVideoRenderMode(This,value)	\
    ( (This)->lpVtbl -> put_Stereo3DVideoRenderMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_IsStereo3DVideo(This,value)	\
    ( (This)->lpVtbl -> get_IsStereo3DVideo(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_MediaOpened(This,value,token)	\
    ( (This)->lpVtbl -> add_MediaOpened(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_MediaOpened(This,token)	\
    ( (This)->lpVtbl -> remove_MediaOpened(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_MediaEnded(This,value,token)	\
    ( (This)->lpVtbl -> add_MediaEnded(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_MediaEnded(This,token)	\
    ( (This)->lpVtbl -> remove_MediaEnded(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_MediaFailed(This,value,token)	\
    ( (This)->lpVtbl -> add_MediaFailed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_MediaFailed(This,token)	\
    ( (This)->lpVtbl -> remove_MediaFailed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_DownloadProgressChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_DownloadProgressChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_DownloadProgressChanged(This,token)	\
    ( (This)->lpVtbl -> remove_DownloadProgressChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_BufferingProgressChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_BufferingProgressChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_BufferingProgressChanged(This,token)	\
    ( (This)->lpVtbl -> remove_BufferingProgressChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_CurrentStateChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_CurrentStateChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_CurrentStateChanged(This,token)	\
    ( (This)->lpVtbl -> remove_CurrentStateChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_MarkerReached(This,value,token)	\
    ( (This)->lpVtbl -> add_MarkerReached(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_MarkerReached(This,token)	\
    ( (This)->lpVtbl -> remove_MarkerReached(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_RateChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_RateChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_RateChanged(This,token)	\
    ( (This)->lpVtbl -> remove_RateChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_VolumeChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_VolumeChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_VolumeChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VolumeChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_add_SeekCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_SeekCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_remove_SeekCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_SeekCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_Play(This)	\
    ( (This)->lpVtbl -> Play(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_CanPlayType(This,type,returnValue)	\
    ( (This)->lpVtbl -> CanPlayType(This,type,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_SetSource(This,stream,mimeType)	\
    ( (This)->lpVtbl -> SetSource(This,stream,mimeType) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_GetAudioStreamLanguage(This,index,returnValue)	\
    ( (This)->lpVtbl -> GetAudioStreamLanguage(This,index,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_AddAudioEffect(This,effectID,effectOptional,effectConfiguration)	\
    ( (This)->lpVtbl -> AddAudioEffect(This,effectID,effectOptional,effectConfiguration) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_AddVideoEffect(This,effectID,effectOptional,effectConfiguration)	\
    ( (This)->lpVtbl -> AddVideoEffect(This,effectID,effectOptional,effectConfiguration) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_RemoveAllEffects(This)	\
    ( (This)->lpVtbl -> RemoveAllEffects(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_get_ActualStereo3DVideoPackingMode(This,value)	\
    ( (This)->lpVtbl -> get_ActualStereo3DVideoPackingMode(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0303 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElementStatics[] = L"Windows.UI.Xaml.Controls.IMediaElementStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0303 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0303_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0303_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMediaElementStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DCCD2CB9-7568-4682-A72A-8DDF2A2665CA")
                        IMediaElementStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PosterSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsMutedProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsAudioOnlyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AutoPlayProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VolumeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BalanceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NaturalVideoHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NaturalVideoWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NaturalDurationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PositionProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DownloadProgressProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BufferingProgressProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DownloadProgressOffsetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CurrentStateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanSeekProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanPauseProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioStreamCountProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioStreamIndexProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaybackRateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsLoopingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlayToSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultPlaybackRateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AspectRatioWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AspectRatioHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RealTimePlaybackProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioCategoryProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AudioDeviceTypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProtectionManagerProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stereo3DVideoPackingModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stereo3DVideoRenderModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStereo3DVideoProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualStereo3DVideoPackingModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMediaElementStatics = __uuidof(IMediaElementStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PosterSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMutedProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsAudioOnlyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoPlayProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VolumeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BalanceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NaturalVideoWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NaturalDurationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PositionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadProgressProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BufferingProgressProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DownloadProgressOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentStateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanSeekProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanPauseProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioStreamCountProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioStreamIndexProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaybackRateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLoopingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayToSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultPlaybackRateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectRatioWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectRatioHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RealTimePlaybackProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCategoryProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDeviceTypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionManagerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoPackingModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stereo3DVideoRenderModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStereo3DVideoProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualStereo3DVideoPackingModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_PosterSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_PosterSourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_SourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_SourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_IsMutedProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsMutedProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_IsAudioOnlyProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsAudioOnlyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AutoPlayProperty(This,value)	\
    ( (This)->lpVtbl -> get_AutoPlayProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_VolumeProperty(This,value)	\
    ( (This)->lpVtbl -> get_VolumeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_BalanceProperty(This,value)	\
    ( (This)->lpVtbl -> get_BalanceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_NaturalVideoHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_NaturalVideoHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_NaturalVideoWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_NaturalVideoWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_NaturalDurationProperty(This,value)	\
    ( (This)->lpVtbl -> get_NaturalDurationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_PositionProperty(This,value)	\
    ( (This)->lpVtbl -> get_PositionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_DownloadProgressProperty(This,value)	\
    ( (This)->lpVtbl -> get_DownloadProgressProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_BufferingProgressProperty(This,value)	\
    ( (This)->lpVtbl -> get_BufferingProgressProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_DownloadProgressOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_DownloadProgressOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_CurrentStateProperty(This,value)	\
    ( (This)->lpVtbl -> get_CurrentStateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_CanSeekProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanSeekProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_CanPauseProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanPauseProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AudioStreamCountProperty(This,value)	\
    ( (This)->lpVtbl -> get_AudioStreamCountProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AudioStreamIndexProperty(This,value)	\
    ( (This)->lpVtbl -> get_AudioStreamIndexProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_PlaybackRateProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlaybackRateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_IsLoopingProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsLoopingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_PlayToSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlayToSourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_DefaultPlaybackRateProperty(This,value)	\
    ( (This)->lpVtbl -> get_DefaultPlaybackRateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AspectRatioWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_AspectRatioWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AspectRatioHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_AspectRatioHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_RealTimePlaybackProperty(This,value)	\
    ( (This)->lpVtbl -> get_RealTimePlaybackProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AudioCategoryProperty(This,value)	\
    ( (This)->lpVtbl -> get_AudioCategoryProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_AudioDeviceTypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_AudioDeviceTypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_ProtectionManagerProperty(This,value)	\
    ( (This)->lpVtbl -> get_ProtectionManagerProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_Stereo3DVideoPackingModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_Stereo3DVideoPackingModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_Stereo3DVideoRenderModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_Stereo3DVideoRenderModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_IsStereo3DVideoProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsStereo3DVideoProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_get_ActualStereo3DVideoPackingModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_ActualStereo3DVideoPackingModeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0304 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElement2[] = L"Windows.UI.Xaml.Controls.IMediaElement2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0304 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0304_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0304_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMediaElement2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FD53DA65-B186-4654-BFDB-180ED26CAD07")
                        IMediaElement2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AreTransportControlsEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AreTransportControlsEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stretch( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsFullWindow( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsFullWindow( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetMediaStreamSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Media::Core::IMediaSource *source) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlayToPreferredSourceUri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlayToPreferredSourceUri( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMediaElement2 = __uuidof(IMediaElement2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreTransportControlsEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreTransportControlsEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFullWindow )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsFullWindow )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaStreamSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CMedia_CCore_CIMediaSource *source);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayToPreferredSourceUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayToPreferredSourceUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_get_AreTransportControlsEnabled(This,value)	\
    ( (This)->lpVtbl -> get_AreTransportControlsEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_put_AreTransportControlsEnabled(This,value)	\
    ( (This)->lpVtbl -> put_AreTransportControlsEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_get_Stretch(This,value)	\
    ( (This)->lpVtbl -> get_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_put_Stretch(This,value)	\
    ( (This)->lpVtbl -> put_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_get_IsFullWindow(This,value)	\
    ( (This)->lpVtbl -> get_IsFullWindow(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_put_IsFullWindow(This,value)	\
    ( (This)->lpVtbl -> put_IsFullWindow(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_SetMediaStreamSource(This,source)	\
    ( (This)->lpVtbl -> SetMediaStreamSource(This,source) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_get_PlayToPreferredSourceUri(This,value)	\
    ( (This)->lpVtbl -> get_PlayToPreferredSourceUri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_put_PlayToPreferredSourceUri(This,value)	\
    ( (This)->lpVtbl -> put_PlayToPreferredSourceUri(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0305 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMediaElementStatics2[] = L"Windows.UI.Xaml.Controls.IMediaElementStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0305 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0305_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0305_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMediaElementStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("9EE7F826-F154-4DC6-8014-A6EBA987F847")
                        IMediaElementStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AreTransportControlsEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsFullWindowProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlayToPreferredSourceUriProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMediaElementStatics2 = __uuidof(IMediaElementStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreTransportControlsEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFullWindowProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayToPreferredSourceUriProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_get_AreTransportControlsEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_AreTransportControlsEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_get_StretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_StretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_get_IsFullWindowProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsFullWindowProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_get_PlayToPreferredSourceUriProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlayToPreferredSourceUriProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElementStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0306 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INotifyEventArgs[] = L"Windows.UI.Xaml.Controls.INotifyEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0306 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0306_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0306_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::INotifyEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AF0E05F7-C4B7-44C5-B09D-5CB7052B3A97")
                        INotifyEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_INotifyEventArgs = __uuidof(INotifyEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0307 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_INotifyEventArgs2[] = L"Windows.UI.Xaml.Controls.INotifyEventArgs2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0307 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0307_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0307_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::INotifyEventArgs2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("0D140F56-1DCE-4FCD-85BC-5A5572273B9C")
                        INotifyEventArgs2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CallingUri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_INotifyEventArgs2 = __uuidof(INotifyEventArgs2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CallingUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_get_CallingUri(This,value)	\
    ( (This)->lpVtbl -> get_CallingUri(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventArgs2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0308 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanel[] = L"Windows.UI.Xaml.Controls.IPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0308 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0308_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0308_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A50A4BBD-8361-469C-90DA-E9A40C7474DF")
                        IPanel : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Children( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CUIElement **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Background( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Background( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsItemsHost( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildrenTransitions( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ChildrenTransitions( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPanel = __uuidof(IPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CUIElement **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Background )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsItemsHost )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildrenTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChildrenTransitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_get_Children(This,value)	\
    ( (This)->lpVtbl -> get_Children(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_get_Background(This,value)	\
    ( (This)->lpVtbl -> get_Background(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_put_Background(This,value)	\
    ( (This)->lpVtbl -> put_Background(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_get_IsItemsHost(This,value)	\
    ( (This)->lpVtbl -> get_IsItemsHost(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_get_ChildrenTransitions(This,value)	\
    ( (This)->lpVtbl -> get_ChildrenTransitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_put_ChildrenTransitions(This,value)	\
    ( (This)->lpVtbl -> put_ChildrenTransitions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0309 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanelStatics[] = L"Windows.UI.Xaml.Controls.IPanelStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0309 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0309_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0309_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPanelStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F23D6B5D-8330-47A6-A046-25F509B25232")
                        IPanelStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackgroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsItemsHostProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildrenTransitionsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPanelStatics = __uuidof(IPanelStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsItemsHostProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildrenTransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_get_BackgroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_BackgroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_get_IsItemsHostProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsItemsHostProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_get_ChildrenTransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_ChildrenTransitionsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0310 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPanelFactory[] = L"Windows.UI.Xaml.Controls.IPanelFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0310 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0310_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0310_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPanelFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("EEE68111-C7CC-433F-95CD-D630C34302DD")
                        IPanelFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IPanel **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPanelFactory = __uuidof(IPanelFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPanel **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPanelFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0311 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox[] = L"Windows.UI.Xaml.Controls.IPasswordBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0311 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0311_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0311_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPasswordBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("02B9AA11-0B47-4E7D-AD91-3A4168ED230D")
                        IPasswordBox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Password( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Password( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PasswordChar( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PasswordChar( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsPasswordRevealButtonEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsPasswordRevealButtonEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLength( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxLength( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_PasswordChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_PasswordChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContextMenuOpening( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContextMenuOpeningEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContextMenuOpening( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPasswordBox = __uuidof(IPasswordBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordChar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PasswordChar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPasswordRevealButtonEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPasswordRevealButtonEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ INT32 value);
        
        HRESULT ( STDMETHODCALLTYPE *add_PasswordChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PasswordChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_get_Password(This,value)	\
    ( (This)->lpVtbl -> get_Password(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_put_Password(This,value)	\
    ( (This)->lpVtbl -> put_Password(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_get_PasswordChar(This,value)	\
    ( (This)->lpVtbl -> get_PasswordChar(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_put_PasswordChar(This,value)	\
    ( (This)->lpVtbl -> put_PasswordChar(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_get_IsPasswordRevealButtonEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsPasswordRevealButtonEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_put_IsPasswordRevealButtonEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsPasswordRevealButtonEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_get_MaxLength(This,value)	\
    ( (This)->lpVtbl -> get_MaxLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_put_MaxLength(This,value)	\
    ( (This)->lpVtbl -> put_MaxLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_add_PasswordChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_PasswordChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_remove_PasswordChanged(This,token)	\
    ( (This)->lpVtbl -> remove_PasswordChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_add_ContextMenuOpening(This,value,token)	\
    ( (This)->lpVtbl -> add_ContextMenuOpening(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_remove_ContextMenuOpening(This,token)	\
    ( (This)->lpVtbl -> remove_ContextMenuOpening(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0312 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxStatics[] = L"Windows.UI.Xaml.Controls.IPasswordBoxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0312 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0312_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0312_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPasswordBoxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5EE67563-2D74-4ACE-BD79-FCAB61A7D77B")
                        IPasswordBoxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PasswordProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PasswordCharProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsPasswordRevealButtonEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLengthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPasswordBoxStatics = __uuidof(IPasswordBoxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordCharProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPasswordRevealButtonEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_get_PasswordProperty(This,value)	\
    ( (This)->lpVtbl -> get_PasswordProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_get_PasswordCharProperty(This,value)	\
    ( (This)->lpVtbl -> get_PasswordCharProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_get_IsPasswordRevealButtonEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsPasswordRevealButtonEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_get_MaxLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxLengthProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0313 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBox2[] = L"Windows.UI.Xaml.Controls.IPasswordBox2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0313 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0313_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0313_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPasswordBox2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5ED738DF-212F-4AEB-B5B8-2C219AEC3C0C")
                        IPasswordBox2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlaceholderText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColor( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionHighlightColor( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreventKeyboardDisplayOnProgrammaticFocus( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PreventKeyboardDisplayOnProgrammaticFocus( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Paste( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextControlPasteEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Paste( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPasswordBox2 = __uuidof(IPasswordBox2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreventKeyboardDisplayOnProgrammaticFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Paste )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Paste )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2 * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_get_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_put_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> put_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_get_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_put_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> put_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_get_PreventKeyboardDisplayOnProgrammaticFocus(This,value)	\
    ( (This)->lpVtbl -> get_PreventKeyboardDisplayOnProgrammaticFocus(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_put_PreventKeyboardDisplayOnProgrammaticFocus(This,value)	\
    ( (This)->lpVtbl -> put_PreventKeyboardDisplayOnProgrammaticFocus(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_add_Paste(This,value,token)	\
    ( (This)->lpVtbl -> add_Paste(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_remove_Paste(This,token)	\
    ( (This)->lpVtbl -> remove_Paste(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0314 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPasswordBoxStatics2[] = L"Windows.UI.Xaml.Controls.IPasswordBoxStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0314 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0314_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0314_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPasswordBoxStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FC57935F-98FA-4066-B785-FA725ECDE232")
                        IPasswordBoxStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreventKeyboardDisplayOnProgrammaticFocusProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPasswordBoxStatics2 = __uuidof(IPasswordBoxStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocusProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_get_PlaceholderTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderTextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_get_SelectionHighlightColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value)	\
    ( (This)->lpVtbl -> get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBoxStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0315 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressBar[] = L"Windows.UI.Xaml.Controls.IProgressBar";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0315 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0315_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0315_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IProgressBar */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AE752C89-0067-4963-BF4C-29DB0C4A507E")
                        IProgressBar : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsIndeterminate( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsIndeterminate( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ShowError( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ShowError( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ShowPaused( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ShowPaused( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IProgressBarTemplateSettings **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IProgressBar = __uuidof(IProgressBar);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsIndeterminate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsIndeterminate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowError )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowError )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPaused )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPaused )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressBarTemplateSettings **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_get_IsIndeterminate(This,value)	\
    ( (This)->lpVtbl -> get_IsIndeterminate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_put_IsIndeterminate(This,value)	\
    ( (This)->lpVtbl -> put_IsIndeterminate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_get_ShowError(This,value)	\
    ( (This)->lpVtbl -> get_ShowError(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_put_ShowError(This,value)	\
    ( (This)->lpVtbl -> put_ShowError(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_get_ShowPaused(This,value)	\
    ( (This)->lpVtbl -> get_ShowPaused(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_put_ShowPaused(This,value)	\
    ( (This)->lpVtbl -> put_ShowPaused(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0316 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressBarStatics[] = L"Windows.UI.Xaml.Controls.IProgressBarStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0316 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0316_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0316_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IProgressBarStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7A129FDA-5837-4E26-B3B4-E1C092CEBBEC")
                        IProgressBarStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsIndeterminateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ShowErrorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ShowPausedProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IProgressBarStatics = __uuidof(IProgressBarStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsIndeterminateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowErrorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPausedProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_get_IsIndeterminateProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsIndeterminateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_get_ShowErrorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ShowErrorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_get_ShowPausedProperty(This,value)	\
    ( (This)->lpVtbl -> get_ShowPausedProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0317 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressBarFactory[] = L"Windows.UI.Xaml.Controls.IProgressBarFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0317 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0317_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0317_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IProgressBarFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DA9A8C11-1591-400B-A993-0F1C5CC12F3B")
                        IProgressBarFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IProgressBar **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IProgressBarFactory = __uuidof(IProgressBarFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBarFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0318 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressRing[] = L"Windows.UI.Xaml.Controls.IProgressRing";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0318 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0318_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0318_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IProgressRing */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6DA5E49E-6E9D-425C-BD7C-02173E39763F")
                        IProgressRing : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActive( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsActive( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IProgressRingTemplateSettings **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IProgressRing = __uuidof(IProgressRing);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIProgressRingTemplateSettings **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_get_IsActive(This,value)	\
    ( (This)->lpVtbl -> get_IsActive(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_put_IsActive(This,value)	\
    ( (This)->lpVtbl -> put_IsActive(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0319 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IProgressRingStatics[] = L"Windows.UI.Xaml.Controls.IProgressRingStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0319 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0319_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0319_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IProgressRingStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E8B62507-4E2C-47D5-A54A-C6C48A5E6989")
                        IProgressRingStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActiveProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IProgressRingStatics = __uuidof(IProgressRingStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActiveProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_get_IsActiveProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsActiveProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRingStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0320 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRadioButton[] = L"Windows.UI.Xaml.Controls.IRadioButton";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0320 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0320_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0320_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRadioButton */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("325C44E0-9A03-4BF3-ABD6-6FBB46C9A486")
                        IRadioButton : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupName( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GroupName( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRadioButton = __uuidof(IRadioButton);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GroupName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_get_GroupName(This,value)	\
    ( (This)->lpVtbl -> get_GroupName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_put_GroupName(This,value)	\
    ( (This)->lpVtbl -> put_GroupName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0321 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRadioButtonStatics[] = L"Windows.UI.Xaml.Controls.IRadioButtonStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0321 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0321_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0321_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRadioButtonStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6B149293-F50F-4BD8-B0AC-5C162F33A208")
                        IRadioButtonStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupNameProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRadioButtonStatics = __uuidof(IRadioButtonStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_get_GroupNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_GroupNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0322 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRadioButtonFactory[] = L"Windows.UI.Xaml.Controls.IRadioButtonFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0322 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0322_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0322_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRadioButtonFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F1D04933-34E1-4A5C-B2AE-CA3B1C0B20DE")
                        IRadioButtonFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRadioButton **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRadioButtonFactory = __uuidof(IRadioButtonFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButtonFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0323 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox[] = L"Windows.UI.Xaml.Controls.IRichEditBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0323 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0323_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0323_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichEditBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("90A57A40-80B6-4FCE-B1EC-E3C616284B6A")
                        IRichEditBox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsReadOnly( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsReadOnly( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptsReturn( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AcceptsReturn( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrapping( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextWrapping *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextWrapping( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextWrapping value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSpellCheckEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsSpellCheckEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextPredictionEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTextPredictionEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Document( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Text::ITextDocument **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InputScope( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Input::IInputScope **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InputScope( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IInputScope *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_TextChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_TextChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SelectionChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SelectionChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContextMenuOpening( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContextMenuOpeningEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContextMenuOpening( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichEditBox = __uuidof(IRichEditBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsReadOnly )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AcceptsReturn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSpellCheckEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTextPredictionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CText_CITextDocument **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InputScope )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InputScope )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_TextChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_TextChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_IsReadOnly(This,value)	\
    ( (This)->lpVtbl -> get_IsReadOnly(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_IsReadOnly(This,value)	\
    ( (This)->lpVtbl -> put_IsReadOnly(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_AcceptsReturn(This,value)	\
    ( (This)->lpVtbl -> get_AcceptsReturn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_AcceptsReturn(This,value)	\
    ( (This)->lpVtbl -> put_AcceptsReturn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> put_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> get_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> put_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_IsSpellCheckEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsSpellCheckEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_IsSpellCheckEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsSpellCheckEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_IsTextPredictionEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsTextPredictionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_IsTextPredictionEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsTextPredictionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_Document(This,value)	\
    ( (This)->lpVtbl -> get_Document(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_get_InputScope(This,value)	\
    ( (This)->lpVtbl -> get_InputScope(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_put_InputScope(This,value)	\
    ( (This)->lpVtbl -> put_InputScope(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_add_TextChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_TextChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_remove_TextChanged(This,token)	\
    ( (This)->lpVtbl -> remove_TextChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_add_SelectionChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SelectionChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_remove_SelectionChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SelectionChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_add_ContextMenuOpening(This,value,token)	\
    ( (This)->lpVtbl -> add_ContextMenuOpening(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_remove_ContextMenuOpening(This,token)	\
    ( (This)->lpVtbl -> remove_ContextMenuOpening(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0324 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0324 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0324_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0324_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichEditBoxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F5E03A74-88EA-479B-9A05-37089FF30EDE")
                        IRichEditBoxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsReadOnlyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptsReturnProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrappingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSpellCheckEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextPredictionEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InputScopeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichEditBoxStatics = __uuidof(IRichEditBoxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnlyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturnProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InputScopeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_IsReadOnlyProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsReadOnlyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_AcceptsReturnProperty(This,value)	\
    ( (This)->lpVtbl -> get_AcceptsReturnProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_TextAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_TextWrappingProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextWrappingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_IsSpellCheckEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsSpellCheckEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_IsTextPredictionEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTextPredictionEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_get_InputScopeProperty(This,value)	\
    ( (This)->lpVtbl -> get_InputScopeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0325 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxFactory[] = L"Windows.UI.Xaml.Controls.IRichEditBoxFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0325 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0325_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0325_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichEditBoxFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("61A1DF62-2806-41ED-88ED-AE21F47AB422")
                        IRichEditBoxFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRichEditBox **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichEditBoxFactory = __uuidof(IRichEditBoxFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0326 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBox2[] = L"Windows.UI.Xaml.Controls.IRichEditBox2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0326 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0326_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0326_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichEditBox2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BBEA6EAD-E805-47A4-BBE7-47E59B8F74A7")
                        IRichEditBox2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlaceholderText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColor( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionHighlightColor( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreventKeyboardDisplayOnProgrammaticFocus( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PreventKeyboardDisplayOnProgrammaticFocus( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsColorFontEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Paste( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextControlPasteEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Paste( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichEditBox2 = __uuidof(IRichEditBox2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreventKeyboardDisplayOnProgrammaticFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Paste )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Paste )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2 * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_get_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_put_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> put_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_get_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_put_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> put_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_get_PreventKeyboardDisplayOnProgrammaticFocus(This,value)	\
    ( (This)->lpVtbl -> get_PreventKeyboardDisplayOnProgrammaticFocus(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_put_PreventKeyboardDisplayOnProgrammaticFocus(This,value)	\
    ( (This)->lpVtbl -> put_PreventKeyboardDisplayOnProgrammaticFocus(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_get_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_put_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_add_Paste(This,value,token)	\
    ( (This)->lpVtbl -> add_Paste(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_remove_Paste(This,token)	\
    ( (This)->lpVtbl -> remove_Paste(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0327 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichEditBoxStatics2[] = L"Windows.UI.Xaml.Controls.IRichEditBoxStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0327 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0327_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0327_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichEditBoxStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E3EB26DE-2748-420B-B1FC-CE95B6E85EEC")
                        IRichEditBoxStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreventKeyboardDisplayOnProgrammaticFocusProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichEditBoxStatics2 = __uuidof(IRichEditBoxStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocusProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_get_PlaceholderTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderTextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_get_SelectionHighlightColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value)	\
    ( (This)->lpVtbl -> get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_get_IsColorFontEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabledProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBoxStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0328 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock[] = L"Windows.UI.Xaml.Controls.IRichTextBlock";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0328 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0328_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0328_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlock */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E5FFF9E2-B968-49E7-97D4-8CCA2AC3AE7C")
                        IRichTextBlock : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamily( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFamily( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IFontFamily *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeight( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontWeight *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontWeight( 
                                /* [in] */ ABI::Windows::UI::Text::FontWeight value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyle( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStyle *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStyle( 
                                /* [in] */ ABI::Windows::UI::Text::FontStyle value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStretch( 
                                /* [in] */ ABI::Windows::UI::Text::FontStretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Foreground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Foreground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrapping( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextWrapping *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextWrapping( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextWrapping value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextTrimming( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextTrimming *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextTrimming( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextTrimming value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Blocks( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineStackingStrategy( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::LineStackingStrategy *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineStackingStrategy( 
                                /* [in] */ ABI::Windows::UI::Xaml::LineStackingStrategy value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacing( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharacterSpacing( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OverflowContentTarget( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OverflowContentTarget( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextSelectionEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTextSelectionEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasOverflowContent( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentStart( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentEnd( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionEnd( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BaselineOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SelectionChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SelectionChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContextMenuOpening( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContextMenuOpeningEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContextMenuOpening( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Select( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Documents::ITextPointer *start,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Documents::ITextPointer *end) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetPositionFromPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point point,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Focus( 
                                /* [in] */ ABI::Windows::UI::Xaml::FocusState value,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextIndent( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextIndent( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlock = __uuidof(IRichTextBlock);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontWeight value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStyle value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextTrimming )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextTrimming *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextTrimming )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextTrimming value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Blocks )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CBlock **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategy )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineStackingStrategy )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OverflowContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTextSelectionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentEnd )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaselineOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *Select )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer *start,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer *end);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionFromPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Focus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CFocusState value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextIndent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextIndent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_FontSize(This,value)	\
    ( (This)->lpVtbl -> get_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_FontSize(This,value)	\
    ( (This)->lpVtbl -> put_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_FontFamily(This,value)	\
    ( (This)->lpVtbl -> get_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_FontFamily(This,value)	\
    ( (This)->lpVtbl -> put_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_FontWeight(This,value)	\
    ( (This)->lpVtbl -> get_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_FontWeight(This,value)	\
    ( (This)->lpVtbl -> put_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_FontStyle(This,value)	\
    ( (This)->lpVtbl -> get_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_FontStyle(This,value)	\
    ( (This)->lpVtbl -> put_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_FontStretch(This,value)	\
    ( (This)->lpVtbl -> get_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_FontStretch(This,value)	\
    ( (This)->lpVtbl -> put_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_Foreground(This,value)	\
    ( (This)->lpVtbl -> get_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_Foreground(This,value)	\
    ( (This)->lpVtbl -> put_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> get_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> put_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_TextTrimming(This,value)	\
    ( (This)->lpVtbl -> get_TextTrimming(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_TextTrimming(This,value)	\
    ( (This)->lpVtbl -> put_TextTrimming(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> put_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_Blocks(This,value)	\
    ( (This)->lpVtbl -> get_Blocks(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_LineHeight(This,value)	\
    ( (This)->lpVtbl -> get_LineHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_LineHeight(This,value)	\
    ( (This)->lpVtbl -> put_LineHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_LineStackingStrategy(This,value)	\
    ( (This)->lpVtbl -> get_LineStackingStrategy(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_LineStackingStrategy(This,value)	\
    ( (This)->lpVtbl -> put_LineStackingStrategy(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> put_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_OverflowContentTarget(This,value)	\
    ( (This)->lpVtbl -> get_OverflowContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_OverflowContentTarget(This,value)	\
    ( (This)->lpVtbl -> put_OverflowContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_IsTextSelectionEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsTextSelectionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_IsTextSelectionEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsTextSelectionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_HasOverflowContent(This,value)	\
    ( (This)->lpVtbl -> get_HasOverflowContent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_SelectedText(This,value)	\
    ( (This)->lpVtbl -> get_SelectedText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_ContentStart(This,value)	\
    ( (This)->lpVtbl -> get_ContentStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_ContentEnd(This,value)	\
    ( (This)->lpVtbl -> get_ContentEnd(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_SelectionStart(This,value)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_SelectionEnd(This,value)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_BaselineOffset(This,value)	\
    ( (This)->lpVtbl -> get_BaselineOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_add_SelectionChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SelectionChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_remove_SelectionChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SelectionChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_add_ContextMenuOpening(This,value,token)	\
    ( (This)->lpVtbl -> add_ContextMenuOpening(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_remove_ContextMenuOpening(This,token)	\
    ( (This)->lpVtbl -> remove_ContextMenuOpening(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_Select(This,start,end)	\
    ( (This)->lpVtbl -> Select(This,start,end) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_GetPositionFromPoint(This,point,returnValue)	\
    ( (This)->lpVtbl -> GetPositionFromPoint(This,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_Focus(This,value,returnValue)	\
    ( (This)->lpVtbl -> Focus(This,value,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_get_TextIndent(This,value)	\
    ( (This)->lpVtbl -> get_TextIndent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_put_TextIndent(This,value)	\
    ( (This)->lpVtbl -> put_TextIndent(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0329 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0329 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0329_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0329_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlockStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("492D883C-ADEA-433C-BE1C-208A164262BE")
                        IRichTextBlockStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamilyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForegroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrappingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextTrimmingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineStackingStrategyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OverflowContentTargetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextSelectionEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasOverflowContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextIndentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlockStatics = __uuidof(IRichTextBlockStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextTrimmingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextIndentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_FontSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_FontFamilyProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontFamilyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_FontWeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontWeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_FontStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStyleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_FontStretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_ForegroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_ForegroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_TextWrappingProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextWrappingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_TextTrimmingProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextTrimmingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_TextAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_PaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_PaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_LineHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_LineHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_LineStackingStrategyProperty(This,value)	\
    ( (This)->lpVtbl -> get_LineStackingStrategyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_CharacterSpacingProperty(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_OverflowContentTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_OverflowContentTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_IsTextSelectionEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTextSelectionEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_HasOverflowContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HasOverflowContentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_SelectedTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectedTextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_get_TextIndentProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextIndentProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0330 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlock2[] = L"Windows.UI.Xaml.Controls.IRichTextBlock2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0330 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0330_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0330_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlock2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3F209013-03E7-4508-964A-91AEDAB3D11E")
                        IRichTextBlock2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLines( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxLines( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextLineBounds( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextLineBounds *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextLineBounds( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextLineBounds value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColor( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionHighlightColor( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpticalMarginAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::OpticalMarginAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpticalMarginAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::OpticalMarginAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsColorFontEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextReadingOrder( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextReadingOrder *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextReadingOrder( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextReadingOrder value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlock2 = __uuidof(IRichTextBlock2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextLineBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextLineBounds *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextLineBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpticalMarginAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_get_MaxLines(This,value)	\
    ( (This)->lpVtbl -> get_MaxLines(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_put_MaxLines(This,value)	\
    ( (This)->lpVtbl -> put_MaxLines(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_get_TextLineBounds(This,value)	\
    ( (This)->lpVtbl -> get_TextLineBounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_put_TextLineBounds(This,value)	\
    ( (This)->lpVtbl -> put_TextLineBounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_get_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_put_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> put_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_get_OpticalMarginAlignment(This,value)	\
    ( (This)->lpVtbl -> get_OpticalMarginAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_put_OpticalMarginAlignment(This,value)	\
    ( (This)->lpVtbl -> put_OpticalMarginAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_get_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_put_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_get_TextReadingOrder(This,value)	\
    ( (This)->lpVtbl -> get_TextReadingOrder(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_put_TextReadingOrder(This,value)	\
    ( (This)->lpVtbl -> put_TextReadingOrder(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0331 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockStatics2[] = L"Windows.UI.Xaml.Controls.IRichTextBlockStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0331 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0331_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0331_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlockStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("0D6131E1-AF29-48CE-8AAF-74ECC28BFBB0")
                        IRichTextBlockStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLinesProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextLineBoundsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpticalMarginAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextReadingOrderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlockStatics2 = __uuidof(IRichTextBlockStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextLineBoundsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_get_MaxLinesProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxLinesProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_get_TextLineBoundsProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextLineBoundsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_get_SelectionHighlightColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_get_OpticalMarginAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpticalMarginAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_get_IsColorFontEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_get_TextReadingOrderProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextReadingOrderProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0332 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflow[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflow";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0332 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0332_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0332_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4F93749B-DAC3-4A42-9CBB-99F0DE37C071")
                        IRichTextBlockOverflow : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OverflowContentTarget( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OverflowContentTarget( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlock **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasOverflowContent( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentStart( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentEnd( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BaselineOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetPositionFromPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point point,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Focus( 
                                /* [in] */ ABI::Windows::UI::Xaml::FocusState value,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlockOverflow = __uuidof(IRichTextBlockOverflow);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OverflowContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentEnd )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaselineOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionFromPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Focus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CFocusState value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_OverflowContentTarget(This,value)	\
    ( (This)->lpVtbl -> get_OverflowContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_put_OverflowContentTarget(This,value)	\
    ( (This)->lpVtbl -> put_OverflowContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_ContentSource(This,value)	\
    ( (This)->lpVtbl -> get_ContentSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_HasOverflowContent(This,value)	\
    ( (This)->lpVtbl -> get_HasOverflowContent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_ContentStart(This,value)	\
    ( (This)->lpVtbl -> get_ContentStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_ContentEnd(This,value)	\
    ( (This)->lpVtbl -> get_ContentEnd(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_get_BaselineOffset(This,value)	\
    ( (This)->lpVtbl -> get_BaselineOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_GetPositionFromPoint(This,point,returnValue)	\
    ( (This)->lpVtbl -> GetPositionFromPoint(This,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_Focus(This,value,returnValue)	\
    ( (This)->lpVtbl -> Focus(This,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0333 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflowStatics[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0333 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0333_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0333_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflowStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("041AC2F7-4F2B-43C3-A122-3FEA9CA9DC87")
                        IRichTextBlockOverflowStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OverflowContentTargetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasOverflowContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlockOverflowStatics = __uuidof(IRichTextBlockOverflowStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OverflowContentTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasOverflowContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_get_OverflowContentTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_OverflowContentTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_get_PaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_PaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_get_HasOverflowContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HasOverflowContentProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0334 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflow2[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflow2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0334 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0334_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0334_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8742624E-A882-4826-B929-4D5C3905B9A1")
                        IRichTextBlockOverflow2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLines( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxLines( 
                                /* [in] */ INT32 value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlockOverflow2 = __uuidof(IRichTextBlockOverflow2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2 * This,
            /* [in] */ INT32 value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_get_MaxLines(This,value)	\
    ( (This)->lpVtbl -> get_MaxLines(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_put_MaxLines(This,value)	\
    ( (This)->lpVtbl -> put_MaxLines(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0335 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRichTextBlockOverflowStatics2[] = L"Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0335 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0335_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0335_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflowStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B5EBED4C-F8C4-4A3A-907F-E53E78279FA3")
                        IRichTextBlockOverflowStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLinesProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRichTextBlockOverflowStatics2 = __uuidof(IRichTextBlockOverflowStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_get_MaxLinesProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxLinesProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflowStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0336 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRowDefinition[] = L"Windows.UI.Xaml.Controls.IRowDefinition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0336 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0336_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0336_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRowDefinition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4ABAE829-D80C-4A5E-A48C-F8B3D3B6533D")
                        IRowDefinition : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::GridLength *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
                                /* [in] */ ABI::Windows::UI::Xaml::GridLength value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRowDefinition = __uuidof(IRowDefinition);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_get_Height(This,value)	\
    ( (This)->lpVtbl -> get_Height(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_put_Height(This,value)	\
    ( (This)->lpVtbl -> put_Height(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_get_MaxHeight(This,value)	\
    ( (This)->lpVtbl -> get_MaxHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_put_MaxHeight(This,value)	\
    ( (This)->lpVtbl -> put_MaxHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_get_MinHeight(This,value)	\
    ( (This)->lpVtbl -> get_MinHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_put_MinHeight(This,value)	\
    ( (This)->lpVtbl -> put_MinHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_get_ActualHeight(This,value)	\
    ( (This)->lpVtbl -> get_ActualHeight(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0337 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IRowDefinitionStatics[] = L"Windows.UI.Xaml.Controls.IRowDefinitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0337 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0337_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0337_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IRowDefinitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5ADF3FE5-2056-4724-94D6-E4812B022EC8")
                        IRowDefinitionStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRowDefinitionStatics = __uuidof(IRowDefinitionStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_get_HeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_get_MaxHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_get_MinHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinHeightProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIRowDefinitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0338 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollContentPresenter[] = L"Windows.UI.Xaml.Controls.IScrollContentPresenter";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0338 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0338_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0338_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollContentPresenter */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5712EE2B-0EEB-46D3-AA31-5F6801B8DE20")
                        IScrollContentPresenter : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanVerticallyScroll( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanVerticallyScroll( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanHorizontallyScroll( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanHorizontallyScroll( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtentWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtentHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ViewportWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ViewportHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollOwner( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScrollOwner( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE LineUp( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE LineDown( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE LineLeft( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE LineRight( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE PageUp( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE PageDown( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE PageLeft( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE PageRight( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE MouseWheelUp( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE MouseWheelDown( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE MouseWheelLeft( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE MouseWheelRight( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetHorizontalOffset( 
                                /* [in] */ DOUBLE offset) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetVerticalOffset( 
                                /* [in] */ DOUBLE offset) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE MakeVisible( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *visual,
                                /* [in] */ ABI::Windows::Foundation::Rect rectangle,
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollContentPresenter = __uuidof(IScrollContentPresenter);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanVerticallyScroll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanVerticallyScroll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanHorizontallyScroll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanHorizontallyScroll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtentWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtentHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScrollOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        HRESULT ( STDMETHODCALLTYPE *LineUp )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *LineDown )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *LineLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *LineRight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *PageUp )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *PageDown )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *PageLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *PageRight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *MouseWheelUp )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *MouseWheelDown )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *MouseWheelLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *MouseWheelRight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ DOUBLE offset);
        
        HRESULT ( STDMETHODCALLTYPE *SetVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ DOUBLE offset);
        
        HRESULT ( STDMETHODCALLTYPE *MakeVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *visual,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect rectangle,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_CanVerticallyScroll(This,value)	\
    ( (This)->lpVtbl -> get_CanVerticallyScroll(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_put_CanVerticallyScroll(This,value)	\
    ( (This)->lpVtbl -> put_CanVerticallyScroll(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_CanHorizontallyScroll(This,value)	\
    ( (This)->lpVtbl -> get_CanHorizontallyScroll(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_put_CanHorizontallyScroll(This,value)	\
    ( (This)->lpVtbl -> put_CanHorizontallyScroll(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_ExtentWidth(This,value)	\
    ( (This)->lpVtbl -> get_ExtentWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_ExtentHeight(This,value)	\
    ( (This)->lpVtbl -> get_ExtentHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_ViewportWidth(This,value)	\
    ( (This)->lpVtbl -> get_ViewportWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_ViewportHeight(This,value)	\
    ( (This)->lpVtbl -> get_ViewportHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_get_ScrollOwner(This,value)	\
    ( (This)->lpVtbl -> get_ScrollOwner(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_put_ScrollOwner(This,value)	\
    ( (This)->lpVtbl -> put_ScrollOwner(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_LineUp(This)	\
    ( (This)->lpVtbl -> LineUp(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_LineDown(This)	\
    ( (This)->lpVtbl -> LineDown(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_LineLeft(This)	\
    ( (This)->lpVtbl -> LineLeft(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_LineRight(This)	\
    ( (This)->lpVtbl -> LineRight(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_PageUp(This)	\
    ( (This)->lpVtbl -> PageUp(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_PageDown(This)	\
    ( (This)->lpVtbl -> PageDown(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_PageLeft(This)	\
    ( (This)->lpVtbl -> PageLeft(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_PageRight(This)	\
    ( (This)->lpVtbl -> PageRight(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_MouseWheelUp(This)	\
    ( (This)->lpVtbl -> MouseWheelUp(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_MouseWheelDown(This)	\
    ( (This)->lpVtbl -> MouseWheelDown(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_MouseWheelLeft(This)	\
    ( (This)->lpVtbl -> MouseWheelLeft(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_MouseWheelRight(This)	\
    ( (This)->lpVtbl -> MouseWheelRight(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_SetHorizontalOffset(This,offset)	\
    ( (This)->lpVtbl -> SetHorizontalOffset(This,offset) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_SetVerticalOffset(This,offset)	\
    ( (This)->lpVtbl -> SetVerticalOffset(This,offset) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_MakeVisible(This,visual,rectangle,returnValue)	\
    ( (This)->lpVtbl -> MakeVisible(This,visual,rectangle,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollContentPresenter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0339 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewer[] = L"Windows.UI.Xaml.Controls.IScrollViewer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0339 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0339_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0339_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("64E9BE00-4DC1-493D-ABE7-CBD3C577490D")
                        IScrollViewer : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalScrollBarVisibility( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalScrollBarVisibility( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalScrollBarVisibility( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalScrollBarVisibility( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHorizontalRailEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsHorizontalRailEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsVerticalRailEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsVerticalRailEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHorizontalScrollChainingEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsHorizontalScrollChainingEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsVerticalScrollChainingEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsVerticalScrollChainingEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomChainingEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsZoomChainingEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsScrollInertiaEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsScrollInertiaEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomInertiaEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsZoomInertiaEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalScrollMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalScrollMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalScrollMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalScrollMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ZoomMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZoomMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ZoomMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalSnapPointsAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::SnapPointsAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalSnapPointsAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::SnapPointsAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalSnapPointsAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::SnapPointsAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalSnapPointsAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::SnapPointsAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalSnapPointsType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::SnapPointsType *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalSnapPointsType( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::SnapPointsType value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalSnapPointsType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::SnapPointsType *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalSnapPointsType( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::SnapPointsType value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomSnapPointsType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::SnapPointsType *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZoomSnapPointsType( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::SnapPointsType value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ViewportWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollableWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ComputedHorizontalScrollBarVisibility( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Visibility *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtentWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ViewportHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollableHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ComputedVerticalScrollBarVisibility( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Visibility *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtentHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinZoomFactor( 
                                /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinZoomFactor( 
                                /* [in] */ FLOAT value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxZoomFactor( 
                                /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxZoomFactor( 
                                /* [in] */ FLOAT value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomFactor( 
                                /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomSnapPoints( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_float **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ViewChanged( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ViewChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ScrollToHorizontalOffset( 
                                /* [in] */ DOUBLE offset) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ScrollToVerticalOffset( 
                                /* [in] */ DOUBLE offset) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ZoomToFactor( 
                                /* [in] */ FLOAT factor) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE InvalidateScrollInfo( void) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDeferredScrollingEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsDeferredScrollingEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BringIntoViewOnFocusChange( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BringIntoViewOnFocusChange( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewer = __uuidof(IScrollViewer);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsHorizontalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVerticalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsVerticalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsHorizontalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVerticalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsVerticalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScrollInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsScrollInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalSnapPointsAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalSnapPointsAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalSnapPointsType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalSnapPointsType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPointsType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomSnapPointsType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CSnapPointsType value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollableWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComputedHorizontalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtentWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollableHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComputedVerticalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtentHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinZoomFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinZoomFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ FLOAT value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxZoomFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxZoomFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ FLOAT value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPoints )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_float **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ViewChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ViewChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollToHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ DOUBLE offset);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollToVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ DOUBLE offset);
        
        HRESULT ( STDMETHODCALLTYPE *ZoomToFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ FLOAT factor);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateScrollInfo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDeferredScrollingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsDeferredScrollingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewOnFocusChange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BringIntoViewOnFocusChange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_HorizontalScrollBarVisibility(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalScrollBarVisibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_HorizontalScrollBarVisibility(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalScrollBarVisibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_VerticalScrollBarVisibility(This,value)	\
    ( (This)->lpVtbl -> get_VerticalScrollBarVisibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_VerticalScrollBarVisibility(This,value)	\
    ( (This)->lpVtbl -> put_VerticalScrollBarVisibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsHorizontalRailEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsHorizontalRailEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsHorizontalRailEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsHorizontalRailEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsVerticalRailEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsVerticalRailEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsVerticalRailEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsVerticalRailEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsHorizontalScrollChainingEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsHorizontalScrollChainingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsHorizontalScrollChainingEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsHorizontalScrollChainingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsVerticalScrollChainingEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsVerticalScrollChainingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsVerticalScrollChainingEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsVerticalScrollChainingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsZoomChainingEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomChainingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsZoomChainingEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsZoomChainingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsScrollInertiaEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsScrollInertiaEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsScrollInertiaEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsScrollInertiaEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsZoomInertiaEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomInertiaEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsZoomInertiaEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsZoomInertiaEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_HorizontalScrollMode(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalScrollMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_HorizontalScrollMode(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalScrollMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_VerticalScrollMode(This,value)	\
    ( (This)->lpVtbl -> get_VerticalScrollMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_VerticalScrollMode(This,value)	\
    ( (This)->lpVtbl -> put_VerticalScrollMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ZoomMode(This,value)	\
    ( (This)->lpVtbl -> get_ZoomMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_ZoomMode(This,value)	\
    ( (This)->lpVtbl -> put_ZoomMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_HorizontalSnapPointsAlignment(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalSnapPointsAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_HorizontalSnapPointsAlignment(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalSnapPointsAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_VerticalSnapPointsAlignment(This,value)	\
    ( (This)->lpVtbl -> get_VerticalSnapPointsAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_VerticalSnapPointsAlignment(This,value)	\
    ( (This)->lpVtbl -> put_VerticalSnapPointsAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_HorizontalSnapPointsType(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalSnapPointsType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_HorizontalSnapPointsType(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalSnapPointsType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_VerticalSnapPointsType(This,value)	\
    ( (This)->lpVtbl -> get_VerticalSnapPointsType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_VerticalSnapPointsType(This,value)	\
    ( (This)->lpVtbl -> put_VerticalSnapPointsType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ZoomSnapPointsType(This,value)	\
    ( (This)->lpVtbl -> get_ZoomSnapPointsType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_ZoomSnapPointsType(This,value)	\
    ( (This)->lpVtbl -> put_ZoomSnapPointsType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ViewportWidth(This,value)	\
    ( (This)->lpVtbl -> get_ViewportWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ScrollableWidth(This,value)	\
    ( (This)->lpVtbl -> get_ScrollableWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ComputedHorizontalScrollBarVisibility(This,value)	\
    ( (This)->lpVtbl -> get_ComputedHorizontalScrollBarVisibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ExtentWidth(This,value)	\
    ( (This)->lpVtbl -> get_ExtentWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ViewportHeight(This,value)	\
    ( (This)->lpVtbl -> get_ViewportHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ScrollableHeight(This,value)	\
    ( (This)->lpVtbl -> get_ScrollableHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ComputedVerticalScrollBarVisibility(This,value)	\
    ( (This)->lpVtbl -> get_ComputedVerticalScrollBarVisibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ExtentHeight(This,value)	\
    ( (This)->lpVtbl -> get_ExtentHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_MinZoomFactor(This,value)	\
    ( (This)->lpVtbl -> get_MinZoomFactor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_MinZoomFactor(This,value)	\
    ( (This)->lpVtbl -> put_MinZoomFactor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_MaxZoomFactor(This,value)	\
    ( (This)->lpVtbl -> get_MaxZoomFactor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_MaxZoomFactor(This,value)	\
    ( (This)->lpVtbl -> put_MaxZoomFactor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ZoomFactor(This,value)	\
    ( (This)->lpVtbl -> get_ZoomFactor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_ZoomSnapPoints(This,value)	\
    ( (This)->lpVtbl -> get_ZoomSnapPoints(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_add_ViewChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_ViewChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_remove_ViewChanged(This,token)	\
    ( (This)->lpVtbl -> remove_ViewChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_ScrollToHorizontalOffset(This,offset)	\
    ( (This)->lpVtbl -> ScrollToHorizontalOffset(This,offset) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_ScrollToVerticalOffset(This,offset)	\
    ( (This)->lpVtbl -> ScrollToVerticalOffset(This,offset) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_ZoomToFactor(This,factor)	\
    ( (This)->lpVtbl -> ZoomToFactor(This,factor) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_InvalidateScrollInfo(This)	\
    ( (This)->lpVtbl -> InvalidateScrollInfo(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_IsDeferredScrollingEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsDeferredScrollingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_IsDeferredScrollingEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsDeferredScrollingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_get_BringIntoViewOnFocusChange(This,value)	\
    ( (This)->lpVtbl -> get_BringIntoViewOnFocusChange(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_put_BringIntoViewOnFocusChange(This,value)	\
    ( (This)->lpVtbl -> put_BringIntoViewOnFocusChange(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0340 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerStatics[] = L"Windows.UI.Xaml.Controls.IScrollViewerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0340 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0340_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0340_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("33D1299D-8D6E-4290-BF22-905CCCD04D31")
                        IScrollViewerStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalSnapPointsAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalSnapPointsAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalSnapPointsTypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalSnapPointsTypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomSnapPointsTypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffsetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ViewportWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollableWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ComputedHorizontalScrollBarVisibilityProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtentWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffsetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ViewportHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollableHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ComputedVerticalScrollBarVisibilityProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtentHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinZoomFactorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxZoomFactorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomFactorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomSnapPointsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalScrollBarVisibilityProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetHorizontalScrollBarVisibility( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility *horizontalScrollBarVisibility) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetHorizontalScrollBarVisibility( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility horizontalScrollBarVisibility) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalScrollBarVisibilityProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetVerticalScrollBarVisibility( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility *verticalScrollBarVisibility) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetVerticalScrollBarVisibility( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollBarVisibility verticalScrollBarVisibility) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHorizontalRailEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsHorizontalRailEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isHorizontalRailEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsHorizontalRailEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isHorizontalRailEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsVerticalRailEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsVerticalRailEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isVerticalRailEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsVerticalRailEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isVerticalRailEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHorizontalScrollChainingEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsHorizontalScrollChainingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isHorizontalScrollChainingEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsHorizontalScrollChainingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isHorizontalScrollChainingEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsVerticalScrollChainingEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsVerticalScrollChainingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isVerticalScrollChainingEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsVerticalScrollChainingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isVerticalScrollChainingEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomChainingEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsZoomChainingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isZoomChainingEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsZoomChainingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isZoomChainingEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsScrollInertiaEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsScrollInertiaEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isScrollInertiaEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsScrollInertiaEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isScrollInertiaEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomInertiaEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsZoomInertiaEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isZoomInertiaEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsZoomInertiaEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isZoomInertiaEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalScrollModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetHorizontalScrollMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollMode *horizontalScrollMode) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetHorizontalScrollMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollMode horizontalScrollMode) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalScrollModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetVerticalScrollMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ScrollMode *verticalScrollMode) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetVerticalScrollMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ScrollMode verticalScrollMode) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetZoomMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ZoomMode *zoomMode) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetZoomMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ZoomMode zoomMode) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDeferredScrollingEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsDeferredScrollingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *isDeferredScrollingEnabled) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetIsDeferredScrollingEnabled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean isDeferredScrollingEnabled) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BringIntoViewOnFocusChangeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetBringIntoViewOnFocusChange( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out boolean *bringIntoViewOnFocusChange) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetBringIntoViewOnFocusChange( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ boolean bringIntoViewOnFocusChange) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewerStatics = __uuidof(IScrollViewerStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalSnapPointsTypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalSnapPointsTypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPointsTypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollableWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComputedHorizontalScrollBarVisibilityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtentWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewportHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollableHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComputedVerticalScrollBarVisibilityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtentHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinZoomFactorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxZoomFactorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomSnapPointsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollBarVisibilityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetHorizontalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility *horizontalScrollBarVisibility);
        
        HRESULT ( STDMETHODCALLTYPE *SetHorizontalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility horizontalScrollBarVisibility);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollBarVisibilityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetVerticalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility *verticalScrollBarVisibility);
        
        HRESULT ( STDMETHODCALLTYPE *SetVerticalScrollBarVisibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollBarVisibility verticalScrollBarVisibility);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalRailEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsHorizontalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isHorizontalRailEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsHorizontalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isHorizontalRailEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVerticalRailEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsVerticalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isVerticalRailEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsVerticalRailEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isVerticalRailEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHorizontalScrollChainingEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsHorizontalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isHorizontalScrollChainingEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsHorizontalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isHorizontalScrollChainingEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVerticalScrollChainingEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsVerticalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isVerticalScrollChainingEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsVerticalScrollChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isVerticalScrollChainingEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomChainingEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsZoomChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isZoomChainingEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsZoomChainingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isZoomChainingEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsScrollInertiaEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsScrollInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isScrollInertiaEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsScrollInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isScrollInertiaEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomInertiaEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsZoomInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isZoomInertiaEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsZoomInertiaEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isZoomInertiaEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalScrollModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetHorizontalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode *horizontalScrollMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetHorizontalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode horizontalScrollMode);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalScrollModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetVerticalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode *verticalScrollMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetVerticalScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CScrollMode verticalScrollMode);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetZoomMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode *zoomMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetZoomMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CZoomMode zoomMode);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDeferredScrollingEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsDeferredScrollingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *isDeferredScrollingEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsDeferredScrollingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean isDeferredScrollingEnabled);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewOnFocusChangeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetBringIntoViewOnFocusChange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out boolean *bringIntoViewOnFocusChange);
        
        HRESULT ( STDMETHODCALLTYPE *SetBringIntoViewOnFocusChange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ boolean bringIntoViewOnFocusChange);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_HorizontalSnapPointsAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalSnapPointsAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_VerticalSnapPointsAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalSnapPointsAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_HorizontalSnapPointsTypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalSnapPointsTypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_VerticalSnapPointsTypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalSnapPointsTypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ZoomSnapPointsTypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZoomSnapPointsTypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_HorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ViewportWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ViewportWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ScrollableWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ScrollableWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ComputedHorizontalScrollBarVisibilityProperty(This,value)	\
    ( (This)->lpVtbl -> get_ComputedHorizontalScrollBarVisibilityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ExtentWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExtentWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_VerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ViewportHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ViewportHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ScrollableHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ScrollableHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ComputedVerticalScrollBarVisibilityProperty(This,value)	\
    ( (This)->lpVtbl -> get_ComputedVerticalScrollBarVisibilityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ExtentHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExtentHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_MinZoomFactorProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinZoomFactorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_MaxZoomFactorProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxZoomFactorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ZoomFactorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZoomFactorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ZoomSnapPointsProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZoomSnapPointsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_HorizontalScrollBarVisibilityProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalScrollBarVisibilityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetHorizontalScrollBarVisibility(This,element,horizontalScrollBarVisibility)	\
    ( (This)->lpVtbl -> GetHorizontalScrollBarVisibility(This,element,horizontalScrollBarVisibility) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetHorizontalScrollBarVisibility(This,element,horizontalScrollBarVisibility)	\
    ( (This)->lpVtbl -> SetHorizontalScrollBarVisibility(This,element,horizontalScrollBarVisibility) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_VerticalScrollBarVisibilityProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalScrollBarVisibilityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetVerticalScrollBarVisibility(This,element,verticalScrollBarVisibility)	\
    ( (This)->lpVtbl -> GetVerticalScrollBarVisibility(This,element,verticalScrollBarVisibility) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetVerticalScrollBarVisibility(This,element,verticalScrollBarVisibility)	\
    ( (This)->lpVtbl -> SetVerticalScrollBarVisibility(This,element,verticalScrollBarVisibility) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsHorizontalRailEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsHorizontalRailEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsHorizontalRailEnabled(This,element,isHorizontalRailEnabled)	\
    ( (This)->lpVtbl -> GetIsHorizontalRailEnabled(This,element,isHorizontalRailEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsHorizontalRailEnabled(This,element,isHorizontalRailEnabled)	\
    ( (This)->lpVtbl -> SetIsHorizontalRailEnabled(This,element,isHorizontalRailEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsVerticalRailEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsVerticalRailEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsVerticalRailEnabled(This,element,isVerticalRailEnabled)	\
    ( (This)->lpVtbl -> GetIsVerticalRailEnabled(This,element,isVerticalRailEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsVerticalRailEnabled(This,element,isVerticalRailEnabled)	\
    ( (This)->lpVtbl -> SetIsVerticalRailEnabled(This,element,isVerticalRailEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsHorizontalScrollChainingEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsHorizontalScrollChainingEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsHorizontalScrollChainingEnabled(This,element,isHorizontalScrollChainingEnabled)	\
    ( (This)->lpVtbl -> GetIsHorizontalScrollChainingEnabled(This,element,isHorizontalScrollChainingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsHorizontalScrollChainingEnabled(This,element,isHorizontalScrollChainingEnabled)	\
    ( (This)->lpVtbl -> SetIsHorizontalScrollChainingEnabled(This,element,isHorizontalScrollChainingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsVerticalScrollChainingEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsVerticalScrollChainingEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsVerticalScrollChainingEnabled(This,element,isVerticalScrollChainingEnabled)	\
    ( (This)->lpVtbl -> GetIsVerticalScrollChainingEnabled(This,element,isVerticalScrollChainingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsVerticalScrollChainingEnabled(This,element,isVerticalScrollChainingEnabled)	\
    ( (This)->lpVtbl -> SetIsVerticalScrollChainingEnabled(This,element,isVerticalScrollChainingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsZoomChainingEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomChainingEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsZoomChainingEnabled(This,element,isZoomChainingEnabled)	\
    ( (This)->lpVtbl -> GetIsZoomChainingEnabled(This,element,isZoomChainingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsZoomChainingEnabled(This,element,isZoomChainingEnabled)	\
    ( (This)->lpVtbl -> SetIsZoomChainingEnabled(This,element,isZoomChainingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsScrollInertiaEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsScrollInertiaEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsScrollInertiaEnabled(This,element,isScrollInertiaEnabled)	\
    ( (This)->lpVtbl -> GetIsScrollInertiaEnabled(This,element,isScrollInertiaEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsScrollInertiaEnabled(This,element,isScrollInertiaEnabled)	\
    ( (This)->lpVtbl -> SetIsScrollInertiaEnabled(This,element,isScrollInertiaEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsZoomInertiaEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomInertiaEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsZoomInertiaEnabled(This,element,isZoomInertiaEnabled)	\
    ( (This)->lpVtbl -> GetIsZoomInertiaEnabled(This,element,isZoomInertiaEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsZoomInertiaEnabled(This,element,isZoomInertiaEnabled)	\
    ( (This)->lpVtbl -> SetIsZoomInertiaEnabled(This,element,isZoomInertiaEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_HorizontalScrollModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalScrollModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetHorizontalScrollMode(This,element,horizontalScrollMode)	\
    ( (This)->lpVtbl -> GetHorizontalScrollMode(This,element,horizontalScrollMode) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetHorizontalScrollMode(This,element,horizontalScrollMode)	\
    ( (This)->lpVtbl -> SetHorizontalScrollMode(This,element,horizontalScrollMode) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_VerticalScrollModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalScrollModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetVerticalScrollMode(This,element,verticalScrollMode)	\
    ( (This)->lpVtbl -> GetVerticalScrollMode(This,element,verticalScrollMode) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetVerticalScrollMode(This,element,verticalScrollMode)	\
    ( (This)->lpVtbl -> SetVerticalScrollMode(This,element,verticalScrollMode) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_ZoomModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZoomModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetZoomMode(This,element,zoomMode)	\
    ( (This)->lpVtbl -> GetZoomMode(This,element,zoomMode) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetZoomMode(This,element,zoomMode)	\
    ( (This)->lpVtbl -> SetZoomMode(This,element,zoomMode) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_IsDeferredScrollingEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsDeferredScrollingEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetIsDeferredScrollingEnabled(This,element,isDeferredScrollingEnabled)	\
    ( (This)->lpVtbl -> GetIsDeferredScrollingEnabled(This,element,isDeferredScrollingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetIsDeferredScrollingEnabled(This,element,isDeferredScrollingEnabled)	\
    ( (This)->lpVtbl -> SetIsDeferredScrollingEnabled(This,element,isDeferredScrollingEnabled) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_get_BringIntoViewOnFocusChangeProperty(This,value)	\
    ( (This)->lpVtbl -> get_BringIntoViewOnFocusChangeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_GetBringIntoViewOnFocusChange(This,element,bringIntoViewOnFocusChange)	\
    ( (This)->lpVtbl -> GetBringIntoViewOnFocusChange(This,element,bringIntoViewOnFocusChange) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_SetBringIntoViewOnFocusChange(This,element,bringIntoViewOnFocusChange)	\
    ( (This)->lpVtbl -> SetBringIntoViewOnFocusChange(This,element,bringIntoViewOnFocusChange) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0341 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewer2[] = L"Windows.UI.Xaml.Controls.IScrollViewer2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0341 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0341_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0341_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewer2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("64E9BE10-4DD1-494D-ABF7-CBD3C577491D")
                        IScrollViewer2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopLeftHeader( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TopLeftHeader( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LeftHeader( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LeftHeader( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopHeader( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TopHeader( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ViewChanging( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ViewChanging( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ChangeView( 
                                /* [in] */ __RPC__in_opt __FIReference_1_double *horizontalOffset,
                                /* [in] */ __RPC__in_opt __FIReference_1_double *verticalOffset,
                                /* [in] */ __RPC__in_opt __FIReference_1_float *zoomFactor,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ChangeViewWithOptionalAnimation( 
                                /* [in] */ __RPC__in_opt __FIReference_1_double *horizontalOffset,
                                /* [in] */ __RPC__in_opt __FIReference_1_double *verticalOffset,
                                /* [in] */ __RPC__in_opt __FIReference_1_float *zoomFactor,
                                /* [in] */ boolean disableAnimation,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewer2 = __uuidof(IScrollViewer2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopLeftHeader )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TopLeftHeader )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeftHeader )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LeftHeader )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopHeader )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TopHeader )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ViewChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CScrollViewerViewChangingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ViewChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ChangeView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in_opt __FIReference_1_double *horizontalOffset,
            /* [in] */ __RPC__in_opt __FIReference_1_double *verticalOffset,
            /* [in] */ __RPC__in_opt __FIReference_1_float *zoomFactor,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ChangeViewWithOptionalAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2 * This,
            /* [in] */ __RPC__in_opt __FIReference_1_double *horizontalOffset,
            /* [in] */ __RPC__in_opt __FIReference_1_double *verticalOffset,
            /* [in] */ __RPC__in_opt __FIReference_1_float *zoomFactor,
            /* [in] */ boolean disableAnimation,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_get_TopLeftHeader(This,value)	\
    ( (This)->lpVtbl -> get_TopLeftHeader(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_put_TopLeftHeader(This,value)	\
    ( (This)->lpVtbl -> put_TopLeftHeader(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_get_LeftHeader(This,value)	\
    ( (This)->lpVtbl -> get_LeftHeader(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_put_LeftHeader(This,value)	\
    ( (This)->lpVtbl -> put_LeftHeader(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_get_TopHeader(This,value)	\
    ( (This)->lpVtbl -> get_TopHeader(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_put_TopHeader(This,value)	\
    ( (This)->lpVtbl -> put_TopHeader(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_add_ViewChanging(This,value,token)	\
    ( (This)->lpVtbl -> add_ViewChanging(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_remove_ViewChanging(This,token)	\
    ( (This)->lpVtbl -> remove_ViewChanging(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_ChangeView(This,horizontalOffset,verticalOffset,zoomFactor,returnValue)	\
    ( (This)->lpVtbl -> ChangeView(This,horizontalOffset,verticalOffset,zoomFactor,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_ChangeViewWithOptionalAnimation(This,horizontalOffset,verticalOffset,zoomFactor,disableAnimation,returnValue)	\
    ( (This)->lpVtbl -> ChangeViewWithOptionalAnimation(This,horizontalOffset,verticalOffset,zoomFactor,disableAnimation,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0342 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerStatics2[] = L"Windows.UI.Xaml.Controls.IScrollViewerStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0342 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0342_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0342_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewerStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("33D129AD-8D7E-42A0-BF32-905CCCD04D41")
                        IScrollViewerStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopLeftHeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LeftHeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopHeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewerStatics2 = __uuidof(IScrollViewerStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopLeftHeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeftHeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopHeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_get_TopLeftHeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_TopLeftHeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_get_LeftHeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_LeftHeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_get_TopHeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_TopHeaderProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0343 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerView[] = L"Windows.UI.Xaml.Controls.IScrollViewerView";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0343 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0343_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0343_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewerView */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("64E9BE01-4DC2-493E-ABE8-CBD3C577490E")
                        IScrollViewerView : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomFactor( 
                                /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewerView = __uuidof(IScrollViewerView);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomFactor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView * This,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_get_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_get_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_get_ZoomFactor(This,value)	\
    ( (This)->lpVtbl -> get_ZoomFactor(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0344 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0344 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0344_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0344_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewerViewChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4DD04F7E-7A11-4B2E-9933-577DF39252B6")
                        IScrollViewerViewChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsIntermediate( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewerViewChangedEventArgs = __uuidof(IScrollViewerViewChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsIntermediate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_get_IsIntermediate(This,value)	\
    ( (This)->lpVtbl -> get_IsIntermediate(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0345 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IScrollViewerViewChangingEventArgs[] = L"Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0345 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0345_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0345_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IScrollViewerViewChangingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4DD04F7F-7A11-4B2E-9933-577DF39252B6")
                        IScrollViewerViewChangingEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NextView( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IScrollViewerView **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FinalView( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IScrollViewerView **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsInertial( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScrollViewerViewChangingEventArgs = __uuidof(IScrollViewerViewChangingEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NextView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FinalView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerView **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInertial )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_get_NextView(This,value)	\
    ( (This)->lpVtbl -> get_NextView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_get_FinalView(This,value)	\
    ( (This)->lpVtbl -> get_FinalView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_get_IsInertial(This,value)	\
    ( (This)->lpVtbl -> get_IsInertial(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewerViewChangingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0346 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISelectionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISelectionChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0346 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0346_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0346_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISelectionChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C972D2DC-B609-4758-851E-A799C21DE97D")
                        ISelectionChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AddedItems( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RemovedItems( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISelectionChangedEventArgs = __uuidof(ISelectionChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AddedItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RemovedItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_IInspectable **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_get_AddedItems(This,value)	\
    ( (This)->lpVtbl -> get_AddedItems(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_get_RemovedItems(This,value)	\
    ( (This)->lpVtbl -> get_RemovedItems(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0347 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISelectionChangedEventArgsFactory[] = L"Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0347 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0347_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0347_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISelectionChangedEventArgsFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("11A8B6B5-2830-4517-84CD-5524C8B88B45")
                        ISelectionChangedEventArgsFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithRemovedItemsAndAddedItems( 
                                /* [in] */ __RPC__in_opt __FIVector_1_IInspectable *removedItems,
                                /* [in] */ __RPC__in_opt __FIVector_1_IInspectable *addedItems,
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISelectionChangedEventArgs **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISelectionChangedEventArgsFactory = __uuidof(ISelectionChangedEventArgsFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithRemovedItemsAndAddedItems )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory * This,
            /* [in] */ __RPC__in_opt __FIVector_1_IInspectable *removedItems,
            /* [in] */ __RPC__in_opt __FIVector_1_IInspectable *addedItems,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgs **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_CreateInstanceWithRemovedItemsAndAddedItems(This,removedItems,addedItems,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithRemovedItemsAndAddedItems(This,removedItems,addedItems,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISelectionChangedEventArgsFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0348 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoom[] = L"Windows.UI.Xaml.Controls.ISemanticZoom";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0348 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0348_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0348_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISemanticZoom */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("019FFF21-ECE6-4FBC-BF40-8938D4813E27")
                        ISemanticZoom : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomedInView( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomInformation **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZoomedInView( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomInformation *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomedOutView( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomInformation **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ZoomedOutView( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomInformation *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomedInViewActive( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsZoomedInViewActive( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanChangeViews( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanChangeViews( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ViewChangeStarted( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ViewChangeStarted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ViewChangeCompleted( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomViewChangedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ViewChangeCompleted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ToggleActiveView( void) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomOutButtonEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsZoomOutButtonEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISemanticZoom = __uuidof(ISemanticZoom);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomedInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomedInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomedOutView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ZoomedOutView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomInformation *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomedInViewActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanChangeViews )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanChangeViews )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ViewChangeStarted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ViewChangeStarted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ViewChangeCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ViewChangeCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ToggleActiveView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomOutButtonEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsZoomOutButtonEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_get_ZoomedInView(This,value)	\
    ( (This)->lpVtbl -> get_ZoomedInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_put_ZoomedInView(This,value)	\
    ( (This)->lpVtbl -> put_ZoomedInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_get_ZoomedOutView(This,value)	\
    ( (This)->lpVtbl -> get_ZoomedOutView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_put_ZoomedOutView(This,value)	\
    ( (This)->lpVtbl -> put_ZoomedOutView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_get_IsZoomedInViewActive(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomedInViewActive(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_put_IsZoomedInViewActive(This,value)	\
    ( (This)->lpVtbl -> put_IsZoomedInViewActive(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_get_CanChangeViews(This,value)	\
    ( (This)->lpVtbl -> get_CanChangeViews(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_put_CanChangeViews(This,value)	\
    ( (This)->lpVtbl -> put_CanChangeViews(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_add_ViewChangeStarted(This,value,token)	\
    ( (This)->lpVtbl -> add_ViewChangeStarted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_remove_ViewChangeStarted(This,token)	\
    ( (This)->lpVtbl -> remove_ViewChangeStarted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_add_ViewChangeCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_ViewChangeCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_remove_ViewChangeCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_ViewChangeCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_ToggleActiveView(This)	\
    ( (This)->lpVtbl -> ToggleActiveView(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_get_IsZoomOutButtonEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomOutButtonEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_put_IsZoomOutButtonEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsZoomOutButtonEnabled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0349 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomStatics[] = L"Windows.UI.Xaml.Controls.ISemanticZoomStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0349 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0349_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0349_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISemanticZoomStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8EF17EF2-9898-4666-B285-3ED38A07910E")
                        ISemanticZoomStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomedInViewProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ZoomedOutViewProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomedInViewActiveProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanChangeViewsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomOutButtonEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISemanticZoomStatics = __uuidof(ISemanticZoomStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomedInViewProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ZoomedOutViewProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewActiveProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanChangeViewsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomOutButtonEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_get_ZoomedInViewProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZoomedInViewProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_get_ZoomedOutViewProperty(This,value)	\
    ( (This)->lpVtbl -> get_ZoomedOutViewProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_get_IsZoomedInViewActiveProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomedInViewActiveProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_get_CanChangeViewsProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanChangeViewsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_get_IsZoomOutButtonEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomOutButtonEnabledProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0350 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomLocation[] = L"Windows.UI.Xaml.Controls.ISemanticZoomLocation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0350 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0350_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0350_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("42011736-E3C2-496B-BC4E-D750D4375B9A")
                        ISemanticZoomLocation : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Item( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Bounds( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Bounds( 
                                /* [in] */ ABI::Windows::Foundation::Rect value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISemanticZoomLocation = __uuidof(ISemanticZoomLocation);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Item )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_get_Item(This,value)	\
    ( (This)->lpVtbl -> get_Item(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_put_Item(This,value)	\
    ( (This)->lpVtbl -> put_Item(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_get_Bounds(This,value)	\
    ( (This)->lpVtbl -> get_Bounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_put_Bounds(This,value)	\
    ( (This)->lpVtbl -> put_Bounds(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0351 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISemanticZoomViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0351 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0351_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0351_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISemanticZoomViewChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("47DFC068-B569-4B19-842D-8E6CF90989AF")
                        ISemanticZoomViewChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSourceZoomedInView( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsSourceZoomedInView( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceItem( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SourceItem( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DestinationItem( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DestinationItem( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoomLocation *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISemanticZoomViewChangedEventArgs = __uuidof(ISemanticZoomViewChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSourceZoomedInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSourceZoomedInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DestinationItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DestinationItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomLocation *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_get_IsSourceZoomedInView(This,value)	\
    ( (This)->lpVtbl -> get_IsSourceZoomedInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_put_IsSourceZoomedInView(This,value)	\
    ( (This)->lpVtbl -> put_IsSourceZoomedInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_get_SourceItem(This,value)	\
    ( (This)->lpVtbl -> get_SourceItem(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_put_SourceItem(This,value)	\
    ( (This)->lpVtbl -> put_SourceItem(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_get_DestinationItem(This,value)	\
    ( (This)->lpVtbl -> get_DestinationItem(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_put_DestinationItem(This,value)	\
    ( (This)->lpVtbl -> put_DestinationItem(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoomViewChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0352 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISettingsFlyout[] = L"Windows.UI.Xaml.Controls.ISettingsFlyout";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0352 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0352_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0352_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISettingsFlyout */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("830BA82B-C55B-4E32-A51C-5791E024C8AF")
                        ISettingsFlyout : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Title( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Title( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderBackground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderBackground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderForeground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderForeground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IconSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IImageSource **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IconSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IImageSource *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::ISettingsFlyoutTemplateSettings **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_BackClick( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IBackClickEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_BackClick( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Show( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ShowIndependent( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Hide( void) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISettingsFlyout = __uuidof(ISettingsFlyout);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderBackground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderBackground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderForeground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderForeground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IconSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISettingsFlyoutTemplateSettings **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_BackClick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBackClickEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_BackClick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Show )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *ShowIndependent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *Hide )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_get_Title(This,value)	\
    ( (This)->lpVtbl -> get_Title(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_put_Title(This,value)	\
    ( (This)->lpVtbl -> put_Title(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_get_HeaderBackground(This,value)	\
    ( (This)->lpVtbl -> get_HeaderBackground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_put_HeaderBackground(This,value)	\
    ( (This)->lpVtbl -> put_HeaderBackground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_get_HeaderForeground(This,value)	\
    ( (This)->lpVtbl -> get_HeaderForeground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_put_HeaderForeground(This,value)	\
    ( (This)->lpVtbl -> put_HeaderForeground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_get_IconSource(This,value)	\
    ( (This)->lpVtbl -> get_IconSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_put_IconSource(This,value)	\
    ( (This)->lpVtbl -> put_IconSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_add_BackClick(This,value,token)	\
    ( (This)->lpVtbl -> add_BackClick(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_remove_BackClick(This,token)	\
    ( (This)->lpVtbl -> remove_BackClick(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_Show(This)	\
    ( (This)->lpVtbl -> Show(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_ShowIndependent(This)	\
    ( (This)->lpVtbl -> ShowIndependent(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_Hide(This)	\
    ( (This)->lpVtbl -> Hide(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0353 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISettingsFlyoutStatics[] = L"Windows.UI.Xaml.Controls.ISettingsFlyoutStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0353 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0353_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0353_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISettingsFlyoutStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D0E3B535-9157-4BE4-A42A-F591698846AC")
                        ISettingsFlyoutStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TitleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderBackgroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderForegroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IconSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISettingsFlyoutStatics = __uuidof(ISettingsFlyoutStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TitleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderBackgroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderForegroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_get_TitleProperty(This,value)	\
    ( (This)->lpVtbl -> get_TitleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_get_HeaderBackgroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderBackgroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_get_HeaderForegroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderForegroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_get_IconSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_IconSourceProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0354 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISettingsFlyoutFactory[] = L"Windows.UI.Xaml.Controls.ISettingsFlyoutFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0354 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0354_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0354_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISettingsFlyoutFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("480C7011-57AA-4DB6-B6FD-EC676F6D414E")
                        ISettingsFlyoutFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISettingsFlyout **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISettingsFlyoutFactory = __uuidof(ISettingsFlyoutFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyoutFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0355 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISlider[] = L"Windows.UI.Xaml.Controls.ISlider";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0355 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0355_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0355_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISlider */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISlider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("89572027-4C48-4700-8076-497BA73D9C18")
                        ISlider : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IntermediateValue( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IntermediateValue( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StepFrequency( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StepFrequency( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SnapsTo( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::SliderSnapsTo *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SnapsTo( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::SliderSnapsTo value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TickFrequency( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TickFrequency( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TickPlacement( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::TickPlacement *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TickPlacement( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::TickPlacement value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDirectionReversed( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsDirectionReversed( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsThumbToolTipEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsThumbToolTipEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ThumbToolTipValueConverter( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Data::IValueConverter **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ThumbToolTipValueConverter( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Data::IValueConverter *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISlider = __uuidof(ISlider);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntermediateValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntermediateValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StepFrequency )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StepFrequency )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapsTo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SnapsTo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TickFrequency )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TickFrequency )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TickPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TickPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CTickPlacement value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirectionReversed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirectionReversed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsThumbToolTipEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsThumbToolTipEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ThumbToolTipValueConverter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ThumbToolTipValueConverter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CData_CIValueConverter *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_IntermediateValue(This,value)	\
    ( (This)->lpVtbl -> get_IntermediateValue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_IntermediateValue(This,value)	\
    ( (This)->lpVtbl -> put_IntermediateValue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_StepFrequency(This,value)	\
    ( (This)->lpVtbl -> get_StepFrequency(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_StepFrequency(This,value)	\
    ( (This)->lpVtbl -> put_StepFrequency(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_SnapsTo(This,value)	\
    ( (This)->lpVtbl -> get_SnapsTo(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_SnapsTo(This,value)	\
    ( (This)->lpVtbl -> put_SnapsTo(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_TickFrequency(This,value)	\
    ( (This)->lpVtbl -> get_TickFrequency(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_TickFrequency(This,value)	\
    ( (This)->lpVtbl -> put_TickFrequency(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_TickPlacement(This,value)	\
    ( (This)->lpVtbl -> get_TickPlacement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_TickPlacement(This,value)	\
    ( (This)->lpVtbl -> put_TickPlacement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_IsDirectionReversed(This,value)	\
    ( (This)->lpVtbl -> get_IsDirectionReversed(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_IsDirectionReversed(This,value)	\
    ( (This)->lpVtbl -> put_IsDirectionReversed(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_IsThumbToolTipEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsThumbToolTipEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_IsThumbToolTipEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsThumbToolTipEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_get_ThumbToolTipValueConverter(This,value)	\
    ( (This)->lpVtbl -> get_ThumbToolTipValueConverter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider_put_ThumbToolTipValueConverter(This,value)	\
    ( (This)->lpVtbl -> put_ThumbToolTipValueConverter(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0356 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISliderStatics[] = L"Windows.UI.Xaml.Controls.ISliderStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0356 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0356_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0356_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISliderStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8A4363D7-7FDF-4D30-98FE-CE78C05B31CF")
                        ISliderStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IntermediateValueProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StepFrequencyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SnapsToProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TickFrequencyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TickPlacementProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDirectionReversedProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsThumbToolTipEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ThumbToolTipValueConverterProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISliderStatics = __uuidof(ISliderStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntermediateValueProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StepFrequencyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SnapsToProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TickFrequencyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TickPlacementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirectionReversedProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsThumbToolTipEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ThumbToolTipValueConverterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_IntermediateValueProperty(This,value)	\
    ( (This)->lpVtbl -> get_IntermediateValueProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_StepFrequencyProperty(This,value)	\
    ( (This)->lpVtbl -> get_StepFrequencyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_SnapsToProperty(This,value)	\
    ( (This)->lpVtbl -> get_SnapsToProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_TickFrequencyProperty(This,value)	\
    ( (This)->lpVtbl -> get_TickFrequencyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_TickPlacementProperty(This,value)	\
    ( (This)->lpVtbl -> get_TickPlacementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_IsDirectionReversedProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsDirectionReversedProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_IsThumbToolTipEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsThumbToolTipEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_get_ThumbToolTipValueConverterProperty(This,value)	\
    ( (This)->lpVtbl -> get_ThumbToolTipValueConverterProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0357 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISliderFactory[] = L"Windows.UI.Xaml.Controls.ISliderFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0357 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0357_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0357_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISliderFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("03A67B37-C7BF-437C-848F-8CB5B753EAB4")
                        ISliderFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISlider **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISliderFactory = __uuidof(ISliderFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISlider **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0358 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISlider2[] = L"Windows.UI.Xaml.Controls.ISlider2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0358 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0358_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0358_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISlider2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISlider2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("40A3C50E-87D6-4D2F-B1CF-B279CC996F26")
                        ISlider2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISlider2 = __uuidof(ISlider2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISlider2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0359 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISliderStatics2[] = L"Windows.UI.Xaml.Controls.ISliderStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0359 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0359_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0359_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISliderStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("00E7935D-79A5-4759-96A6-29E0A94ADD33")
                        ISliderStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISliderStatics2 = __uuidof(ISliderStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISliderStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0360 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanel[] = L"Windows.UI.Xaml.Controls.IStackPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0360 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0360_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0360_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IStackPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B8AE8FE2-D641-4FD7-80B4-7439207D2798")
                        IStackPanel : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AreScrollSnapPointsRegular( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AreScrollSnapPointsRegular( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IStackPanel = __uuidof(IStackPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegular )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreScrollSnapPointsRegular )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_get_AreScrollSnapPointsRegular(This,value)	\
    ( (This)->lpVtbl -> get_AreScrollSnapPointsRegular(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_put_AreScrollSnapPointsRegular(This,value)	\
    ( (This)->lpVtbl -> put_AreScrollSnapPointsRegular(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0361 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelStatics[] = L"Windows.UI.Xaml.Controls.IStackPanelStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0361 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0361_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0361_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IStackPanelStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F0D0CD93-4DBC-48A7-9914-954924657771")
                        IStackPanelStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AreScrollSnapPointsRegularProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IStackPanelStatics = __uuidof(IStackPanelStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegularProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_get_AreScrollSnapPointsRegularProperty(This,value)	\
    ( (This)->lpVtbl -> get_AreScrollSnapPointsRegularProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0362 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStackPanelFactory[] = L"Windows.UI.Xaml.Controls.IStackPanelFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0362 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0362_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0362_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IStackPanelFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("63D8248A-8B34-445A-808F-B6ECD62A27D9")
                        IStackPanelFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IStackPanel **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IStackPanelFactory = __uuidof(IStackPanelFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanel **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStackPanelFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0363 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStyleSelector[] = L"Windows.UI.Xaml.Controls.IStyleSelector";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0363 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0363_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0363_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IStyleSelector */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D1113F67-D8C1-4AE4-98F0-D8504502F08B")
                        IStyleSelector : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectStyle( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IStyleSelector = __uuidof(IStyleSelector);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_SelectStyle(This,item,container,returnValue)	\
    ( (This)->lpVtbl -> SelectStyle(This,item,container,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0364 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStyleSelectorOverrides[] = L"Windows.UI.Xaml.Controls.IStyleSelectorOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0364 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0364_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0364_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IStyleSelectorOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("08ADD66D-0E2E-43A0-AECA-8FAA94B9D017")
                        IStyleSelectorOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE SelectStyleCore( 
                                /* [in] */ __RPC__in_opt IInspectable *item,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *container,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IStyleSelectorOverrides = __uuidof(IStyleSelectorOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SelectStyleCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *container,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_SelectStyleCore(This,item,container,returnValue)	\
    ( (This)->lpVtbl -> SelectStyleCore(This,item,container,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0365 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IStyleSelectorFactory[] = L"Windows.UI.Xaml.Controls.IStyleSelectorFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0365 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0365_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0365_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IStyleSelectorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("9E942AE7-3761-447F-8F97-29E39D5EB310")
                        IStyleSelectorFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IStyleSelector **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IStyleSelectorFactory = __uuidof(IStyleSelectorFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelector **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIStyleSelectorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0366 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock[] = L"Windows.UI.Xaml.Controls.ITextBlock";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0366 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0366_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0366_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBlock */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AE2D9271-3B4A-45FC-8468-F7949548F4D5")
                        ITextBlock : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamily( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFamily( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IFontFamily *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeight( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontWeight *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontWeight( 
                                /* [in] */ ABI::Windows::UI::Text::FontWeight value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyle( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStyle *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStyle( 
                                /* [in] */ ABI::Windows::UI::Text::FontStyle value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStretch( 
                                /* [in] */ ABI::Windows::UI::Text::FontStretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacing( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharacterSpacing( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Foreground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Foreground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrapping( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextWrapping *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextWrapping( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextWrapping value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextTrimming( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextTrimming *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextTrimming( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextTrimming value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Text( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Inlines( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineStackingStrategy( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::LineStackingStrategy *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LineStackingStrategy( 
                                /* [in] */ ABI::Windows::UI::Xaml::LineStackingStrategy value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextSelectionEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTextSelectionEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentStart( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentEnd( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionEnd( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Documents::ITextPointer **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BaselineOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SelectionChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SelectionChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContextMenuOpening( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContextMenuOpeningEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContextMenuOpening( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Select( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Documents::ITextPointer *start,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Documents::ITextPointer *end) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Focus( 
                                /* [in] */ ABI::Windows::UI::Xaml::FocusState value,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBlock = __uuidof(ITextBlock);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontWeight value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStyle value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextTrimming )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextTrimming *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextTrimming )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextTrimming value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Inlines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDocuments__CInline **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategy )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LineStackingStrategy )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTextSelectionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentEnd )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaselineOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *Select )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer *start,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CDocuments_CITextPointer *end);
        
        HRESULT ( STDMETHODCALLTYPE *Focus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CFocusState value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_FontSize(This,value)	\
    ( (This)->lpVtbl -> get_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_FontSize(This,value)	\
    ( (This)->lpVtbl -> put_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_FontFamily(This,value)	\
    ( (This)->lpVtbl -> get_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_FontFamily(This,value)	\
    ( (This)->lpVtbl -> put_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_FontWeight(This,value)	\
    ( (This)->lpVtbl -> get_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_FontWeight(This,value)	\
    ( (This)->lpVtbl -> put_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_FontStyle(This,value)	\
    ( (This)->lpVtbl -> get_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_FontStyle(This,value)	\
    ( (This)->lpVtbl -> put_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_FontStretch(This,value)	\
    ( (This)->lpVtbl -> get_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_FontStretch(This,value)	\
    ( (This)->lpVtbl -> put_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> put_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_Foreground(This,value)	\
    ( (This)->lpVtbl -> get_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_Foreground(This,value)	\
    ( (This)->lpVtbl -> put_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> get_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> put_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_TextTrimming(This,value)	\
    ( (This)->lpVtbl -> get_TextTrimming(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_TextTrimming(This,value)	\
    ( (This)->lpVtbl -> put_TextTrimming(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> put_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_Text(This,value)	\
    ( (This)->lpVtbl -> get_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_Text(This,value)	\
    ( (This)->lpVtbl -> put_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_Inlines(This,value)	\
    ( (This)->lpVtbl -> get_Inlines(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_LineHeight(This,value)	\
    ( (This)->lpVtbl -> get_LineHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_LineHeight(This,value)	\
    ( (This)->lpVtbl -> put_LineHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_LineStackingStrategy(This,value)	\
    ( (This)->lpVtbl -> get_LineStackingStrategy(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_LineStackingStrategy(This,value)	\
    ( (This)->lpVtbl -> put_LineStackingStrategy(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_IsTextSelectionEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsTextSelectionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_put_IsTextSelectionEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsTextSelectionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_SelectedText(This,value)	\
    ( (This)->lpVtbl -> get_SelectedText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_ContentStart(This,value)	\
    ( (This)->lpVtbl -> get_ContentStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_ContentEnd(This,value)	\
    ( (This)->lpVtbl -> get_ContentEnd(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_SelectionStart(This,value)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_SelectionEnd(This,value)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_get_BaselineOffset(This,value)	\
    ( (This)->lpVtbl -> get_BaselineOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_add_SelectionChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SelectionChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_remove_SelectionChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SelectionChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_add_ContextMenuOpening(This,value,token)	\
    ( (This)->lpVtbl -> add_ContextMenuOpening(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_remove_ContextMenuOpening(This,token)	\
    ( (This)->lpVtbl -> remove_ContextMenuOpening(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_Select(This,start,end)	\
    ( (This)->lpVtbl -> Select(This,start,end) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_Focus(This,value,returnValue)	\
    ( (This)->lpVtbl -> Focus(This,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0367 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0367 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0367_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0367_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBlockStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("193EC042-A847-4552-B4E8-DB36655B840A")
                        ITextBlockStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamilyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForegroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrappingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextTrimmingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineStackingStrategyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextSelectionEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBlockStatics = __uuidof(ITextBlockStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextTrimmingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineStackingStrategyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextSelectionEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_FontSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_FontFamilyProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontFamilyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_FontWeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontWeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_FontStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStyleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_FontStretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_CharacterSpacingProperty(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_ForegroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_ForegroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_TextWrappingProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextWrappingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_TextTrimmingProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextTrimmingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_TextAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_TextProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_PaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_PaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_LineHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_LineHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_LineStackingStrategyProperty(This,value)	\
    ( (This)->lpVtbl -> get_LineStackingStrategyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_IsTextSelectionEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTextSelectionEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_get_SelectedTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectedTextProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0368 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlock2[] = L"Windows.UI.Xaml.Controls.ITextBlock2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0368 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0368_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0368_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBlock2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("45206A4C-0A4E-4FBF-AEE9-335D5A205F6E")
                        ITextBlock2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColor( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionHighlightColor( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLines( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxLines( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextLineBounds( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextLineBounds *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextLineBounds( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextLineBounds value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpticalMarginAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::OpticalMarginAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpticalMarginAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::OpticalMarginAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsColorFontEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextReadingOrder( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextReadingOrder *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextReadingOrder( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextReadingOrder value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBlock2 = __uuidof(ITextBlock2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLines )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextLineBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextLineBounds *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextLineBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextLineBounds value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpticalMarginAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrder )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextReadingOrder )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_get_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_put_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> put_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_get_MaxLines(This,value)	\
    ( (This)->lpVtbl -> get_MaxLines(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_put_MaxLines(This,value)	\
    ( (This)->lpVtbl -> put_MaxLines(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_get_TextLineBounds(This,value)	\
    ( (This)->lpVtbl -> get_TextLineBounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_put_TextLineBounds(This,value)	\
    ( (This)->lpVtbl -> put_TextLineBounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_get_OpticalMarginAlignment(This,value)	\
    ( (This)->lpVtbl -> get_OpticalMarginAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_put_OpticalMarginAlignment(This,value)	\
    ( (This)->lpVtbl -> put_OpticalMarginAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_get_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_put_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_get_TextReadingOrder(This,value)	\
    ( (This)->lpVtbl -> get_TextReadingOrder(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_put_TextReadingOrder(This,value)	\
    ( (This)->lpVtbl -> put_TextReadingOrder(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0369 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBlockStatics2[] = L"Windows.UI.Xaml.Controls.ITextBlockStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0369 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0369_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0369_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBlockStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("88100B1B-FF24-4B93-A0E6-F029C94871F1")
                        ITextBlockStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLinesProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextLineBoundsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpticalMarginAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextReadingOrderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBlockStatics2 = __uuidof(ITextBlockStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLinesProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextLineBoundsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpticalMarginAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextReadingOrderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_get_SelectionHighlightColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_get_MaxLinesProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxLinesProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_get_TextLineBoundsProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextLineBoundsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_get_OpticalMarginAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpticalMarginAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_get_IsColorFontEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_get_TextReadingOrderProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextReadingOrderProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBlockStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0370 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox[] = L"Windows.UI.Xaml.Controls.ITextBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0370 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0370_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0370_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E48F5A8B-1DFF-4352-A1F4-E516514EC882")
                        ITextBox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Text( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectedText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectedText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionLength( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionLength( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionStart( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLength( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxLength( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsReadOnly( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsReadOnly( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptsReturn( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AcceptsReturn( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrapping( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::TextWrapping *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TextWrapping( 
                                /* [in] */ ABI::Windows::UI::Xaml::TextWrapping value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSpellCheckEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsSpellCheckEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextPredictionEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTextPredictionEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InputScope( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Input::IInputScope **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_InputScope( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IInputScope *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_TextChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextChangedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_TextChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SelectionChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SelectionChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContextMenuOpening( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContextMenuOpeningEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContextMenuOpening( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Select( 
                                /* [in] */ INT32 start,
                                /* [in] */ INT32 length) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetRectFromCharacterIndex( 
                                /* [in] */ INT32 charIndex,
                                /* [in] */ boolean trailingEdge,
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBox = __uuidof(ITextBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsReadOnly )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AcceptsReturn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CTextWrapping *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextWrapping )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CTextWrapping value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSpellCheckEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTextPredictionEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InputScope )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_InputScope )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIInputScope *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_TextChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_TextChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SelectionChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContextMenuOpening )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Select )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ INT32 start,
            /* [in] */ INT32 length);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRectFromCharacterIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox * This,
            /* [in] */ INT32 charIndex,
            /* [in] */ boolean trailingEdge,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_Text(This,value)	\
    ( (This)->lpVtbl -> get_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_Text(This,value)	\
    ( (This)->lpVtbl -> put_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_SelectedText(This,value)	\
    ( (This)->lpVtbl -> get_SelectedText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_SelectedText(This,value)	\
    ( (This)->lpVtbl -> put_SelectedText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_SelectionLength(This,value)	\
    ( (This)->lpVtbl -> get_SelectionLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_SelectionLength(This,value)	\
    ( (This)->lpVtbl -> put_SelectionLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_SelectionStart(This,value)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_SelectionStart(This,value)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_MaxLength(This,value)	\
    ( (This)->lpVtbl -> get_MaxLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_MaxLength(This,value)	\
    ( (This)->lpVtbl -> put_MaxLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_IsReadOnly(This,value)	\
    ( (This)->lpVtbl -> get_IsReadOnly(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_IsReadOnly(This,value)	\
    ( (This)->lpVtbl -> put_IsReadOnly(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_AcceptsReturn(This,value)	\
    ( (This)->lpVtbl -> get_AcceptsReturn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_AcceptsReturn(This,value)	\
    ( (This)->lpVtbl -> put_AcceptsReturn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_TextAlignment(This,value)	\
    ( (This)->lpVtbl -> put_TextAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> get_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_TextWrapping(This,value)	\
    ( (This)->lpVtbl -> put_TextWrapping(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_IsSpellCheckEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsSpellCheckEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_IsSpellCheckEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsSpellCheckEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_IsTextPredictionEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsTextPredictionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_IsTextPredictionEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsTextPredictionEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_get_InputScope(This,value)	\
    ( (This)->lpVtbl -> get_InputScope(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_put_InputScope(This,value)	\
    ( (This)->lpVtbl -> put_InputScope(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_add_TextChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_TextChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_remove_TextChanged(This,token)	\
    ( (This)->lpVtbl -> remove_TextChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_add_SelectionChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SelectionChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_remove_SelectionChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SelectionChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_add_ContextMenuOpening(This,value,token)	\
    ( (This)->lpVtbl -> add_ContextMenuOpening(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_remove_ContextMenuOpening(This,token)	\
    ( (This)->lpVtbl -> remove_ContextMenuOpening(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_Select(This,start,length)	\
    ( (This)->lpVtbl -> Select(This,start,length) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_GetRectFromCharacterIndex(This,charIndex,trailingEdge,returnValue)	\
    ( (This)->lpVtbl -> GetRectFromCharacterIndex(This,charIndex,trailingEdge,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0371 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0371 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0371_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0371_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBoxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7E37F4FB-A4BC-4625-8838-8EB2A9091283")
                        ITextBoxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxLengthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsReadOnlyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptsReturnProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextWrappingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSpellCheckEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextPredictionEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InputScopeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBoxStatics = __uuidof(ITextBoxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnlyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptsReturnProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextWrappingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSpellCheckEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextPredictionEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InputScopeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_TextProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_MaxLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxLengthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_IsReadOnlyProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsReadOnlyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_AcceptsReturnProperty(This,value)	\
    ( (This)->lpVtbl -> get_AcceptsReturnProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_TextAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_TextWrappingProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextWrappingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_IsSpellCheckEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsSpellCheckEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_IsTextPredictionEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTextPredictionEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_get_InputScopeProperty(This,value)	\
    ( (This)->lpVtbl -> get_InputScopeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0372 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxFactory[] = L"Windows.UI.Xaml.Controls.ITextBoxFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0372 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0372_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0372_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBoxFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("710E4278-8529-47D3-8D8E-307E34CFF081")
                        ITextBoxFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ITextBox **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBoxFactory = __uuidof(ITextBoxFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0373 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBox2[] = L"Windows.UI.Xaml.Controls.ITextBox2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0373 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0373_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0373_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBox2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F7168C00-1432-462A-9405-38F385BFC37C")
                        ITextBox2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlaceholderText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColor( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SelectionHighlightColor( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreventKeyboardDisplayOnProgrammaticFocus( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PreventKeyboardDisplayOnProgrammaticFocus( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsColorFontEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Paste( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextControlPasteEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Paste( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBox2 = __uuidof(ITextBox2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionHighlightColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreventKeyboardDisplayOnProgrammaticFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsColorFontEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Paste )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Paste )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2 * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_get_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_put_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> put_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_get_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_put_SelectionHighlightColor(This,value)	\
    ( (This)->lpVtbl -> put_SelectionHighlightColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_get_PreventKeyboardDisplayOnProgrammaticFocus(This,value)	\
    ( (This)->lpVtbl -> get_PreventKeyboardDisplayOnProgrammaticFocus(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_put_PreventKeyboardDisplayOnProgrammaticFocus(This,value)	\
    ( (This)->lpVtbl -> put_PreventKeyboardDisplayOnProgrammaticFocus(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_get_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_put_IsColorFontEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsColorFontEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_add_Paste(This,value,token)	\
    ( (This)->lpVtbl -> add_Paste(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_remove_Paste(This,token)	\
    ( (This)->lpVtbl -> remove_Paste(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBox2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0374 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextBoxStatics2[] = L"Windows.UI.Xaml.Controls.ITextBoxStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0374 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0374_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0374_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextBoxStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7592F37D-4E76-4EE4-8E0F-7D6E1A23326B")
                        ITextBoxStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SelectionHighlightColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreventKeyboardDisplayOnProgrammaticFocusProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsColorFontEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextBoxStatics2 = __uuidof(ITextBoxStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionHighlightColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreventKeyboardDisplayOnProgrammaticFocusProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsColorFontEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_get_PlaceholderTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderTextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_get_SelectionHighlightColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_SelectionHighlightColorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value)	\
    ( (This)->lpVtbl -> get_PreventKeyboardDisplayOnProgrammaticFocusProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_get_IsColorFontEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsColorFontEnabledProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextBoxStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0375 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ITextChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0375 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0375_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0375_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4DD04F7D-7A11-4B2E-9933-577DF39252B6")
                        ITextChangedEventArgs : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ITextChangedEventArgs = __uuidof(ITextChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0376 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITextControlPasteEventArgs[] = L"Windows.UI.Xaml.Controls.ITextControlPasteEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0376 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0376_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0376_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITextControlPasteEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4BD1D625-221A-477E-BB2C-AD0C1ED125E7")
                        ITextControlPasteEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITextControlPasteEventArgs = __uuidof(ITextControlPasteEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITextControlPasteEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0377 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSwitch[] = L"Windows.UI.Xaml.Controls.IToggleSwitch";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0377 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0377_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0377_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToggleSwitch */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("331D8F00-C5F9-46A5-B6C8-EDE539304567")
                        IToggleSwitch : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOn( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsOn( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OnContent( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OnContent( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OnContentTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OnContentTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffContent( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OffContent( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffContentTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OffContentTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IToggleSwitchTemplateSettings **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Toggled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Toggled( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToggleSwitch = __uuidof(IToggleSwitch);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsOn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OnContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OnContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OnContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OnContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OffContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OffContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleSwitchTemplateSettings **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Toggled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Toggled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_IsOn(This,value)	\
    ( (This)->lpVtbl -> get_IsOn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_IsOn(This,value)	\
    ( (This)->lpVtbl -> put_IsOn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_OnContent(This,value)	\
    ( (This)->lpVtbl -> get_OnContent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_OnContent(This,value)	\
    ( (This)->lpVtbl -> put_OnContent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_OnContentTemplate(This,value)	\
    ( (This)->lpVtbl -> get_OnContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_OnContentTemplate(This,value)	\
    ( (This)->lpVtbl -> put_OnContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_OffContent(This,value)	\
    ( (This)->lpVtbl -> get_OffContent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_OffContent(This,value)	\
    ( (This)->lpVtbl -> put_OffContent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_OffContentTemplate(This,value)	\
    ( (This)->lpVtbl -> get_OffContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_put_OffContentTemplate(This,value)	\
    ( (This)->lpVtbl -> put_OffContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_add_Toggled(This,value,token)	\
    ( (This)->lpVtbl -> add_Toggled(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_remove_Toggled(This,token)	\
    ( (This)->lpVtbl -> remove_Toggled(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0378 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSwitchOverrides[] = L"Windows.UI.Xaml.Controls.IToggleSwitchOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0378 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0378_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0378_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToggleSwitchOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BFD07F53-F8CA-4E47-949E-9E80429B3D16")
                        IToggleSwitchOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnToggled( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnOnContentChanged( 
                                /* [in] */ __RPC__in_opt IInspectable *oldContent,
                                /* [in] */ __RPC__in_opt IInspectable *newContent) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnOffContentChanged( 
                                /* [in] */ __RPC__in_opt IInspectable *oldContent,
                                /* [in] */ __RPC__in_opt IInspectable *newContent) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnHeaderChanged( 
                                /* [in] */ __RPC__in_opt IInspectable *oldContent,
                                /* [in] */ __RPC__in_opt IInspectable *newContent) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToggleSwitchOverrides = __uuidof(IToggleSwitchOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnToggled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnOnContentChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *oldContent,
            /* [in] */ __RPC__in_opt IInspectable *newContent);
        
        HRESULT ( STDMETHODCALLTYPE *OnOffContentChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *oldContent,
            /* [in] */ __RPC__in_opt IInspectable *newContent);
        
        HRESULT ( STDMETHODCALLTYPE *OnHeaderChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *oldContent,
            /* [in] */ __RPC__in_opt IInspectable *newContent);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_OnToggled(This)	\
    ( (This)->lpVtbl -> OnToggled(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_OnOnContentChanged(This,oldContent,newContent)	\
    ( (This)->lpVtbl -> OnOnContentChanged(This,oldContent,newContent) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_OnOffContentChanged(This,oldContent,newContent)	\
    ( (This)->lpVtbl -> OnOffContentChanged(This,oldContent,newContent) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_OnHeaderChanged(This,oldContent,newContent)	\
    ( (This)->lpVtbl -> OnHeaderChanged(This,oldContent,newContent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0379 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleSwitchStatics[] = L"Windows.UI.Xaml.Controls.IToggleSwitchStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0379 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0379_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0379_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToggleSwitchStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1D37147F-97DF-4226-92CA-DDF453D7FD5A")
                        IToggleSwitchStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOnProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OnContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OnContentTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffContentTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToggleSwitchStatics = __uuidof(IToggleSwitchStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOnProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OnContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OnContentTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffContentTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_IsOnProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsOnProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_OnContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_OnContentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_OnContentTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_OnContentTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_OffContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_OffContentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_get_OffContentTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_OffContentTemplateProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitchStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0380 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTip[] = L"Windows.UI.Xaml.Controls.IToolTip";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0380 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0380_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0380_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToolTip */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7DE5D75F-4415-429F-B523-699BDB8C30DB")
                        IToolTip : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalOffset( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsOpen( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Placement( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::PlacementMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Placement( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::PlacementMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlacementTarget( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlacementTarget( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalOffset( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateSettings( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Primitives::IToolTipTemplateSettings **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Closed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Closed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Opened( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Opened( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToolTip = __uuidof(IToolTip);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsOpen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Placement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Placement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlacementTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlacementTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToolTipTemplateSettings **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Closed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Closed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Opened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Opened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_get_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_put_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_get_IsOpen(This,value)	\
    ( (This)->lpVtbl -> get_IsOpen(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_put_IsOpen(This,value)	\
    ( (This)->lpVtbl -> put_IsOpen(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_get_Placement(This,value)	\
    ( (This)->lpVtbl -> get_Placement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_put_Placement(This,value)	\
    ( (This)->lpVtbl -> put_Placement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_get_PlacementTarget(This,value)	\
    ( (This)->lpVtbl -> get_PlacementTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_put_PlacementTarget(This,value)	\
    ( (This)->lpVtbl -> put_PlacementTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_get_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_put_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_VerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_get_TemplateSettings(This,value)	\
    ( (This)->lpVtbl -> get_TemplateSettings(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_add_Closed(This,value,token)	\
    ( (This)->lpVtbl -> add_Closed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_remove_Closed(This,token)	\
    ( (This)->lpVtbl -> remove_Closed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_add_Opened(This,value,token)	\
    ( (This)->lpVtbl -> add_Opened(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_remove_Opened(This,token)	\
    ( (This)->lpVtbl -> remove_Opened(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0381 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipStatics[] = L"Windows.UI.Xaml.Controls.IToolTipStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0381 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0381_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0381_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToolTipStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F00285B8-4BA9-4F4F-86A7-86003813CEB3")
                        IToolTipStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffsetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOpenProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlacementProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlacementTargetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffsetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToolTipStatics = __uuidof(IToolTipStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpenProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlacementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlacementTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_get_HorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_get_IsOpenProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsOpenProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_get_PlacementProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlacementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_get_PlacementTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlacementTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_get_VerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0382 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipFactory[] = L"Windows.UI.Xaml.Controls.IToolTipFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0382 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0382_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0382_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToolTipFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("89839403-B538-49E3-A430-3AC037DC6FE0")
                        IToolTipFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IToolTip **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToolTipFactory = __uuidof(IToolTipFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTip **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0383 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipService[] = L"Windows.UI.Xaml.Controls.IToolTipService";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0383 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0383_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0383_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToolTipService */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("03A55F87-BFCC-4A1E-8FEA-98F610832CEA")
                        IToolTipService : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IToolTipService = __uuidof(IToolTipService);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0384 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToolTipServiceStatics[] = L"Windows.UI.Xaml.Controls.IToolTipServiceStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0384 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0384_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0384_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToolTipServiceStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("86E649F8-E245-48AA-A8C8-D1073ED76319")
                        IToolTipServiceStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlacementProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetPlacement( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::PlacementMode *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetPlacement( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::PlacementMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlacementTargetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetPlacementTarget( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetPlacementTarget( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToolTipProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetToolTip( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetToolTip( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToolTipServiceStatics = __uuidof(IToolTipServiceStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlacementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CPlacementMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlacementTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetPlacementTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        HRESULT ( STDMETHODCALLTYPE *SetPlacementTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToolTipProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetToolTip )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        HRESULT ( STDMETHODCALLTYPE *SetToolTip )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_get_PlacementProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlacementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_GetPlacement(This,element,value)	\
    ( (This)->lpVtbl -> GetPlacement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_SetPlacement(This,element,value)	\
    ( (This)->lpVtbl -> SetPlacement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_get_PlacementTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlacementTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_GetPlacementTarget(This,element,value)	\
    ( (This)->lpVtbl -> GetPlacementTarget(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_SetPlacementTarget(This,element,value)	\
    ( (This)->lpVtbl -> SetPlacementTarget(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_get_ToolTipProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToolTipProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_GetToolTip(This,element,value)	\
    ( (This)->lpVtbl -> GetToolTip(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_SetToolTip(This,element,value)	\
    ( (This)->lpVtbl -> SetToolTip(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToolTipServiceStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0385 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUIElementCollection[] = L"Windows.UI.Xaml.Controls.IUIElementCollection";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0385 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0385_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0385_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IUIElementCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D6602D54-88F6-43F6-85D8-A9D914A6DD3B")
                        IUIElementCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Move( 
                                /* [in] */ UINT32 oldIndex,
                                /* [in] */ UINT32 newIndex) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IUIElementCollection = __uuidof(IUIElementCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Move )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection * This,
            /* [in] */ UINT32 oldIndex,
            /* [in] */ UINT32 newIndex);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_Move(This,oldIndex,newIndex)	\
    ( (This)->lpVtbl -> Move(This,oldIndex,newIndex) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUIElementCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0386 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUserControl[] = L"Windows.UI.Xaml.Controls.IUserControl";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0386 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0386_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0386_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IUserControl */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A7A69EC9-EA35-4679-BF29-F4F09286D314")
                        IUserControl : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Content( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Content( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IUserControl = __uuidof(IUserControl);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_get_Content(This,value)	\
    ( (This)->lpVtbl -> get_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_put_Content(This,value)	\
    ( (This)->lpVtbl -> put_Content(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0387 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUserControlStatics[] = L"Windows.UI.Xaml.Controls.IUserControlStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0387 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0387_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0387_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IUserControlStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E8887976-2C5C-41CF-BE6A-9E44BEFDF655")
                        IUserControlStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IUserControlStatics = __uuidof(IUserControlStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_get_ContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0388 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IUserControlFactory[] = L"Windows.UI.Xaml.Controls.IUserControlFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0388 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0388_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0388_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IUserControlFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("38B1ED92-A28A-4972-93DF-F4F759B8AFD2")
                        IUserControlFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IUserControl **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IUserControlFactory = __uuidof(IUserControlFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControl **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIUserControlFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0389 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVariableSizedWrapGrid[] = L"Windows.UI.Xaml.Controls.IVariableSizedWrapGrid";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0389 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0389_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0389_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVariableSizedWrapGrid */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("9CA507C7-23C9-4F01-B80F-BE5C21EEF474")
                        IVariableSizedWrapGrid : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemWidth( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalChildrenAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::HorizontalAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalChildrenAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::HorizontalAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalChildrenAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::VerticalAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalChildrenAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::VerticalAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaximumRowsOrColumns( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaximumRowsOrColumns( 
                                /* [in] */ INT32 value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVariableSizedWrapGrid = __uuidof(IVariableSizedWrapGrid);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumns )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaximumRowsOrColumns )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid * This,
            /* [in] */ INT32 value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_get_ItemHeight(This,value)	\
    ( (This)->lpVtbl -> get_ItemHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_put_ItemHeight(This,value)	\
    ( (This)->lpVtbl -> put_ItemHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_get_ItemWidth(This,value)	\
    ( (This)->lpVtbl -> get_ItemWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_put_ItemWidth(This,value)	\
    ( (This)->lpVtbl -> put_ItemWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_get_HorizontalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_put_HorizontalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_get_VerticalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> get_VerticalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_put_VerticalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> put_VerticalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_get_MaximumRowsOrColumns(This,value)	\
    ( (This)->lpVtbl -> get_MaximumRowsOrColumns(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_put_MaximumRowsOrColumns(This,value)	\
    ( (This)->lpVtbl -> put_MaximumRowsOrColumns(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGrid_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0390 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVariableSizedWrapGridStatics[] = L"Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0390 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0390_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0390_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVariableSizedWrapGridStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FE9DB859-8127-4AEF-B7A2-949847486E96")
                        IVariableSizedWrapGridStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalChildrenAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalChildrenAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaximumRowsOrColumnsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RowSpanProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetRowSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetRowSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColumnSpanProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetColumnSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetColumnSpan( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                /* [in] */ INT32 value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVariableSizedWrapGridStatics = __uuidof(IVariableSizedWrapGridStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumnsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RowSpanProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetRowSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetRowSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnSpanProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetColumnSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetColumnSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ INT32 value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_ItemHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_ItemWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_HorizontalChildrenAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalChildrenAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_VerticalChildrenAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalChildrenAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_MaximumRowsOrColumnsProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaximumRowsOrColumnsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_RowSpanProperty(This,value)	\
    ( (This)->lpVtbl -> get_RowSpanProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_GetRowSpan(This,element,value)	\
    ( (This)->lpVtbl -> GetRowSpan(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_SetRowSpan(This,element,value)	\
    ( (This)->lpVtbl -> SetRowSpan(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_get_ColumnSpanProperty(This,value)	\
    ( (This)->lpVtbl -> get_ColumnSpanProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_GetColumnSpan(This,element,value)	\
    ( (This)->lpVtbl -> GetColumnSpan(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_SetColumnSpan(This,element,value)	\
    ( (This)->lpVtbl -> SetColumnSpan(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVariableSizedWrapGridStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0391 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IViewbox[] = L"Windows.UI.Xaml.Controls.IViewbox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0391 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0391_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0391_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IViewbox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("05252C58-BA9D-4809-9EC3-FA0D16710BA1")
                        IViewbox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Child( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Child( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stretch( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchDirection( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::StretchDirection *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StretchDirection( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::StretchDirection value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IViewbox = __uuidof(IViewbox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Child )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Child )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StretchDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CStretchDirection value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_get_Child(This,value)	\
    ( (This)->lpVtbl -> get_Child(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_put_Child(This,value)	\
    ( (This)->lpVtbl -> put_Child(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_get_Stretch(This,value)	\
    ( (This)->lpVtbl -> get_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_put_Stretch(This,value)	\
    ( (This)->lpVtbl -> put_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_get_StretchDirection(This,value)	\
    ( (This)->lpVtbl -> get_StretchDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_put_StretchDirection(This,value)	\
    ( (This)->lpVtbl -> put_StretchDirection(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewbox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0392 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IViewboxStatics[] = L"Windows.UI.Xaml.Controls.IViewboxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0392 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0392_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0392_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IViewboxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5CD1E72D-E8D3-4865-8F08-B6B2D689ADF1")
                        IViewboxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchDirectionProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IViewboxStatics = __uuidof(IViewboxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchDirectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_get_StretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_StretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_get_StretchDirectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_StretchDirectionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIViewboxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0393 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanel[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0393 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0393_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0393_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("38AAD50C-12CF-4D1E-A884-C9DF85F07CD9")
                        IVirtualizingPanel : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemContainerGenerator( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IItemContainerGenerator **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingPanel = __uuidof(IVirtualizingPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemContainerGenerator )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemContainerGenerator **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_get_ItemContainerGenerator(This,value)	\
    ( (This)->lpVtbl -> get_ItemContainerGenerator(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0394 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanelOverrides[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0394 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0394_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0394_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingPanelOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5EF6BD7D-677F-408D-A96C-B19507750466")
                        IVirtualizingPanelOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnItemsChanged( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IItemsChangedEventArgs *args) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnClearChildren( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE BringIndexIntoView( 
                                /* [in] */ INT32 index) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingPanelOverrides = __uuidof(IVirtualizingPanelOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnItemsChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIItemsChangedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnClearChildren )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *BringIndexIntoView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides * This,
            /* [in] */ INT32 index);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_OnItemsChanged(This,sender,args)	\
    ( (This)->lpVtbl -> OnItemsChanged(This,sender,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_OnClearChildren(This)	\
    ( (This)->lpVtbl -> OnClearChildren(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_BringIndexIntoView(This,index)	\
    ( (This)->lpVtbl -> BringIndexIntoView(This,index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0395 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanelProtected[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanelProtected";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0395 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0395_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0395_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingPanelProtected */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C9C9AB42-C232-479D-A7C9-5E7611196A45")
                        IVirtualizingPanelProtected : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE AddInternalChild( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *child) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE InsertInternalChild( 
                                /* [in] */ INT32 index,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *child) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE RemoveInternalChildRange( 
                                /* [in] */ INT32 index,
                                /* [in] */ INT32 range) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingPanelProtected = __uuidof(IVirtualizingPanelProtected);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *AddInternalChild )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *child);
        
        HRESULT ( STDMETHODCALLTYPE *InsertInternalChild )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [in] */ INT32 index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *child);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveInternalChildRange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected * This,
            /* [in] */ INT32 index,
            /* [in] */ INT32 range);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtectedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_AddInternalChild(This,child)	\
    ( (This)->lpVtbl -> AddInternalChild(This,child) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_InsertInternalChild(This,index,child)	\
    ( (This)->lpVtbl -> InsertInternalChild(This,index,child) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_RemoveInternalChildRange(This,index,range)	\
    ( (This)->lpVtbl -> RemoveInternalChildRange(This,index,range) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelProtected_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0396 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingPanelFactory[] = L"Windows.UI.Xaml.Controls.IVirtualizingPanelFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0396 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0396_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0396_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingPanelFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BE19F839-CBD0-43E9-A5D0-0BDBA0FFBD38")
                        IVirtualizingPanelFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingPanelFactory = __uuidof(IVirtualizingPanelFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingPanelFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0397 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingStackPanel[] = L"Windows.UI.Xaml.Controls.IVirtualizingStackPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0397 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0397_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0397_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingStackPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7567CD9A-A3B4-4DEA-BB11-549E2C2F919D")
                        IVirtualizingStackPanel : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AreScrollSnapPointsRegular( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AreScrollSnapPointsRegular( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_CleanUpVirtualizedItemEvent( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICleanUpVirtualizedItemEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_CleanUpVirtualizedItemEvent( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingStackPanel = __uuidof(IVirtualizingStackPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegular )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AreScrollSnapPointsRegular )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        HRESULT ( STDMETHODCALLTYPE *add_CleanUpVirtualizedItemEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CleanUpVirtualizedItemEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_get_AreScrollSnapPointsRegular(This,value)	\
    ( (This)->lpVtbl -> get_AreScrollSnapPointsRegular(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_put_AreScrollSnapPointsRegular(This,value)	\
    ( (This)->lpVtbl -> put_AreScrollSnapPointsRegular(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_add_CleanUpVirtualizedItemEvent(This,value,token)	\
    ( (This)->lpVtbl -> add_CleanUpVirtualizedItemEvent(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_remove_CleanUpVirtualizedItemEvent(This,token)	\
    ( (This)->lpVtbl -> remove_CleanUpVirtualizedItemEvent(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0398 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingStackPanelOverrides[] = L"Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0398 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0398_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0398_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingStackPanelOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("CBE6F72C-2892-46D1-987F-58CA1081F040")
                        IVirtualizingStackPanelOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnCleanUpVirtualizedItem( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICleanUpVirtualizedItemEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingStackPanelOverrides = __uuidof(IVirtualizingStackPanelOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnCleanUpVirtualizedItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICleanUpVirtualizedItemEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_OnCleanUpVirtualizedItem(This,e)	\
    ( (This)->lpVtbl -> OnCleanUpVirtualizedItem(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0399 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IVirtualizingStackPanelStatics[] = L"Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0399 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0399_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0399_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IVirtualizingStackPanelStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8314E778-91D3-4D56-AC09-223ADCD2BD3F")
                        IVirtualizingStackPanelStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AreScrollSnapPointsRegularProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VirtualizationModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetVirtualizationMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::VirtualizationMode *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetVirtualizationMode( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *element,
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::VirtualizationMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsVirtualizingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsVirtualizing( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *o,
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVirtualizingStackPanelStatics = __uuidof(IVirtualizingStackPanelStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AreScrollSnapPointsRegularProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VirtualizationModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetVirtualizationMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetVirtualizationMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *element,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CVirtualizationMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsVirtualizingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsVirtualizing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *o,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_get_AreScrollSnapPointsRegularProperty(This,value)	\
    ( (This)->lpVtbl -> get_AreScrollSnapPointsRegularProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_get_VirtualizationModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_VirtualizationModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_GetVirtualizationMode(This,element,value)	\
    ( (This)->lpVtbl -> GetVirtualizationMode(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_SetVirtualizationMode(This,element,value)	\
    ( (This)->lpVtbl -> SetVirtualizationMode(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_get_IsVirtualizingProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsVirtualizingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_GetIsVirtualizing(This,o,value)	\
    ( (This)->lpVtbl -> GetIsVirtualizing(This,o,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIVirtualizingStackPanelStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0400 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBar[] = L"Windows.UI.Xaml.Controls.IAppBar";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0400 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0400_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0400_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBar */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7B0FC253-86A5-4B43-9872-0B8A6234B74B")
                        IAppBar : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOpen( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsOpen( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSticky( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsSticky( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Opened( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Opened( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Closed( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Closed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBar = __uuidof(IAppBar);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsOpen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSticky )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsSticky )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Opened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Opened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Closed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Closed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_get_IsOpen(This,value)	\
    ( (This)->lpVtbl -> get_IsOpen(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_put_IsOpen(This,value)	\
    ( (This)->lpVtbl -> put_IsOpen(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_get_IsSticky(This,value)	\
    ( (This)->lpVtbl -> get_IsSticky(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_put_IsSticky(This,value)	\
    ( (This)->lpVtbl -> put_IsSticky(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_add_Opened(This,value,token)	\
    ( (This)->lpVtbl -> add_Opened(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_remove_Opened(This,token)	\
    ( (This)->lpVtbl -> remove_Opened(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_add_Closed(This,value,token)	\
    ( (This)->lpVtbl -> add_Closed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_remove_Closed(This,token)	\
    ( (This)->lpVtbl -> remove_Closed(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0401 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarOverrides[] = L"Windows.UI.Xaml.Controls.IAppBarOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0401 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0401_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0401_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F003E4E2-7B0F-4F4A-970D-AE8A0EAA9B70")
                        IAppBarOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnClosed( 
                                /* [in] */ __RPC__in_opt IInspectable *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnOpened( 
                                /* [in] */ __RPC__in_opt IInspectable *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarOverrides = __uuidof(IAppBarOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnClosed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides * This,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_OnClosed(This,e)	\
    ( (This)->lpVtbl -> OnClosed(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_OnOpened(This,e)	\
    ( (This)->lpVtbl -> OnOpened(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0402 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarStatics[] = L"Windows.UI.Xaml.Controls.IAppBarStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0402 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0402_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0402_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("79BB7E8D-DCA9-4B5F-A448-37B13238ED76")
                        IAppBarStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOpenProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStickyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarStatics = __uuidof(IAppBarStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOpenProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStickyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_get_IsOpenProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsOpenProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_get_IsStickyProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsStickyProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0403 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarFactory[] = L"Windows.UI.Xaml.Controls.IAppBarFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0403 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0403_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0403_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("614708D1-8E65-43CB-92D7-8EEE17515F8D")
                        IAppBarFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IAppBar **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarFactory = __uuidof(IAppBarFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0404 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButton[] = L"Windows.UI.Xaml.Controls.IAppBarButton";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0404 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0404_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0404_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarButton */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4459A451-69E8-440C-9896-4BB4F5F642D1")
                        IAppBarButton : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Label( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Label( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Icon( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IIconElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Icon( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IIconElement *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarButton = __uuidof(IAppBarButton);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Label )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Label )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Icon )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Icon )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_get_Label(This,value)	\
    ( (This)->lpVtbl -> get_Label(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_put_Label(This,value)	\
    ( (This)->lpVtbl -> put_Label(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_get_Icon(This,value)	\
    ( (This)->lpVtbl -> get_Icon(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_put_Icon(This,value)	\
    ( (This)->lpVtbl -> put_Icon(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0405 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButtonStatics[] = L"Windows.UI.Xaml.Controls.IAppBarButtonStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0405 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0405_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0405_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarButtonStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7CCD13E6-5301-407F-874E-DC9160AA07AF")
                        IAppBarButtonStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LabelProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IconProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCompactProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarButtonStatics = __uuidof(IAppBarButtonStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LabelProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_get_LabelProperty(This,value)	\
    ( (This)->lpVtbl -> get_LabelProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_get_IconProperty(This,value)	\
    ( (This)->lpVtbl -> get_IconProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_get_IsCompactProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsCompactProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0406 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarButtonFactory[] = L"Windows.UI.Xaml.Controls.IAppBarButtonFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0406 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0406_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0406_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarButtonFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BDBB1BB6-CB2E-4276-ABD6-7935130510E0")
                        IAppBarButtonFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IAppBarButton **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarButtonFactory = __uuidof(IAppBarButtonFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButtonFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0407 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparator[] = L"Windows.UI.Xaml.Controls.IAppBarSeparator";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0407 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0407_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0407_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarSeparator */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1B0795A1-1BC1-4D53-95EA-FB0A2CCCC905")
                        IAppBarSeparator : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarSeparator = __uuidof(IAppBarSeparator);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0408 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparatorStatics[] = L"Windows.UI.Xaml.Controls.IAppBarSeparatorStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0408 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0408_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0408_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarSeparatorStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("37F23484-5B35-4663-A75D-F2D50CB9C619")
                        IAppBarSeparatorStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCompactProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarSeparatorStatics = __uuidof(IAppBarSeparatorStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_get_IsCompactProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsCompactProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0409 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarSeparatorFactory[] = L"Windows.UI.Xaml.Controls.IAppBarSeparatorFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0409 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0409_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0409_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarSeparatorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("05DA25CD-F407-48DE-8B50-FF87D1E2818F")
                        IAppBarSeparatorFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IAppBarSeparator **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarSeparatorFactory = __uuidof(IAppBarSeparatorFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparator **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarSeparatorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0410 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButton[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButton";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0410 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0410_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0410_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarToggleButton */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("2E914438-FD53-4B8D-858B-3644269F8E4D")
                        IAppBarToggleButton : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Label( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Label( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Icon( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IIconElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Icon( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IIconElement *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarToggleButton = __uuidof(IAppBarToggleButton);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Label )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Label )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Icon )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Icon )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_get_Label(This,value)	\
    ( (This)->lpVtbl -> get_Label(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_put_Label(This,value)	\
    ( (This)->lpVtbl -> put_Label(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_get_Icon(This,value)	\
    ( (This)->lpVtbl -> get_Icon(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_put_Icon(This,value)	\
    ( (This)->lpVtbl -> put_Icon(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0411 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButtonStatics[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButtonStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0411 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0411_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0411_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarToggleButtonStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FE5AAF96-7929-4DA1-AA67-CDDF73A3E4B5")
                        IAppBarToggleButtonStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LabelProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IconProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCompactProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarToggleButtonStatics = __uuidof(IAppBarToggleButtonStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LabelProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCompactProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_get_LabelProperty(This,value)	\
    ( (This)->lpVtbl -> get_LabelProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_get_IconProperty(This,value)	\
    ( (This)->lpVtbl -> get_IconProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_get_IsCompactProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsCompactProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0412 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IAppBarToggleButtonFactory[] = L"Windows.UI.Xaml.Controls.IAppBarToggleButtonFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0412 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0412_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0412_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IAppBarToggleButtonFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("028AA7D4-8F54-45A6-9F90-13605656D793")
                        IAppBarToggleButtonFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IAppBarToggleButton **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IAppBarToggleButtonFactory = __uuidof(IAppBarToggleButtonFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButtonFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0413 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIcon[] = L"Windows.UI.Xaml.Controls.IBitmapIcon";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0413 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0413_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0413_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBitmapIcon */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E8FE17CB-35F7-40F3-A185-48B397B73E68")
                        IBitmapIcon : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UriSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UriSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBitmapIcon = __uuidof(IBitmapIcon);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UriSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UriSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_get_UriSource(This,value)	\
    ( (This)->lpVtbl -> get_UriSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_put_UriSource(This,value)	\
    ( (This)->lpVtbl -> put_UriSource(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0414 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconStatics[] = L"Windows.UI.Xaml.Controls.IBitmapIconStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0414 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0414_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0414_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBitmapIconStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E072D117-E4E7-4E0C-9470-53FF1CE84F67")
                        IBitmapIconStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UriSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBitmapIconStatics = __uuidof(IBitmapIconStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UriSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_get_UriSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_UriSourceProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0415 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IBitmapIconFactory[] = L"Windows.UI.Xaml.Controls.IBitmapIconFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0415 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0415_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0415_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IBitmapIconFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("46D64B1D-7A49-4F66-9729-2848C788E402")
                        IBitmapIconFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IBitmapIcon **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBitmapIconFactory = __uuidof(IBitmapIconFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIcon **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIBitmapIconFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0416 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBar[] = L"Windows.UI.Xaml.Controls.ICommandBar";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0416 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0416_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0416_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICommandBar */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("98BC4280-4A3D-4CEE-BD07-22CE94C5AF76")
                        ICommandBar : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryCommands( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SecondaryCommands( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICommandBar = __uuidof(ICommandBar);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryCommands )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SecondaryCommands )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CControls__CICommandBarElement **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_get_PrimaryCommands(This,value)	\
    ( (This)->lpVtbl -> get_PrimaryCommands(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_get_SecondaryCommands(This,value)	\
    ( (This)->lpVtbl -> get_SecondaryCommands(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0417 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarElement[] = L"Windows.UI.Xaml.Controls.ICommandBarElement";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0417 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0417_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0417_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICommandBarElement */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("67918E1B-F2D5-44D1-8B84-92B87F80A350")
                        ICommandBarElement : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCompact( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsCompact( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICommandBarElement = __uuidof(ICommandBarElement);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCompact )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsCompact )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_get_IsCompact(This,value)	\
    ( (This)->lpVtbl -> get_IsCompact(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_put_IsCompact(This,value)	\
    ( (This)->lpVtbl -> put_IsCompact(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0418 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarStatics[] = L"Windows.UI.Xaml.Controls.ICommandBarStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0418 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0418_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0418_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICommandBarStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5BD981EA-E278-409C-B522-F946CA253B44")
                        ICommandBarStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PrimaryCommandsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SecondaryCommandsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICommandBarStatics = __uuidof(ICommandBarStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrimaryCommandsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SecondaryCommandsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_get_PrimaryCommandsProperty(This,value)	\
    ( (This)->lpVtbl -> get_PrimaryCommandsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_get_SecondaryCommandsProperty(This,value)	\
    ( (This)->lpVtbl -> get_SecondaryCommandsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0419 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ICommandBarFactory[] = L"Windows.UI.Xaml.Controls.ICommandBarFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0419 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0419_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0419_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ICommandBarFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("67BDEB44-20E1-4177-AD44-F617B374E8E8")
                        ICommandBarFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ICommandBar **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICommandBarFactory = __uuidof(ICommandBarFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBar **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CICommandBarFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0420 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyout[] = L"Windows.UI.Xaml.Controls.IFlyout";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0420 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0420_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0420_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlyout */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6584EBDF-CBC7-4E19-843A-A14F24A793EA")
                        IFlyout : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Content( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Content( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FlyoutPresenterStyle( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FlyoutPresenterStyle( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlyout = __uuidof(IFlyout);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FlyoutPresenterStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FlyoutPresenterStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_get_Content(This,value)	\
    ( (This)->lpVtbl -> get_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_put_Content(This,value)	\
    ( (This)->lpVtbl -> put_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_get_FlyoutPresenterStyle(This,value)	\
    ( (This)->lpVtbl -> get_FlyoutPresenterStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_put_FlyoutPresenterStyle(This,value)	\
    ( (This)->lpVtbl -> put_FlyoutPresenterStyle(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0421 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IFlyoutStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0421 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0421_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0421_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlyoutStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("61364E0B-DB75-47E1-B2C3-5B901C3D74B6")
                        IFlyoutStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FlyoutPresenterStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlyoutStatics = __uuidof(IFlyoutStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FlyoutPresenterStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_get_ContentProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_get_FlyoutPresenterStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FlyoutPresenterStyleProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0422 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutFactory[] = L"Windows.UI.Xaml.Controls.IFlyoutFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0422 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0422_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0422_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlyoutFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4BED4933-008E-4B03-A385-79FE5266DDBA")
                        IFlyoutFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFlyout **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlyoutFactory = __uuidof(IFlyoutFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyout **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0423 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IFlyoutPresenter";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0423 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0423_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0423_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlyoutPresenter */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("827D5B79-E37B-46A5-8D44-63A11A580E83")
                        IFlyoutPresenter : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IFlyoutPresenter = __uuidof(IFlyoutPresenter);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0424 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFlyoutPresenterFactory[] = L"Windows.UI.Xaml.Controls.IFlyoutPresenterFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0424 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0424_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0424_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFlyoutPresenterFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("EE4D668F-DA76-469A-ACD7-3060E613ADE7")
                        IFlyoutPresenterFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFlyoutPresenter **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFlyoutPresenterFactory = __uuidof(IFlyoutPresenterFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenterFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0425 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIcon[] = L"Windows.UI.Xaml.Controls.IFontIcon";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0425 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0425_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0425_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFontIcon */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D4D61391-39AC-4950-9166-3606C264418B")
                        IFontIcon : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Glyph( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Glyph( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamily( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFamily( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IFontFamily *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeight( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontWeight *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontWeight( 
                                /* [in] */ ABI::Windows::UI::Text::FontWeight value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyle( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStyle *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStyle( 
                                /* [in] */ ABI::Windows::UI::Text::FontStyle value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFontIcon = __uuidof(IFontIcon);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Glyph )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Glyph )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontWeight value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStyle value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_get_Glyph(This,value)	\
    ( (This)->lpVtbl -> get_Glyph(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_put_Glyph(This,value)	\
    ( (This)->lpVtbl -> put_Glyph(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_get_FontSize(This,value)	\
    ( (This)->lpVtbl -> get_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_put_FontSize(This,value)	\
    ( (This)->lpVtbl -> put_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_get_FontFamily(This,value)	\
    ( (This)->lpVtbl -> get_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_put_FontFamily(This,value)	\
    ( (This)->lpVtbl -> put_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_get_FontWeight(This,value)	\
    ( (This)->lpVtbl -> get_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_put_FontWeight(This,value)	\
    ( (This)->lpVtbl -> put_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_get_FontStyle(This,value)	\
    ( (This)->lpVtbl -> get_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_put_FontStyle(This,value)	\
    ( (This)->lpVtbl -> put_FontStyle(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0426 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconStatics[] = L"Windows.UI.Xaml.Controls.IFontIconStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0426 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0426_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0426_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFontIconStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B3BE7BF6-1467-4086-BBCB-4E21D97A7B4D")
                        IFontIconStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlyphProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamilyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFontIconStatics = __uuidof(IFontIconStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlyphProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_get_GlyphProperty(This,value)	\
    ( (This)->lpVtbl -> get_GlyphProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_get_FontSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_get_FontFamilyProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontFamilyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_get_FontWeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontWeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_get_FontStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStyleProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0427 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFontIconFactory[] = L"Windows.UI.Xaml.Controls.IFontIconFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0427 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0427_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0427_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFontIconFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1C781B6B-37BF-4DDC-A1A8-1B77DB3CF0EA")
                        IFontIconFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFontIcon **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFontIconFactory = __uuidof(IFontIconFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIcon **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFontIconFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0428 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame[] = L"Windows.UI.Xaml.Controls.IFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0428 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0428_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0428_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("68EA500B-3FE9-4735-B6A0-E7601933B089")
                        IFrame : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheSize( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CacheSize( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoBack( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoForward( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CurrentSourcePageType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Interop::TypeName *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourcePageType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Interop::TypeName *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SourcePageType( 
                                /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackStackDepth( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Navigated( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigatedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Navigated( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Navigating( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigatingCancelEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Navigating( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_NavigationFailed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigationFailedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_NavigationFailed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_NavigationStopped( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigationStoppedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_NavigationStopped( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GoBack( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GoForward( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Navigate( 
                                /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName sourcePageType,
                                /* [in] */ __RPC__in_opt IInspectable *parameter,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetNavigationState( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetNavigationState( 
                                /* [in] */ __RPC__in HSTRING navigationState) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFrame = __uuidof(IFrame);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CacheSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentSourcePageType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourcePageType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourcePageType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackStackDepth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Navigated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Navigated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Navigating )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Navigating )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_NavigationFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationFailedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStopped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationStoppedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStopped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *GoBack )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GoForward )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
            /* [in] */ __RPC__in_opt IInspectable *parameter,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetNavigationState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetNavigationState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame * This,
            /* [in] */ __RPC__in HSTRING navigationState);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_get_CacheSize(This,value)	\
    ( (This)->lpVtbl -> get_CacheSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_put_CacheSize(This,value)	\
    ( (This)->lpVtbl -> put_CacheSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_get_CanGoBack(This,value)	\
    ( (This)->lpVtbl -> get_CanGoBack(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_get_CanGoForward(This,value)	\
    ( (This)->lpVtbl -> get_CanGoForward(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_get_CurrentSourcePageType(This,value)	\
    ( (This)->lpVtbl -> get_CurrentSourcePageType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_get_SourcePageType(This,value)	\
    ( (This)->lpVtbl -> get_SourcePageType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_put_SourcePageType(This,value)	\
    ( (This)->lpVtbl -> put_SourcePageType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_get_BackStackDepth(This,value)	\
    ( (This)->lpVtbl -> get_BackStackDepth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_add_Navigated(This,value,token)	\
    ( (This)->lpVtbl -> add_Navigated(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_remove_Navigated(This,token)	\
    ( (This)->lpVtbl -> remove_Navigated(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_add_Navigating(This,value,token)	\
    ( (This)->lpVtbl -> add_Navigating(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_remove_Navigating(This,token)	\
    ( (This)->lpVtbl -> remove_Navigating(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_add_NavigationFailed(This,value,token)	\
    ( (This)->lpVtbl -> add_NavigationFailed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_remove_NavigationFailed(This,token)	\
    ( (This)->lpVtbl -> remove_NavigationFailed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_add_NavigationStopped(This,value,token)	\
    ( (This)->lpVtbl -> add_NavigationStopped(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_remove_NavigationStopped(This,token)	\
    ( (This)->lpVtbl -> remove_NavigationStopped(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_GoBack(This)	\
    ( (This)->lpVtbl -> GoBack(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_GoForward(This)	\
    ( (This)->lpVtbl -> GoForward(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_Navigate(This,sourcePageType,parameter,returnValue)	\
    ( (This)->lpVtbl -> Navigate(This,sourcePageType,parameter,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_GetNavigationState(This,returnValue)	\
    ( (This)->lpVtbl -> GetNavigationState(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_SetNavigationState(This,navigationState)	\
    ( (This)->lpVtbl -> SetNavigationState(This,navigationState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0429 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameStatics[] = L"Windows.UI.Xaml.Controls.IFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0429 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0429_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0429_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D5ACF0E9-D967-471B-8459-C8AF4341511B")
                        IFrameStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoBackProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoForwardProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CurrentSourcePageTypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourcePageTypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackStackDepthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFrameStatics = __uuidof(IFrameStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBackProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForwardProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentSourcePageTypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourcePageTypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackStackDepthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_get_CacheSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_CacheSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_get_CanGoBackProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanGoBackProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_get_CanGoForwardProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanGoForwardProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_get_CurrentSourcePageTypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_CurrentSourcePageTypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_get_SourcePageTypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_SourcePageTypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_get_BackStackDepthProperty(This,value)	\
    ( (This)->lpVtbl -> get_BackStackDepthProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0430 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameFactory[] = L"Windows.UI.Xaml.Controls.IFrameFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0430 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0430_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0430_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFrameFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("02EE93D4-448E-469E-9799-0A8A1F70F171")
                        IFrameFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFrame **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFrameFactory = __uuidof(IFrameFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0431 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrame2[] = L"Windows.UI.Xaml.Controls.IFrame2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0431 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0431_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0431_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFrame2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3F367F87-9F5A-4B04-B818-B554C069597A")
                        IFrame2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackStack( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForwardStack( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Navigate( 
                                /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName sourcePageType,
                                /* [in] */ __RPC__in_opt IInspectable *parameter,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfo *infoOverride,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFrame2 = __uuidof(IFrame2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackStack )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForwardStack )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CNavigation__CPageStackEntry **value);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName sourcePageType,
            /* [in] */ __RPC__in_opt IInspectable *parameter,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo *infoOverride,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_get_BackStack(This,value)	\
    ( (This)->lpVtbl -> get_BackStack(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_get_ForwardStack(This,value)	\
    ( (This)->lpVtbl -> get_ForwardStack(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_Navigate(This,sourcePageType,parameter,infoOverride,returnValue)	\
    ( (This)->lpVtbl -> Navigate(This,sourcePageType,parameter,infoOverride,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrame2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0432 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IFrameStatics2[] = L"Windows.UI.Xaml.Controls.IFrameStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0432 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0432_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0432_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IFrameStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E4B5CDFE-42F0-4462-A1C1-5D259DD82A03")
                        IFrameStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackStackProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForwardStackProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFrameStatics2 = __uuidof(IFrameStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackStackProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForwardStackProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_get_BackStackProperty(This,value)	\
    ( (This)->lpVtbl -> get_BackStackProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_get_ForwardStackProperty(This,value)	\
    ( (This)->lpVtbl -> get_ForwardStackProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIFrameStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0433 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewHeaderItem[] = L"Windows.UI.Xaml.Controls.IGridViewHeaderItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0433 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0433_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0433_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridViewHeaderItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("72D75D7E-5DC3-4FFC-9B1C-939B5C37161C")
                        IGridViewHeaderItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IGridViewHeaderItem = __uuidof(IGridViewHeaderItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0434 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IGridViewHeaderItemFactory[] = L"Windows.UI.Xaml.Controls.IGridViewHeaderItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0434 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0434_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0434_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IGridViewHeaderItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("36E0C96E-B56A-4B3B-8BAC-7AEF5E6F9945")
                        IGridViewHeaderItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IGridViewHeaderItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGridViewHeaderItemFactory = __uuidof(IGridViewHeaderItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0435 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHub[] = L"Windows.UI.Xaml.Controls.IHub";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0435 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0435_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0435_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHub */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHub;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AE692E82-7314-4F51-AB11-2AF1ED4A19F8")
                        IHub : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultSectionIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DefaultSectionIndex( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Sections( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SectionsInView( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SectionHeaders( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_IInspectable **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SectionHeaderClick( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSectionHeaderClickEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SectionHeaderClick( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SectionsInViewChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISectionsInViewChangedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SectionsInViewChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ScrollToSection( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *section) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHub = __uuidof(IHub);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultSectionIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultSectionIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sections )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SectionsInView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SectionHeaders )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_IInspectable **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_SectionHeaderClick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SectionHeaderClick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SectionsInViewChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SectionsInViewChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ScrollToSection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHub * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *section);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHub
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_DefaultSectionIndex(This,value)	\
    ( (This)->lpVtbl -> get_DefaultSectionIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_put_DefaultSectionIndex(This,value)	\
    ( (This)->lpVtbl -> put_DefaultSectionIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_Sections(This,value)	\
    ( (This)->lpVtbl -> get_Sections(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_SectionsInView(This,value)	\
    ( (This)->lpVtbl -> get_SectionsInView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_get_SectionHeaders(This,value)	\
    ( (This)->lpVtbl -> get_SectionHeaders(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_add_SectionHeaderClick(This,value,token)	\
    ( (This)->lpVtbl -> add_SectionHeaderClick(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_remove_SectionHeaderClick(This,token)	\
    ( (This)->lpVtbl -> remove_SectionHeaderClick(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_add_SectionsInViewChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SectionsInViewChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_remove_SectionsInViewChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SectionsInViewChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHub_ScrollToSection(This,section)	\
    ( (This)->lpVtbl -> ScrollToSection(This,section) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHub_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0436 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubStatics[] = L"Windows.UI.Xaml.Controls.IHubStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0436 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0436_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0436_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("0E6FA034-AD3C-4F32-B701-E24FAB562028")
                        IHubStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultSectionIndexProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SemanticZoomOwnerProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActiveViewProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsZoomedInViewProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubStatics = __uuidof(IHubStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultSectionIndexProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SemanticZoomOwnerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActiveViewProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsZoomedInViewProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_DefaultSectionIndexProperty(This,value)	\
    ( (This)->lpVtbl -> get_DefaultSectionIndexProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_SemanticZoomOwnerProperty(This,value)	\
    ( (This)->lpVtbl -> get_SemanticZoomOwnerProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_IsActiveViewProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsActiveViewProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_get_IsZoomedInViewProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsZoomedInViewProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0437 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubFactory[] = L"Windows.UI.Xaml.Controls.IHubFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0437 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0437_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0437_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DCA6B2BA-C6F5-4961-9953-C51873DB5424")
                        IHubFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHub **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubFactory = __uuidof(IHubFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHub **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0438 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSection[] = L"Windows.UI.Xaml.Controls.IHubSection";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0438 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0438_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0438_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubSection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A4E66CB7-7FDD-4FE0-AB49-C246639DCCF9")
                        IHubSection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHeaderInteractive( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsHeaderInteractive( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubSection = __uuidof(IHubSection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHeaderInteractive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsHeaderInteractive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_get_ContentTemplate(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_put_ContentTemplate(This,value)	\
    ( (This)->lpVtbl -> put_ContentTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_get_IsHeaderInteractive(This,value)	\
    ( (This)->lpVtbl -> get_IsHeaderInteractive(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_put_IsHeaderInteractive(This,value)	\
    ( (This)->lpVtbl -> put_IsHeaderInteractive(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0439 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSectionStatics[] = L"Windows.UI.Xaml.Controls.IHubSectionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0439 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0439_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0439_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubSectionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("12D2D85A-EA27-42D1-998B-61E52AED842B")
                        IHubSectionStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHeaderInteractiveProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubSectionStatics = __uuidof(IHubSectionStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHeaderInteractiveProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_get_ContentTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_get_IsHeaderInteractiveProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsHeaderInteractiveProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0440 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSectionFactory[] = L"Windows.UI.Xaml.Controls.IHubSectionFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0440 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0440_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0440_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubSectionFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FFF55FA2-ECE4-4BBA-AA3B-9804AEF47883")
                        IHubSectionFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHubSection **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubSectionFactory = __uuidof(IHubSectionFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0441 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IHubSectionHeaderClickEventArgs[] = L"Windows.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0441 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0441_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0441_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IHubSectionHeaderClickEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E1C5EF04-1EDD-4112-AEEB-996C96400698")
                        IHubSectionHeaderClickEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Section( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IHubSection **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHubSectionHeaderClickEventArgs = __uuidof(IHubSectionHeaderClickEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Section )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_get_Section(This,value)	\
    ( (This)->lpVtbl -> get_Section(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIHubSectionHeaderClickEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0442 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconElement[] = L"Windows.UI.Xaml.Controls.IIconElement";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0442 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0442_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0442_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IIconElement */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("9AF0803B-D04C-467A-BBD5-9B81F02D9A56")
                        IIconElement : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Foreground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Foreground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IIconElement = __uuidof(IIconElement);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_get_Foreground(This,value)	\
    ( (This)->lpVtbl -> get_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_put_Foreground(This,value)	\
    ( (This)->lpVtbl -> put_Foreground(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0443 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconElementStatics[] = L"Windows.UI.Xaml.Controls.IIconElementStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0443 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0443_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0443_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IIconElementStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("BE19A623-77CF-472F-82EA-047801D12012")
                        IIconElementStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForegroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IIconElementStatics = __uuidof(IIconElementStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_get_ForegroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_ForegroundProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0444 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IIconElementFactory[] = L"Windows.UI.Xaml.Controls.IIconElementFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0444 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0444_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0444_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IIconElementFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("CF37A562-0424-43C7-8BEA-720FBA973EF1")
                        IIconElementFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IIconElementFactory = __uuidof(IIconElementFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIIconElementFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0445 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsStackPanel[] = L"Windows.UI.Xaml.Controls.IItemsStackPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0445 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0445_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0445_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsStackPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DF7AB79D-7AD5-4B58-9363-919AF90226E6")
                        IItemsStackPanel : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupPadding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GroupPadding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FirstCacheIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FirstVisibleIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LastVisibleIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LastCacheIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollingDirection( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::PanelScrollingDirection *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupHeaderPlacement( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::GroupHeaderPlacement *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GroupHeaderPlacement( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GroupHeaderPlacement value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsUpdatingScrollMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::ItemsUpdatingScrollMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemsUpdatingScrollMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::ItemsUpdatingScrollMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheLength( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CacheLength( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsStackPanel = __uuidof(IItemsStackPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupPadding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GroupPadding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FirstCacheIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FirstVisibleIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastVisibleIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastCacheIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollingDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GroupHeaderPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsUpdatingScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemsUpdatingScrollMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CItemsUpdatingScrollMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CacheLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_GroupPadding(This,value)	\
    ( (This)->lpVtbl -> get_GroupPadding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_put_GroupPadding(This,value)	\
    ( (This)->lpVtbl -> put_GroupPadding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_FirstCacheIndex(This,value)	\
    ( (This)->lpVtbl -> get_FirstCacheIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_FirstVisibleIndex(This,value)	\
    ( (This)->lpVtbl -> get_FirstVisibleIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_LastVisibleIndex(This,value)	\
    ( (This)->lpVtbl -> get_LastVisibleIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_LastCacheIndex(This,value)	\
    ( (This)->lpVtbl -> get_LastCacheIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_ScrollingDirection(This,value)	\
    ( (This)->lpVtbl -> get_ScrollingDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_GroupHeaderPlacement(This,value)	\
    ( (This)->lpVtbl -> get_GroupHeaderPlacement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_put_GroupHeaderPlacement(This,value)	\
    ( (This)->lpVtbl -> put_GroupHeaderPlacement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_ItemsUpdatingScrollMode(This,value)	\
    ( (This)->lpVtbl -> get_ItemsUpdatingScrollMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_put_ItemsUpdatingScrollMode(This,value)	\
    ( (This)->lpVtbl -> put_ItemsUpdatingScrollMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_get_CacheLength(This,value)	\
    ( (This)->lpVtbl -> get_CacheLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_put_CacheLength(This,value)	\
    ( (This)->lpVtbl -> put_CacheLength(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0446 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsStackPanelStatics[] = L"Windows.UI.Xaml.Controls.IItemsStackPanelStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0446 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0446_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0446_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsStackPanelStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("CA25D63F-044F-4B6B-B315-0B60E0B4F87D")
                        IItemsStackPanelStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupPaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupHeaderPlacementProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheLengthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsStackPanelStatics = __uuidof(IItemsStackPanelStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupPaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_get_GroupPaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_GroupPaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_get_GroupHeaderPlacementProperty(This,value)	\
    ( (This)->lpVtbl -> get_GroupHeaderPlacementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_get_CacheLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_CacheLengthProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsStackPanelStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0447 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsWrapGrid[] = L"Windows.UI.Xaml.Controls.IItemsWrapGrid";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0447 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0447_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0447_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsWrapGrid */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DDFE6B5F-BA88-4A7D-8A5B-E58CAF0F4E2D")
                        IItemsWrapGrid : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupPadding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GroupPadding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaximumRowsOrColumns( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaximumRowsOrColumns( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemWidth( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FirstCacheIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FirstVisibleIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LastVisibleIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LastCacheIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScrollingDirection( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::PanelScrollingDirection *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupHeaderPlacement( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::GroupHeaderPlacement *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GroupHeaderPlacement( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::GroupHeaderPlacement value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheLength( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CacheLength( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsWrapGrid = __uuidof(IItemsWrapGrid);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupPadding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GroupPadding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumns )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaximumRowsOrColumns )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FirstCacheIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FirstVisibleIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastVisibleIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastCacheIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollingDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPanelScrollingDirection *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GroupHeaderPlacement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CGroupHeaderPlacement value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CacheLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_GroupPadding(This,value)	\
    ( (This)->lpVtbl -> get_GroupPadding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_GroupPadding(This,value)	\
    ( (This)->lpVtbl -> put_GroupPadding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_MaximumRowsOrColumns(This,value)	\
    ( (This)->lpVtbl -> get_MaximumRowsOrColumns(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_MaximumRowsOrColumns(This,value)	\
    ( (This)->lpVtbl -> put_MaximumRowsOrColumns(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_ItemWidth(This,value)	\
    ( (This)->lpVtbl -> get_ItemWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_ItemWidth(This,value)	\
    ( (This)->lpVtbl -> put_ItemWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_ItemHeight(This,value)	\
    ( (This)->lpVtbl -> get_ItemHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_ItemHeight(This,value)	\
    ( (This)->lpVtbl -> put_ItemHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_FirstCacheIndex(This,value)	\
    ( (This)->lpVtbl -> get_FirstCacheIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_FirstVisibleIndex(This,value)	\
    ( (This)->lpVtbl -> get_FirstVisibleIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_LastVisibleIndex(This,value)	\
    ( (This)->lpVtbl -> get_LastVisibleIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_LastCacheIndex(This,value)	\
    ( (This)->lpVtbl -> get_LastCacheIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_ScrollingDirection(This,value)	\
    ( (This)->lpVtbl -> get_ScrollingDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_GroupHeaderPlacement(This,value)	\
    ( (This)->lpVtbl -> get_GroupHeaderPlacement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_GroupHeaderPlacement(This,value)	\
    ( (This)->lpVtbl -> put_GroupHeaderPlacement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_get_CacheLength(This,value)	\
    ( (This)->lpVtbl -> get_CacheLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_put_CacheLength(This,value)	\
    ( (This)->lpVtbl -> put_CacheLength(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGrid_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0448 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IItemsWrapGridStatics[] = L"Windows.UI.Xaml.Controls.IItemsWrapGridStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0448 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0448_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0448_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IItemsWrapGridStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4EC5427D-24A0-449A-B763-3077BA0F2DD5")
                        IItemsWrapGridStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupPaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaximumRowsOrColumnsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GroupHeaderPlacementProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheLengthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IItemsWrapGridStatics = __uuidof(IItemsWrapGridStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupPaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumnsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GroupHeaderPlacementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_GroupPaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_GroupPaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_MaximumRowsOrColumnsProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaximumRowsOrColumnsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_ItemWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_ItemHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_GroupHeaderPlacementProperty(This,value)	\
    ( (This)->lpVtbl -> get_GroupHeaderPlacementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_get_CacheLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_CacheLengthProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIItemsWrapGridStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0449 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseHeaderItem[] = L"Windows.UI.Xaml.Controls.IListViewBaseHeaderItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0449 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0449_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0449_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBaseHeaderItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6D0DED27-0D19-4091-8917-CE7C85C1E630")
                        IListViewBaseHeaderItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBaseHeaderItem = __uuidof(IListViewBaseHeaderItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0450 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewBaseHeaderItemFactory[] = L"Windows.UI.Xaml.Controls.IListViewBaseHeaderItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0450 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0450_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0450_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewBaseHeaderItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3872A6A1-EA19-455F-9DF7-147CC41D329C")
                        IListViewBaseHeaderItemFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IListViewBaseHeaderItemFactory = __uuidof(IListViewBaseHeaderItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0451 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewHeaderItem[] = L"Windows.UI.Xaml.Controls.IListViewHeaderItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0451 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0451_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0451_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewHeaderItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1B61BAEB-E196-4B3B-A5F9-1ED636F3F79B")
                        IListViewHeaderItem : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IListViewHeaderItem = __uuidof(IListViewHeaderItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0452 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IListViewHeaderItemFactory[] = L"Windows.UI.Xaml.Controls.IListViewHeaderItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0452 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0452_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0452_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IListViewHeaderItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("68D2C96A-96B0-4F08-A7A5-F1086720A0FA")
                        IListViewHeaderItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IListViewHeaderItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IListViewHeaderItemFactory = __uuidof(IListViewHeaderItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0453 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyout[] = L"Windows.UI.Xaml.Controls.IMenuFlyout";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0453 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0453_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0453_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyout */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AD3210F1-985B-4171-BBBA-67BCC729649B")
                        IMenuFlyout : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Items( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MenuFlyoutPresenterStyle( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MenuFlyoutPresenterStyle( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyout = __uuidof(IMenuFlyout);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Items )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMenuFlyoutItemBase **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MenuFlyoutPresenterStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MenuFlyoutPresenterStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_get_Items(This,value)	\
    ( (This)->lpVtbl -> get_Items(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_get_MenuFlyoutPresenterStyle(This,value)	\
    ( (This)->lpVtbl -> get_MenuFlyoutPresenterStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_put_MenuFlyoutPresenterStyle(This,value)	\
    ( (This)->lpVtbl -> put_MenuFlyoutPresenterStyle(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0454 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutStatics[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0454 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0454_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0454_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("3DBEFBA1-9522-4045-9E58-C99B13AAB9B9")
                        IMenuFlyoutStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MenuFlyoutPresenterStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutStatics = __uuidof(IMenuFlyoutStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MenuFlyoutPresenterStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_get_MenuFlyoutPresenterStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_MenuFlyoutPresenterStyleProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0455 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0455 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0455_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0455_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("644533AB-BBB9-499B-9FF3-30D40E2C56D8")
                        IMenuFlyoutFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyout **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutFactory = __uuidof(IMenuFlyoutFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyout **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0456 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0456 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0456_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0456_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("160775CF-B598-44AF-A488-C3CE2AF6D3F0")
                        IMenuFlyoutItem : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Text( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Command( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Input::ICommand **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Command( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::ICommand *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CommandParameter( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CommandParameter( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_Click( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Click( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutItem = __uuidof(IMenuFlyoutItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Command )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Command )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CICommand *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CommandParameter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CommandParameter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Click )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Click )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_get_Text(This,value)	\
    ( (This)->lpVtbl -> get_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_put_Text(This,value)	\
    ( (This)->lpVtbl -> put_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_get_Command(This,value)	\
    ( (This)->lpVtbl -> get_Command(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_put_Command(This,value)	\
    ( (This)->lpVtbl -> put_Command(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_get_CommandParameter(This,value)	\
    ( (This)->lpVtbl -> get_CommandParameter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_put_CommandParameter(This,value)	\
    ( (This)->lpVtbl -> put_CommandParameter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_add_Click(This,value,token)	\
    ( (This)->lpVtbl -> add_Click(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_remove_Click(This,token)	\
    ( (This)->lpVtbl -> remove_Click(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0457 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemStatics[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0457 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0457_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0457_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("4950B424-A43A-41F7-AA3A-9CE9619747D5")
                        IMenuFlyoutItemStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CommandProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CommandParameterProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutItemStatics = __uuidof(IMenuFlyoutItemStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CommandProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CommandParameterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_get_TextProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_get_CommandProperty(This,value)	\
    ( (This)->lpVtbl -> get_CommandProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_get_CommandParameterProperty(This,value)	\
    ( (This)->lpVtbl -> get_CommandParameterProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0458 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0458 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0458_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0458_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C5AA39E2-44F3-455E-9C5B-62BB6AFCE3AD")
                        IMenuFlyoutItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutItemFactory = __uuidof(IMenuFlyoutItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0459 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemBase[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemBase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0459 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0459_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0459_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F9B56047-8DA6-4730-9208-144125C6B396")
                        IMenuFlyoutItemBase : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutItemBase = __uuidof(IMenuFlyoutItemBase);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0460 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutItemBaseFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0460 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0460_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0460_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItemBaseFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("83E6DBAD-FC67-41D5-8797-60ACD1CEB1D9")
                        IMenuFlyoutItemBaseFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutItemBaseFactory = __uuidof(IMenuFlyoutItemBaseFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItemBaseFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0461 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenter";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0461 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0461_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0461_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutPresenter */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("906E0304-254E-413F-B219-C7B97F003752")
                        IMenuFlyoutPresenter : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutPresenter = __uuidof(IMenuFlyoutPresenter);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0462 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutPresenterFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutPresenterFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0462 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0462_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0462_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutPresenterFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B88B5091-101C-41F8-AAC1-1B105C14FB99")
                        IMenuFlyoutPresenterFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutPresenter **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutPresenterFactory = __uuidof(IMenuFlyoutPresenterFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenterFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0463 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSeparator[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSeparator";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0463 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0463_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0463_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutSeparator */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("71FA2B7D-0B51-4950-A1A4-BBC42EAC4C12")
                        IMenuFlyoutSeparator : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutSeparator = __uuidof(IMenuFlyoutSeparator);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0464 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IMenuFlyoutSeparatorFactory[] = L"Windows.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0464 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0464_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0464_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IMenuFlyoutSeparatorFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C159DCC8-B437-44E0-B24B-5720AEA1DBAC")
                        IMenuFlyoutSeparatorFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutSeparator **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMenuFlyoutSeparatorFactory = __uuidof(IMenuFlyoutSeparatorFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparator **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutSeparatorFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0465 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPage[] = L"Windows.UI.Xaml.Controls.IPage";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0465 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0465_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0465_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPage */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C4B27075-E641-453E-824D-012FC7CF95CF")
                        IPage : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Frame( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IFrame **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NavigationCacheMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Navigation::NavigationCacheMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_NavigationCacheMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Navigation::NavigationCacheMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopAppBar( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IAppBar **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TopAppBar( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IAppBar *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BottomAppBar( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IAppBar **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BottomAppBar( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IAppBar *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPage = __uuidof(IPage);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Frame )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFrame **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NavigationCacheMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NavigationCacheMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CNavigation_CNavigationCacheMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopAppBar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TopAppBar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BottomAppBar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BottomAppBar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPage * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPage
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_get_Frame(This,value)	\
    ( (This)->lpVtbl -> get_Frame(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_get_NavigationCacheMode(This,value)	\
    ( (This)->lpVtbl -> get_NavigationCacheMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_put_NavigationCacheMode(This,value)	\
    ( (This)->lpVtbl -> put_NavigationCacheMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_get_TopAppBar(This,value)	\
    ( (This)->lpVtbl -> get_TopAppBar(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_put_TopAppBar(This,value)	\
    ( (This)->lpVtbl -> put_TopAppBar(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_get_BottomAppBar(This,value)	\
    ( (This)->lpVtbl -> get_BottomAppBar(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPage_put_BottomAppBar(This,value)	\
    ( (This)->lpVtbl -> put_BottomAppBar(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPage_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0466 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPageOverrides[] = L"Windows.UI.Xaml.Controls.IPageOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0466 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0466_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0466_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPageOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("230B9CB8-3419-4306-AABE-4A8E680D3627")
                        IPageOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnNavigatedFrom( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigationEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnNavigatedTo( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigationEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnNavigatingFrom( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::INavigatingCancelEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPageOverrides = __uuidof(IPageOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnNavigatedFrom )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnNavigatedTo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigationEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnNavigatingFrom )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CINavigatingCancelEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_OnNavigatedFrom(This,e)	\
    ( (This)->lpVtbl -> OnNavigatedFrom(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_OnNavigatedTo(This,e)	\
    ( (This)->lpVtbl -> OnNavigatedTo(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_OnNavigatingFrom(This,e)	\
    ( (This)->lpVtbl -> OnNavigatingFrom(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0467 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPageStatics[] = L"Windows.UI.Xaml.Controls.IPageStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0467 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0467_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0467_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPageStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("376DDE71-F725-46DD-8D80-EEEAF7DA74E5")
                        IPageStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FrameProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TopAppBarProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BottomAppBarProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPageStatics = __uuidof(IPageStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TopAppBarProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BottomAppBarProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_get_FrameProperty(This,value)	\
    ( (This)->lpVtbl -> get_FrameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_get_TopAppBarProperty(This,value)	\
    ( (This)->lpVtbl -> get_TopAppBarProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_get_BottomAppBarProperty(This,value)	\
    ( (This)->lpVtbl -> get_BottomAppBarProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0468 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPageFactory[] = L"Windows.UI.Xaml.Controls.IPageFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0468 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0468_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0468_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPageFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DFA149AC-1849-445E-937C-40A9590CC076")
                        IPageFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IPage **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPageFactory = __uuidof(IPageFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPage **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPageFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0469 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIcon[] = L"Windows.UI.Xaml.Controls.IPathIcon";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0469 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0469_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0469_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPathIcon */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("214C62DB-C366-4A0E-B9AD-DCF168D7EC0C")
                        IPathIcon : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeometry **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Data( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGeometry *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathIcon = __uuidof(IPathIcon);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Data )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_get_Data(This,value)	\
    ( (This)->lpVtbl -> get_Data(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_put_Data(This,value)	\
    ( (This)->lpVtbl -> put_Data(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0470 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconStatics[] = L"Windows.UI.Xaml.Controls.IPathIconStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0470 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0470_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0470_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPathIconStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("77B75DB8-FB15-491A-B6E3-7DBBA911BAFE")
                        IPathIconStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathIconStatics = __uuidof(IPathIconStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_get_DataProperty(This,value)	\
    ( (This)->lpVtbl -> get_DataProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0471 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IPathIconFactory[] = L"Windows.UI.Xaml.Controls.IPathIconFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0471 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0471_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0471_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IPathIconFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AF9D9652-9C5D-4A37-9E1A-044ABEEF792B")
                        IPathIconFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IPathIcon **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathIconFactory = __uuidof(IPathIconFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIcon **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIPathIconFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0472 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBox[] = L"Windows.UI.Xaml.Controls.ISearchBox";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0472 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0472_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0472_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBox */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F89ECC5A-99BA-4BD4-966C-F11FA443D13C")
                        ISearchBox : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SearchHistoryEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SearchHistoryEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SearchHistoryContext( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SearchHistoryContext( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_PlaceholderText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_QueryText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_QueryText( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FocusOnKeyboardInput( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FocusOnKeyboardInput( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChooseSuggestionOnEnter( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ChooseSuggestionOnEnter( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_QueryChanged( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_QueryChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SuggestionsRequested( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SuggestionsRequested( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_QuerySubmitted( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_QuerySubmitted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ResultSuggestionChosen( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ResultSuggestionChosen( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_PrepareForFocusOnKeyboardInput( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_PrepareForFocusOnKeyboardInput( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetLocalContentSuggestionSettings( 
                                /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Search::ILocalContentSuggestionSettings *settings) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBox = __uuidof(ISearchBox);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SearchHistoryEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryContext )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SearchHistoryContext )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlaceholderText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_QueryText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_QueryText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FocusOnKeyboardInput )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FocusOnKeyboardInput )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChooseSuggestionOnEnter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChooseSuggestionOnEnter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_QueryChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQueryChangedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_QueryChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SuggestionsRequested )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxSuggestionsRequestedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SuggestionsRequested )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_QuerySubmitted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxQuerySubmittedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_QuerySubmitted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ResultSuggestionChosen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CControls__CSearchBoxResultSuggestionChosenEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ResultSuggestionChosen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PrepareForFocusOnKeyboardInput )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PrepareForFocusOnKeyboardInput )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *SetLocalContentSuggestionSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CSearch_CILocalContentSuggestionSettings *settings);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_get_SearchHistoryEnabled(This,value)	\
    ( (This)->lpVtbl -> get_SearchHistoryEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_put_SearchHistoryEnabled(This,value)	\
    ( (This)->lpVtbl -> put_SearchHistoryEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_get_SearchHistoryContext(This,value)	\
    ( (This)->lpVtbl -> get_SearchHistoryContext(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_put_SearchHistoryContext(This,value)	\
    ( (This)->lpVtbl -> put_SearchHistoryContext(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_get_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_put_PlaceholderText(This,value)	\
    ( (This)->lpVtbl -> put_PlaceholderText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_get_QueryText(This,value)	\
    ( (This)->lpVtbl -> get_QueryText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_put_QueryText(This,value)	\
    ( (This)->lpVtbl -> put_QueryText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_get_FocusOnKeyboardInput(This,value)	\
    ( (This)->lpVtbl -> get_FocusOnKeyboardInput(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_put_FocusOnKeyboardInput(This,value)	\
    ( (This)->lpVtbl -> put_FocusOnKeyboardInput(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_get_ChooseSuggestionOnEnter(This,value)	\
    ( (This)->lpVtbl -> get_ChooseSuggestionOnEnter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_put_ChooseSuggestionOnEnter(This,value)	\
    ( (This)->lpVtbl -> put_ChooseSuggestionOnEnter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_add_QueryChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_QueryChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_remove_QueryChanged(This,token)	\
    ( (This)->lpVtbl -> remove_QueryChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_add_SuggestionsRequested(This,value,token)	\
    ( (This)->lpVtbl -> add_SuggestionsRequested(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_remove_SuggestionsRequested(This,token)	\
    ( (This)->lpVtbl -> remove_SuggestionsRequested(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_add_QuerySubmitted(This,value,token)	\
    ( (This)->lpVtbl -> add_QuerySubmitted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_remove_QuerySubmitted(This,token)	\
    ( (This)->lpVtbl -> remove_QuerySubmitted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_add_ResultSuggestionChosen(This,value,token)	\
    ( (This)->lpVtbl -> add_ResultSuggestionChosen(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_remove_ResultSuggestionChosen(This,token)	\
    ( (This)->lpVtbl -> remove_ResultSuggestionChosen(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_add_PrepareForFocusOnKeyboardInput(This,value,token)	\
    ( (This)->lpVtbl -> add_PrepareForFocusOnKeyboardInput(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_remove_PrepareForFocusOnKeyboardInput(This,token)	\
    ( (This)->lpVtbl -> remove_PrepareForFocusOnKeyboardInput(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_SetLocalContentSuggestionSettings(This,settings)	\
    ( (This)->lpVtbl -> SetLocalContentSuggestionSettings(This,settings) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0473 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxStatics[] = L"Windows.UI.Xaml.Controls.ISearchBoxStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0473 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0473_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0473_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBoxStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B123634F-6871-48CD-92DF-4CFF22459082")
                        ISearchBoxStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SearchHistoryEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SearchHistoryContextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PlaceholderTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_QueryTextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FocusOnKeyboardInputProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChooseSuggestionOnEnterProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBoxStatics = __uuidof(ISearchBoxStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SearchHistoryContextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlaceholderTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_QueryTextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FocusOnKeyboardInputProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChooseSuggestionOnEnterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_get_SearchHistoryEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_SearchHistoryEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_get_SearchHistoryContextProperty(This,value)	\
    ( (This)->lpVtbl -> get_SearchHistoryContextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_get_PlaceholderTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_PlaceholderTextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_get_QueryTextProperty(This,value)	\
    ( (This)->lpVtbl -> get_QueryTextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_get_FocusOnKeyboardInputProperty(This,value)	\
    ( (This)->lpVtbl -> get_FocusOnKeyboardInputProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_get_ChooseSuggestionOnEnterProperty(This,value)	\
    ( (This)->lpVtbl -> get_ChooseSuggestionOnEnterProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0474 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxFactory[] = L"Windows.UI.Xaml.Controls.ISearchBoxFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0474 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0474_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0474_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBoxFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("CD743F6D-8685-46B4-9DDD-202F6941B701")
                        ISearchBoxFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISearchBox **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBoxFactory = __uuidof(ISearchBoxFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0475 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxQueryChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxQueryChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0475 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0475_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0475_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBoxQueryChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A9A70F8F-0CB0-4BD2-9998-2FB57AD5E731")
                        ISearchBoxQueryChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_QueryText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LinguisticDetails( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::Search::ISearchQueryLinguisticDetails **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBoxQueryChangedEventArgs = __uuidof(ISearchBoxQueryChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_QueryText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinguisticDetails )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_get_QueryText(This,value)	\
    ( (This)->lpVtbl -> get_QueryText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_get_Language(This,value)	\
    ( (This)->lpVtbl -> get_Language(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_get_LinguisticDetails(This,value)	\
    ( (This)->lpVtbl -> get_LinguisticDetails(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQueryChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0476 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxQuerySubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxQuerySubmittedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0476 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0476_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0476_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBoxQuerySubmittedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("126E90FD-3C4E-4CCB-9AEF-4705D19FE548")
                        ISearchBoxQuerySubmittedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_QueryText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LinguisticDetails( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::Search::ISearchQueryLinguisticDetails **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyModifiers( 
                                /* [out][retval] */ __RPC__out ABI::Windows::System::VirtualKeyModifiers *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBoxQuerySubmittedEventArgs = __uuidof(ISearchBoxQuerySubmittedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_QueryText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinguisticDetails )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyModifiers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CSystem_CVirtualKeyModifiers *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_get_QueryText(This,value)	\
    ( (This)->lpVtbl -> get_QueryText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_get_Language(This,value)	\
    ( (This)->lpVtbl -> get_Language(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_get_LinguisticDetails(This,value)	\
    ( (This)->lpVtbl -> get_LinguisticDetails(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_get_KeyModifiers(This,value)	\
    ( (This)->lpVtbl -> get_KeyModifiers(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxQuerySubmittedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0477 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxResultSuggestionChosenEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxResultSuggestionChosenEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0477 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0477_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0477_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBoxResultSuggestionChosenEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("18918C23-E4C3-4662-A03B-D054FFD0F905")
                        ISearchBoxResultSuggestionChosenEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tag( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyModifiers( 
                                /* [out][retval] */ __RPC__out ABI::Windows::System::VirtualKeyModifiers *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBoxResultSuggestionChosenEventArgs = __uuidof(ISearchBoxResultSuggestionChosenEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyModifiers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CSystem_CVirtualKeyModifiers *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_get_Tag(This,value)	\
    ( (This)->lpVtbl -> get_Tag(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_get_KeyModifiers(This,value)	\
    ( (This)->lpVtbl -> get_KeyModifiers(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxResultSuggestionChosenEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0478 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISearchBoxSuggestionsRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.ISearchBoxSuggestionsRequestedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0478 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0478_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0478_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISearchBoxSuggestionsRequestedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DA15170E-E566-48CB-BD11-FE4B0F30A44D")
                        ISearchBoxSuggestionsRequestedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_QueryText( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LinguisticDetails( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::Search::ISearchQueryLinguisticDetails **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::Search::ISearchSuggestionsRequest **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISearchBoxSuggestionsRequestedEventArgs = __uuidof(ISearchBoxSuggestionsRequestedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_QueryText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LinguisticDetails )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchQueryLinguisticDetails **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CSearch_CISearchSuggestionsRequest **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_get_QueryText(This,value)	\
    ( (This)->lpVtbl -> get_QueryText(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_get_Language(This,value)	\
    ( (This)->lpVtbl -> get_Language(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_get_LinguisticDetails(This,value)	\
    ( (This)->lpVtbl -> get_LinguisticDetails(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_get_Request(This,value)	\
    ( (This)->lpVtbl -> get_Request(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISearchBoxSuggestionsRequestedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0479 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISectionsInViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0479 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0479_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0479_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISectionsInViewChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("DD49EE6B-D165-430F-A37D-B807064F85E1")
                        ISectionsInViewChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AddedSections( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RemovedSections( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISectionsInViewChangedEventArgs = __uuidof(ISectionsInViewChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AddedSections )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RemovedSections )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CHubSection **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_get_AddedSections(This,value)	\
    ( (This)->lpVtbl -> get_AddedSections(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_get_RemovedSections(This,value)	\
    ( (This)->lpVtbl -> get_RemovedSections(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0480 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISectionsInViewChangedEventArgsFactory[] = L"Windows.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0480 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0480_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0480_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISectionsInViewChangedEventArgsFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("557F5244-92F8-4150-B730-E6346E8F50D1")
                        ISectionsInViewChangedEventArgsFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ISectionsInViewChangedEventArgsFactory = __uuidof(ISectionsInViewChangedEventArgsFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISectionsInViewChangedEventArgsFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0481 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainBackgroundPanel[] = L"Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0481 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0481_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0481_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISwapChainBackgroundPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1C59DB48-8233-4C0C-BCF5-02A5FB35AE00")
                        ISwapChainBackgroundPanel : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ISwapChainBackgroundPanel = __uuidof(ISwapChainBackgroundPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0482 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainBackgroundPanelFactory[] = L"Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0482 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0482_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0482_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISwapChainBackgroundPanelFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("198289D4-C89B-49B2-896C-5917BF8ADCAE")
                        ISwapChainBackgroundPanelFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISwapChainBackgroundPanel **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISwapChainBackgroundPanelFactory = __uuidof(ISwapChainBackgroundPanelFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanelFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0483 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainBackgroundPanel2[] = L"Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0483 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0483_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0483_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISwapChainBackgroundPanel2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("21E672F2-2592-4C38-870F-28FBCF52C095")
                        ISwapChainBackgroundPanel2 : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateCoreIndependentInputSource( 
                                /* [in] */ ABI::Windows::UI::Core::CoreInputDeviceTypes deviceTypes,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Core::ICoreInputSourceBase **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISwapChainBackgroundPanel2 = __uuidof(ISwapChainBackgroundPanel2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateCoreIndependentInputSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes deviceTypes,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_CreateCoreIndependentInputSource(This,deviceTypes,returnValue)	\
    ( (This)->lpVtbl -> CreateCoreIndependentInputSource(This,deviceTypes,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainBackgroundPanel2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0484 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainPanel[] = L"Windows.UI.Xaml.Controls.ISwapChainPanel";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0484 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0484_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0484_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISwapChainPanel */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C589644F-EBA8-427A-B75A-9F1F93A11AE9")
                        ISwapChainPanel : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CompositionScaleX( 
                                /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CompositionScaleY( 
                                /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_CompositionScaleChanged( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_CompositionScaleChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateCoreIndependentInputSource( 
                                /* [in] */ ABI::Windows::UI::Core::CoreInputDeviceTypes deviceTypes,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Core::ICoreInputSourceBase **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISwapChainPanel = __uuidof(ISwapChainPanel);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_CompositionScaleChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSwapChainPanel_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CompositionScaleChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *CreateCoreIndependentInputSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel * This,
            /* [in] */ __x_ABI_CWindows_CUI_CCore_CCoreInputDeviceTypes deviceTypes,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreInputSourceBase **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_get_CompositionScaleX(This,value)	\
    ( (This)->lpVtbl -> get_CompositionScaleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_get_CompositionScaleY(This,value)	\
    ( (This)->lpVtbl -> get_CompositionScaleY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_add_CompositionScaleChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_CompositionScaleChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_remove_CompositionScaleChanged(This,token)	\
    ( (This)->lpVtbl -> remove_CompositionScaleChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_CreateCoreIndependentInputSource(This,deviceTypes,returnValue)	\
    ( (This)->lpVtbl -> CreateCoreIndependentInputSource(This,deviceTypes,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0485 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainPanelStatics[] = L"Windows.UI.Xaml.Controls.ISwapChainPanelStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0485 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0485_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0485_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISwapChainPanelStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F89C0297-EEA8-498C-99C4-257E3660DF7E")
                        ISwapChainPanelStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CompositionScaleXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CompositionScaleYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISwapChainPanelStatics = __uuidof(ISwapChainPanelStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CompositionScaleYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_get_CompositionScaleXProperty(This,value)	\
    ( (This)->lpVtbl -> get_CompositionScaleXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_get_CompositionScaleYProperty(This,value)	\
    ( (This)->lpVtbl -> get_CompositionScaleYProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0486 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISwapChainPanelFactory[] = L"Windows.UI.Xaml.Controls.ISwapChainPanelFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0486 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0486_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0486_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISwapChainPanelFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F38F8D7F-1A48-49CB-86D2-10EAAAF6FD70")
                        ISwapChainPanelFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISwapChainPanel **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISwapChainPanelFactory = __uuidof(ISwapChainPanelFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanel **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISwapChainPanelFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0487 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIcon[] = L"Windows.UI.Xaml.Controls.ISymbolIcon";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0487 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0487_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0487_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISymbolIcon */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("7A4774C9-A6A3-4B30-8FF1-9081D70E9A5C")
                        ISymbolIcon : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Symbol( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Symbol *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Symbol( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Symbol value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISymbolIcon = __uuidof(ISymbolIcon);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Symbol )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Symbol )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_get_Symbol(This,value)	\
    ( (This)->lpVtbl -> get_Symbol(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_put_Symbol(This,value)	\
    ( (This)->lpVtbl -> put_Symbol(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0488 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconStatics[] = L"Windows.UI.Xaml.Controls.ISymbolIconStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0488 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0488_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0488_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISymbolIconStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("8624FBDF-952C-4F76-B03F-30833BE99572")
                        ISymbolIconStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SymbolProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISymbolIconStatics = __uuidof(ISymbolIconStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SymbolProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_get_SymbolProperty(This,value)	\
    ( (This)->lpVtbl -> get_SymbolProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0489 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ISymbolIconFactory[] = L"Windows.UI.Xaml.Controls.ISymbolIconFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0489 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0489_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0489_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ISymbolIconFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C7252B88-E76C-4B44-8A05-046B9DC772B8")
                        ISymbolIconFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithSymbol( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Symbol symbol,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ISymbolIcon **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISymbolIconFactory = __uuidof(ISymbolIconFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithSymbol )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CSymbol symbol,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIcon **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_CreateInstanceWithSymbol(This,symbol,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithSymbol(This,symbol,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CISymbolIconFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0490 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePicker[] = L"Windows.UI.Xaml.Controls.ITimePicker";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0490 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0490_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0490_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITimePicker */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("E39099F2-3AFF-4792-909E-2D9941EC0357")
                        ITimePicker : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Header( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Header( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HeaderTemplate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClockIdentifier( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClockIdentifier( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinuteIncrement( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinuteIncrement( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Time( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Time( 
                                /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_TimeChanged( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_TimeChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimePicker = __uuidof(ITimePicker);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Header )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClockIdentifier )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClockIdentifier )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinuteIncrement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinuteIncrement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Time )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Time )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        HRESULT ( STDMETHODCALLTYPE *add_TimeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_Windows__CUI__CXaml__CControls__CTimePickerValueChangedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_TimeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_get_Header(This,value)	\
    ( (This)->lpVtbl -> get_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_put_Header(This,value)	\
    ( (This)->lpVtbl -> put_Header(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_get_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_put_HeaderTemplate(This,value)	\
    ( (This)->lpVtbl -> put_HeaderTemplate(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_get_ClockIdentifier(This,value)	\
    ( (This)->lpVtbl -> get_ClockIdentifier(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_put_ClockIdentifier(This,value)	\
    ( (This)->lpVtbl -> put_ClockIdentifier(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_get_MinuteIncrement(This,value)	\
    ( (This)->lpVtbl -> get_MinuteIncrement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_put_MinuteIncrement(This,value)	\
    ( (This)->lpVtbl -> put_MinuteIncrement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_get_Time(This,value)	\
    ( (This)->lpVtbl -> get_Time(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_put_Time(This,value)	\
    ( (This)->lpVtbl -> put_Time(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_add_TimeChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_TimeChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_remove_TimeChanged(This,token)	\
    ( (This)->lpVtbl -> remove_TimeChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0491 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerStatics[] = L"Windows.UI.Xaml.Controls.ITimePickerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0491 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0491_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0491_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITimePickerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("FA71DFB1-233E-4F31-B8BE-A6EA670C25CD")
                        ITimePickerStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeaderTemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClockIdentifierProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinuteIncrementProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TimeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimePickerStatics = __uuidof(ITimePickerStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderTemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClockIdentifierProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinuteIncrementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_get_HeaderProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_get_HeaderTemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeaderTemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_get_ClockIdentifierProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClockIdentifierProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_get_MinuteIncrementProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinuteIncrementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_get_TimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_TimeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0492 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerFactory[] = L"Windows.UI.Xaml.Controls.ITimePickerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0492 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0492_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0492_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITimePickerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("553FE413-6CD7-46A9-A97B-A18BDC4B4CA3")
                        ITimePickerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::ITimePicker **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimePickerFactory = __uuidof(ITimePickerFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0493 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_ITimePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ITimePickerValueChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0493 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0493_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0493_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::ITimePickerValueChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("2F4EDB8D-B995-4E31-8BA9-C4DCDEB21CA3")
                        ITimePickerValueChangedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OldTime( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewTime( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimePickerValueChangedEventArgs = __uuidof(ITimePickerValueChangedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OldTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_get_OldTime(This,value)	\
    ( (This)->lpVtbl -> get_OldTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_get_NewTime(This,value)	\
    ( (This)->lpVtbl -> get_NewTime(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CITimePickerValueChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0494 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleMenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0494 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0494_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0494_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToggleMenuFlyoutItem */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("49841EDD-88E9-4663-A701-CD4FD25E398F")
                        IToggleMenuFlyoutItem : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsChecked( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsChecked( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToggleMenuFlyoutItem = __uuidof(IToggleMenuFlyoutItem);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsChecked )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsChecked )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_get_IsChecked(This,value)	\
    ( (This)->lpVtbl -> get_IsChecked(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_put_IsChecked(This,value)	\
    ( (This)->lpVtbl -> put_IsChecked(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0495 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleMenuFlyoutItemStatics[] = L"Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0495 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0495_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0495_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToggleMenuFlyoutItemStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("16C724FB-6C1A-4852-9258-08C038367907")
                        IToggleMenuFlyoutItemStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCheckedProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToggleMenuFlyoutItemStatics = __uuidof(IToggleMenuFlyoutItemStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCheckedProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_get_IsCheckedProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsCheckedProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0496 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IToggleMenuFlyoutItemFactory[] = L"Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0496 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0496_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0496_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IToggleMenuFlyoutItemFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A151966F-3BF7-46B6-B61C-9B2C1BA68843")
                        IToggleMenuFlyoutItemFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IToggleMenuFlyoutItem **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IToggleMenuFlyoutItemFactory = __uuidof(IToggleMenuFlyoutItemFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItemFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0497 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView[] = L"Windows.UI.Xaml.Controls.IWebView";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0497 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0497_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0497_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebView */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("5862CC46-1F7D-479B-92A6-DE7858FE8D54")
                        IWebView : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowedScriptNotifyUris( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CUri **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AllowedScriptNotifyUris( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CUri *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataTransferPackage( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::DataTransfer::IDataPackage **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_LoadCompleted( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Navigation::ILoadCompletedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_LoadCompleted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ScriptNotify( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::INotifyEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ScriptNotify( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_NavigationFailed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebViewNavigationFailedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_NavigationFailed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE InvokeScript( 
                                /* [in] */ __RPC__in HSTRING scriptName,
                                /* [in] */ UINT32 __argumentsSize,
                                /* [in][size_is] */ __RPC__in_ecount_full(__argumentsSize) HSTRING *arguments,
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Navigate( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *source) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE NavigateToString( 
                                /* [in] */ __RPC__in HSTRING text) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebView = __uuidof(IWebView);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedScriptNotifyUris )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CUri **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedScriptNotifyUris )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CUri *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataTransferPackage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_LoadCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CNavigation_CILoadCompletedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_LoadCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ScriptNotify )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CINotifyEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ScriptNotify )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_NavigationFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *InvokeScript )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in HSTRING scriptName,
            /* [in] */ UINT32 __argumentsSize,
            /* [in][size_is] */ __RPC__in_ecount_full(__argumentsSize) HSTRING *arguments,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *source);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateToString )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView * This,
            /* [in] */ __RPC__in HSTRING text);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_put_Source(This,value)	\
    ( (This)->lpVtbl -> put_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_get_AllowedScriptNotifyUris(This,value)	\
    ( (This)->lpVtbl -> get_AllowedScriptNotifyUris(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_put_AllowedScriptNotifyUris(This,value)	\
    ( (This)->lpVtbl -> put_AllowedScriptNotifyUris(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_get_DataTransferPackage(This,value)	\
    ( (This)->lpVtbl -> get_DataTransferPackage(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_add_LoadCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_LoadCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_remove_LoadCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_LoadCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_add_ScriptNotify(This,value,token)	\
    ( (This)->lpVtbl -> add_ScriptNotify(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_remove_ScriptNotify(This,token)	\
    ( (This)->lpVtbl -> remove_ScriptNotify(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_add_NavigationFailed(This,value,token)	\
    ( (This)->lpVtbl -> add_NavigationFailed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_remove_NavigationFailed(This,token)	\
    ( (This)->lpVtbl -> remove_NavigationFailed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_InvokeScript(This,scriptName,__argumentsSize,arguments,returnValue)	\
    ( (This)->lpVtbl -> InvokeScript(This,scriptName,__argumentsSize,arguments,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_Navigate(This,source)	\
    ( (This)->lpVtbl -> Navigate(This,source) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_NavigateToString(This,text)	\
    ( (This)->lpVtbl -> NavigateToString(This,text) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0498 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics[] = L"Windows.UI.Xaml.Controls.IWebViewStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0498 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0498_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0498_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A0B561DE-5FDB-443B-B9F0-5C30F6B7A1F4")
                        IWebViewStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AnyScriptNotifyUri( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CUri **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowedScriptNotifyUrisProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataTransferPackageProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewStatics = __uuidof(IWebViewStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnyScriptNotifyUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CUri **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedScriptNotifyUrisProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataTransferPackageProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_get_AnyScriptNotifyUri(This,value)	\
    ( (This)->lpVtbl -> get_AnyScriptNotifyUri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_get_SourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_SourceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_get_AllowedScriptNotifyUrisProperty(This,value)	\
    ( (This)->lpVtbl -> get_AllowedScriptNotifyUrisProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_get_DataTransferPackageProperty(This,value)	\
    ( (This)->lpVtbl -> get_DataTransferPackageProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0499 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebView2[] = L"Windows.UI.Xaml.Controls.IWebView2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0499 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0499_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0499_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebView2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D481759E-3EFF-4462-823D-FD52F9BA4CC8")
                        IWebView2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoBack( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoForward( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DocumentTitle( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_NavigationStarting( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_NavigationStarting( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ContentLoading( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ContentLoading( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_DOMContentLoaded( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_DOMContentLoaded( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GoForward( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GoBack( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CapturePreviewToStreamAsync( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStream *stream,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IAsyncAction **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE InvokeScriptAsync( 
                                /* [in] */ __RPC__in HSTRING scriptName,
                                /* [in] */ __RPC__in_opt __FIIterable_1_HSTRING *arguments,
                                /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_HSTRING **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CaptureSelectedContentToDataPackageAsync( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage **returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE NavigateToLocalStreamUri( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *source,
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::IUriToStreamResolver *streamResolver) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE BuildLocalStreamUri( 
                                /* [in] */ __RPC__in HSTRING contentIdentifier,
                                /* [in] */ __RPC__in HSTRING relativePath,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **returnValue) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultBackgroundColor( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DefaultBackgroundColor( 
                                /* [in] */ ABI::Windows::UI::Color value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_NavigationCompleted( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_NavigationCompleted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_FrameNavigationStarting( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_FrameNavigationStarting( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_FrameContentLoading( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_FrameContentLoading( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_FrameDOMContentLoaded( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_FrameDOMContentLoaded( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_FrameNavigationCompleted( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_FrameNavigationCompleted( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_LongRunningScriptDetected( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_LongRunningScriptDetected( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_UnsafeContentWarningDisplaying( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_UnsafeContentWarningDisplaying( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_UnviewableContentIdentified( 
                                /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_UnviewableContentIdentified( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE NavigateWithHttpRequestMessage( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::IHttpRequestMessage *requestMessage) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Focus( 
                                /* [in] */ ABI::Windows::UI::Xaml::FocusState value,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebView2 = __uuidof(IWebView2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBack )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForward )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_NavigationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ContentLoading )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ContentLoading )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DOMContentLoaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DOMContentLoaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *GoForward )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GoBack )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CapturePreviewToStreamAsync )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream *stream,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIAsyncAction **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *InvokeScriptAsync )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in HSTRING scriptName,
            /* [in] */ __RPC__in_opt __FIIterable_1_HSTRING *arguments,
            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_HSTRING **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *CaptureSelectedContentToDataPackageAsync )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackage **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateToLocalStreamUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *source,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CIUriToStreamResolver *streamResolver);
        
        HRESULT ( STDMETHODCALLTYPE *BuildLocalStreamUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in HSTRING contentIdentifier,
            /* [in] */ __RPC__in HSTRING relativePath,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **returnValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultBackgroundColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        HRESULT ( STDMETHODCALLTYPE *add_NavigationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_NavigationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationStartingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_FrameContentLoading )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewContentLoadingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_FrameContentLoading )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_FrameDOMContentLoaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewDOMContentLoadedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_FrameDOMContentLoaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_FrameNavigationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewNavigationCompletedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_FrameNavigationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_LongRunningScriptDetected )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewLongRunningScriptDetectedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_LongRunningScriptDetected )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_UnsafeContentWarningDisplaying )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_UnsafeContentWarningDisplaying )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_UnviewableContentIdentified )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CWebView_Windows__CUI__CXaml__CControls__CWebViewUnviewableContentIdentifiedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_UnviewableContentIdentified )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateWithHttpRequestMessage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage *requestMessage);
        
        HRESULT ( STDMETHODCALLTYPE *Focus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CFocusState value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_get_CanGoBack(This,value)	\
    ( (This)->lpVtbl -> get_CanGoBack(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_get_CanGoForward(This,value)	\
    ( (This)->lpVtbl -> get_CanGoForward(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_get_DocumentTitle(This,value)	\
    ( (This)->lpVtbl -> get_DocumentTitle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_NavigationStarting(This,value,token)	\
    ( (This)->lpVtbl -> add_NavigationStarting(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_NavigationStarting(This,token)	\
    ( (This)->lpVtbl -> remove_NavigationStarting(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_ContentLoading(This,value,token)	\
    ( (This)->lpVtbl -> add_ContentLoading(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_ContentLoading(This,token)	\
    ( (This)->lpVtbl -> remove_ContentLoading(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_DOMContentLoaded(This,value,token)	\
    ( (This)->lpVtbl -> add_DOMContentLoaded(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_DOMContentLoaded(This,token)	\
    ( (This)->lpVtbl -> remove_DOMContentLoaded(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_GoForward(This)	\
    ( (This)->lpVtbl -> GoForward(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_GoBack(This)	\
    ( (This)->lpVtbl -> GoBack(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_CapturePreviewToStreamAsync(This,stream,returnValue)	\
    ( (This)->lpVtbl -> CapturePreviewToStreamAsync(This,stream,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_InvokeScriptAsync(This,scriptName,arguments,returnValue)	\
    ( (This)->lpVtbl -> InvokeScriptAsync(This,scriptName,arguments,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_CaptureSelectedContentToDataPackageAsync(This,returnValue)	\
    ( (This)->lpVtbl -> CaptureSelectedContentToDataPackageAsync(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_NavigateToLocalStreamUri(This,source,streamResolver)	\
    ( (This)->lpVtbl -> NavigateToLocalStreamUri(This,source,streamResolver) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_BuildLocalStreamUri(This,contentIdentifier,relativePath,returnValue)	\
    ( (This)->lpVtbl -> BuildLocalStreamUri(This,contentIdentifier,relativePath,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_get_DefaultBackgroundColor(This,value)	\
    ( (This)->lpVtbl -> get_DefaultBackgroundColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_put_DefaultBackgroundColor(This,value)	\
    ( (This)->lpVtbl -> put_DefaultBackgroundColor(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_NavigationCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_NavigationCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_NavigationCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_NavigationCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_FrameNavigationStarting(This,value,token)	\
    ( (This)->lpVtbl -> add_FrameNavigationStarting(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_FrameNavigationStarting(This,token)	\
    ( (This)->lpVtbl -> remove_FrameNavigationStarting(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_FrameContentLoading(This,value,token)	\
    ( (This)->lpVtbl -> add_FrameContentLoading(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_FrameContentLoading(This,token)	\
    ( (This)->lpVtbl -> remove_FrameContentLoading(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_FrameDOMContentLoaded(This,value,token)	\
    ( (This)->lpVtbl -> add_FrameDOMContentLoaded(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_FrameDOMContentLoaded(This,token)	\
    ( (This)->lpVtbl -> remove_FrameDOMContentLoaded(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_FrameNavigationCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_FrameNavigationCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_FrameNavigationCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_FrameNavigationCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_LongRunningScriptDetected(This,value,token)	\
    ( (This)->lpVtbl -> add_LongRunningScriptDetected(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_LongRunningScriptDetected(This,token)	\
    ( (This)->lpVtbl -> remove_LongRunningScriptDetected(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_UnsafeContentWarningDisplaying(This,value,token)	\
    ( (This)->lpVtbl -> add_UnsafeContentWarningDisplaying(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_UnsafeContentWarningDisplaying(This,token)	\
    ( (This)->lpVtbl -> remove_UnsafeContentWarningDisplaying(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_add_UnviewableContentIdentified(This,value,token)	\
    ( (This)->lpVtbl -> add_UnviewableContentIdentified(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_remove_UnviewableContentIdentified(This,token)	\
    ( (This)->lpVtbl -> remove_UnviewableContentIdentified(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_NavigateWithHttpRequestMessage(This,requestMessage)	\
    ( (This)->lpVtbl -> NavigateWithHttpRequestMessage(This,requestMessage) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_Focus(This,value,returnValue)	\
    ( (This)->lpVtbl -> Focus(This,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebView2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0500 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewStatics2[] = L"Windows.UI.Xaml.Controls.IWebViewStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0500 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0500_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0500_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("322F8780-E812-466B-9E50-8E9FEC24018A")
                        IWebViewStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoBackProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanGoForwardProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DocumentTitleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultBackgroundColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewStatics2 = __uuidof(IWebViewStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoBackProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanGoForwardProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentTitleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultBackgroundColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_get_CanGoBackProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanGoBackProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_get_CanGoForwardProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanGoForwardProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_get_DocumentTitleProperty(This,value)	\
    ( (This)->lpVtbl -> get_DocumentTitleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_get_DefaultBackgroundColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_DefaultBackgroundColorProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0501 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewBrush[] = L"Windows.UI.Xaml.Controls.IWebViewBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0501 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0501_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0501_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("40E86F75-0CF4-4B72-A4D6-CF5D15780116")
                        IWebViewBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceName( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SourceName( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Redraw( void) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE SetSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IWebView *source) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewBrush = __uuidof(IWebViewBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [in] */ __RPC__in HSTRING value);
        
        HRESULT ( STDMETHODCALLTYPE *Redraw )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIWebView *source);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_get_SourceName(This,value)	\
    ( (This)->lpVtbl -> get_SourceName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_put_SourceName(This,value)	\
    ( (This)->lpVtbl -> put_SourceName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_Redraw(This)	\
    ( (This)->lpVtbl -> Redraw(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_SetSource(This,source)	\
    ( (This)->lpVtbl -> SetSource(This,source) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0502 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewBrushStatics[] = L"Windows.UI.Xaml.Controls.IWebViewBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0502 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0502_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0502_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D74DAA24-1D05-463E-B028-6BAA4420E762")
                        IWebViewBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SourceNameProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewBrushStatics = __uuidof(IWebViewBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_get_SourceNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_SourceNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0503 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewContentLoadingEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewContentLoadingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0503 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0503_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0503_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewContentLoadingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("6E2980BB-98B8-413E-8129-971C6F7E4C8A")
                        IWebViewContentLoadingEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Uri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewContentLoadingEventArgs = __uuidof(IWebViewContentLoadingEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_get_Uri(This,value)	\
    ( (This)->lpVtbl -> get_Uri(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewContentLoadingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0504 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewDOMContentLoadedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewDOMContentLoadedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0504 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0504_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0504_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewDOMContentLoadedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("C47EBA15-DC6B-4B36-9D80-82FB8817B988")
                        IWebViewDOMContentLoadedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Uri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewDOMContentLoadedEventArgs = __uuidof(IWebViewDOMContentLoadedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_get_Uri(This,value)	\
    ( (This)->lpVtbl -> get_Uri(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewDOMContentLoadedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0505 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewLongRunningScriptDetectedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewLongRunningScriptDetectedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0505 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0505_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0505_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewLongRunningScriptDetectedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("F3F020AB-A46C-42B0-9EFE-69764D5CFFA6")
                        IWebViewLongRunningScriptDetectedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionTime( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StopPageScriptExecution( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StopPageScriptExecution( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewLongRunningScriptDetectedEventArgs = __uuidof(IWebViewLongRunningScriptDetectedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StopPageScriptExecution )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StopPageScriptExecution )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_get_ExecutionTime(This,value)	\
    ( (This)->lpVtbl -> get_ExecutionTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_get_StopPageScriptExecution(This,value)	\
    ( (This)->lpVtbl -> get_StopPageScriptExecution(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_put_StopPageScriptExecution(This,value)	\
    ( (This)->lpVtbl -> put_StopPageScriptExecution(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewLongRunningScriptDetectedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0506 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNavigationCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNavigationCompletedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0506 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0506_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0506_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewNavigationCompletedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("11E6F20B-EBA7-44C0-889B-EDEB6A064DDD")
                        IWebViewNavigationCompletedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Uri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSuccess( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_WebErrorStatus( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Web::WebErrorStatus *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewNavigationCompletedEventArgs = __uuidof(IWebViewNavigationCompletedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSuccess )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WebErrorStatus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CWeb_CWebErrorStatus *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_get_Uri(This,value)	\
    ( (This)->lpVtbl -> get_Uri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_get_IsSuccess(This,value)	\
    ( (This)->lpVtbl -> get_IsSuccess(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_get_WebErrorStatus(This,value)	\
    ( (This)->lpVtbl -> get_WebErrorStatus(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationCompletedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0507 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNavigationFailedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNavigationFailedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0507 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0507_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0507_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewNavigationFailedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("AF09609A-129C-4170-9E9C-E2CDF025DCA4")
                        IWebViewNavigationFailedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Uri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_WebErrorStatus( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Web::WebErrorStatus *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewNavigationFailedEventArgs = __uuidof(IWebViewNavigationFailedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WebErrorStatus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CWeb_CWebErrorStatus *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_get_Uri(This,value)	\
    ( (This)->lpVtbl -> get_Uri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_get_WebErrorStatus(This,value)	\
    ( (This)->lpVtbl -> get_WebErrorStatus(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationFailedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0508 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewNavigationStartingEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewNavigationStartingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0508 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0508_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0508_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewNavigationStartingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("94CB8668-8367-43D5-91BB-96EBA37EC784")
                        IWebViewNavigationStartingEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Uri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cancel( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Cancel( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewNavigationStartingEventArgs = __uuidof(IWebViewNavigationStartingEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_get_Uri(This,value)	\
    ( (This)->lpVtbl -> get_Uri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_get_Cancel(This,value)	\
    ( (This)->lpVtbl -> get_Cancel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_put_Cancel(This,value)	\
    ( (This)->lpVtbl -> put_Cancel(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewNavigationStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0509 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWebViewUnviewableContentIdentifiedEventArgs[] = L"Windows.UI.Xaml.Controls.IWebViewUnviewableContentIdentifiedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0509 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0509_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0509_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWebViewUnviewableContentIdentifiedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("37BC16E1-6062-4678-B20B-6C36AC9C59AC")
                        IWebViewUnviewableContentIdentifiedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Uri( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Referrer( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWebViewUnviewableContentIdentifiedEventArgs = __uuidof(IWebViewUnviewableContentIdentifiedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Referrer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_get_Uri(This,value)	\
    ( (This)->lpVtbl -> get_Uri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_get_Referrer(This,value)	\
    ( (This)->lpVtbl -> get_Referrer(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWebViewUnviewableContentIdentifiedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0510 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWrapGrid[] = L"Windows.UI.Xaml.Controls.IWrapGrid";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0510 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0510_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0510_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWrapGrid */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("0552178B-7567-47C2-BD5C-AD8394C828BA")
                        IWrapGrid : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemWidth( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemWidth( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemHeight( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ItemHeight( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Orientation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Orientation *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Orientation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Controls::Orientation value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalChildrenAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::HorizontalAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalChildrenAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::HorizontalAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalChildrenAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::VerticalAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalChildrenAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::VerticalAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaximumRowsOrColumns( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaximumRowsOrColumns( 
                                /* [in] */ INT32 value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWrapGrid = __uuidof(IWrapGrid);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ItemHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_COrientation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Orientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_COrientation value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalChildrenAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumns )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaximumRowsOrColumns )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid * This,
            /* [in] */ INT32 value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_get_ItemWidth(This,value)	\
    ( (This)->lpVtbl -> get_ItemWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_put_ItemWidth(This,value)	\
    ( (This)->lpVtbl -> put_ItemWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_get_ItemHeight(This,value)	\
    ( (This)->lpVtbl -> get_ItemHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_put_ItemHeight(This,value)	\
    ( (This)->lpVtbl -> put_ItemHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_get_Orientation(This,value)	\
    ( (This)->lpVtbl -> get_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_put_Orientation(This,value)	\
    ( (This)->lpVtbl -> put_Orientation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_get_HorizontalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_put_HorizontalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_get_VerticalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> get_VerticalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_put_VerticalChildrenAlignment(This,value)	\
    ( (This)->lpVtbl -> put_VerticalChildrenAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_get_MaximumRowsOrColumns(This,value)	\
    ( (This)->lpVtbl -> get_MaximumRowsOrColumns(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_put_MaximumRowsOrColumns(This,value)	\
    ( (This)->lpVtbl -> put_MaximumRowsOrColumns(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGrid_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0511 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IWrapGridStatics[] = L"Windows.UI.Xaml.Controls.IWrapGridStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0511 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0511_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0511_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IWrapGridStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("D04A6B97-13CB-479C-A285-E4E56846C4CB")
                        IWrapGridStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemWidthProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemHeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OrientationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalChildrenAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalChildrenAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaximumRowsOrColumnsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IWrapGridStatics = __uuidof(IWrapGridStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrientationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalChildrenAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalChildrenAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumRowsOrColumnsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_get_ItemWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_get_ItemHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ItemHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_get_OrientationProperty(This,value)	\
    ( (This)->lpVtbl -> get_OrientationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_get_HorizontalChildrenAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalChildrenAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_get_VerticalChildrenAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalChildrenAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_get_MaximumRowsOrColumnsProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaximumRowsOrColumnsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIWrapGridStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0512 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControl[] = L"Windows.UI.Xaml.Controls.IControl";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0512 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0512_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0512_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IControl */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A8912263-2951-4F58-A9C5-5A134EAA7F07")
                        IControl : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamily( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontFamily( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IFontFamily *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeight( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontWeight *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontWeight( 
                                /* [in] */ ABI::Windows::UI::Text::FontWeight value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyle( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStyle *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStyle( 
                                /* [in] */ ABI::Windows::UI::Text::FontStyle value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Text::FontStretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FontStretch( 
                                /* [in] */ ABI::Windows::UI::Text::FontStretch value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacing( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharacterSpacing( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Foreground( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Foreground( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTabStop( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTabStop( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsEnabled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsEnabled( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TabIndex( 
                                /* [out][retval] */ __RPC__out INT32 *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TabIndex( 
                                /* [in] */ INT32 value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TabNavigation( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Input::KeyboardNavigationMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TabNavigation( 
                                /* [in] */ ABI::Windows::UI::Xaml::Input::KeyboardNavigationMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Template( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IControlTemplate **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Template( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IControlTemplate *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Padding( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Padding( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalContentAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::HorizontalAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalContentAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::HorizontalAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalContentAlignment( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::VerticalAlignment *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalContentAlignment( 
                                /* [in] */ ABI::Windows::UI::Xaml::VerticalAlignment value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Background( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Background( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderThickness( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BorderThickness( 
                                /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderBrush( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BorderBrush( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IBrush *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FocusState( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::FocusState *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_IsEnabledChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_IsEnabledChanged( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ApplyTemplate( 
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Focus( 
                                /* [in] */ ABI::Windows::UI::Xaml::FocusState value,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IControl = __uuidof(IControl);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontWeight *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontWeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontWeight value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStyle *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStyle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStyle value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CText_CFontStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FontStretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CText_CFontStretch value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharacterSpacing )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Foreground )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTabStop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTabStop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TabIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TabIndex )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TabNavigation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TabNavigation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInput_CKeyboardNavigationMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Template )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Template )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Padding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalContentAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalContentAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalContentAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalContentAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Background )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Background )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderThickness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderThickness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderBrush )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderBrush )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FocusState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CFocusState *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_IsEnabledChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_IsEnabledChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *ApplyTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Focus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControl * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CFocusState value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControl
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_FontSize(This,value)	\
    ( (This)->lpVtbl -> get_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_FontSize(This,value)	\
    ( (This)->lpVtbl -> put_FontSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_FontFamily(This,value)	\
    ( (This)->lpVtbl -> get_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_FontFamily(This,value)	\
    ( (This)->lpVtbl -> put_FontFamily(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_FontWeight(This,value)	\
    ( (This)->lpVtbl -> get_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_FontWeight(This,value)	\
    ( (This)->lpVtbl -> put_FontWeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_FontStyle(This,value)	\
    ( (This)->lpVtbl -> get_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_FontStyle(This,value)	\
    ( (This)->lpVtbl -> put_FontStyle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_FontStretch(This,value)	\
    ( (This)->lpVtbl -> get_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_FontStretch(This,value)	\
    ( (This)->lpVtbl -> put_FontStretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_CharacterSpacing(This,value)	\
    ( (This)->lpVtbl -> put_CharacterSpacing(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_Foreground(This,value)	\
    ( (This)->lpVtbl -> get_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_Foreground(This,value)	\
    ( (This)->lpVtbl -> put_Foreground(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_IsTabStop(This,value)	\
    ( (This)->lpVtbl -> get_IsTabStop(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_IsTabStop(This,value)	\
    ( (This)->lpVtbl -> put_IsTabStop(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_IsEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_IsEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_TabIndex(This,value)	\
    ( (This)->lpVtbl -> get_TabIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_TabIndex(This,value)	\
    ( (This)->lpVtbl -> put_TabIndex(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_TabNavigation(This,value)	\
    ( (This)->lpVtbl -> get_TabNavigation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_TabNavigation(This,value)	\
    ( (This)->lpVtbl -> put_TabNavigation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_Template(This,value)	\
    ( (This)->lpVtbl -> get_Template(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_Template(This,value)	\
    ( (This)->lpVtbl -> put_Template(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_Padding(This,value)	\
    ( (This)->lpVtbl -> get_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_Padding(This,value)	\
    ( (This)->lpVtbl -> put_Padding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_HorizontalContentAlignment(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalContentAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_HorizontalContentAlignment(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalContentAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_VerticalContentAlignment(This,value)	\
    ( (This)->lpVtbl -> get_VerticalContentAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_VerticalContentAlignment(This,value)	\
    ( (This)->lpVtbl -> put_VerticalContentAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_Background(This,value)	\
    ( (This)->lpVtbl -> get_Background(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_Background(This,value)	\
    ( (This)->lpVtbl -> put_Background(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_BorderThickness(This,value)	\
    ( (This)->lpVtbl -> get_BorderThickness(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_BorderThickness(This,value)	\
    ( (This)->lpVtbl -> put_BorderThickness(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_BorderBrush(This,value)	\
    ( (This)->lpVtbl -> get_BorderBrush(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_put_BorderBrush(This,value)	\
    ( (This)->lpVtbl -> put_BorderBrush(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_get_FocusState(This,value)	\
    ( (This)->lpVtbl -> get_FocusState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_add_IsEnabledChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_IsEnabledChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_remove_IsEnabledChanged(This,token)	\
    ( (This)->lpVtbl -> remove_IsEnabledChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_ApplyTemplate(This,returnValue)	\
    ( (This)->lpVtbl -> ApplyTemplate(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControl_Focus(This,value,returnValue)	\
    ( (This)->lpVtbl -> Focus(This,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0513 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlOverrides[] = L"Windows.UI.Xaml.Controls.IControlOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0513 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0513_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0513_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IControlOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("A09691DF-9824-41FE-B530-B0D8990E64C1")
                        IControlOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnPointerEntered( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerPressed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerMoved( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerReleased( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerExited( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerCaptureLost( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerCanceled( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnPointerWheelChanged( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnTapped( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::ITappedRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnDoubleTapped( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IDoubleTappedRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnHolding( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IHoldingRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnRightTapped( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IRightTappedRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnManipulationStarting( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationStartingRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnManipulationInertiaStarting( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationInertiaStartingRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnManipulationStarted( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationStartedRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnManipulationDelta( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationDeltaRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnManipulationCompleted( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationCompletedRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnKeyUp( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IKeyRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnKeyDown( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IKeyRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnGotFocus( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnLostFocus( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnDragEnter( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnDragLeave( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnDragOver( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventArgs *e) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE OnDrop( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IControlOverrides = __uuidof(IControlOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerEntered )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerPressed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerMoved )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerReleased )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerExited )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerCaptureLost )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerCanceled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnPointerWheelChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CITappedRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnDoubleTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnHolding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnRightTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnManipulationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnManipulationInertiaStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnManipulationStarted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnManipulationDelta )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnManipulationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnKeyUp )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnKeyDown )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnGotFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnLostFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnDragEnter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnDragLeave )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnDragOver )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs *e);
        
        HRESULT ( STDMETHODCALLTYPE *OnDrop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerEntered(This,e)	\
    ( (This)->lpVtbl -> OnPointerEntered(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerPressed(This,e)	\
    ( (This)->lpVtbl -> OnPointerPressed(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerMoved(This,e)	\
    ( (This)->lpVtbl -> OnPointerMoved(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerReleased(This,e)	\
    ( (This)->lpVtbl -> OnPointerReleased(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerExited(This,e)	\
    ( (This)->lpVtbl -> OnPointerExited(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerCaptureLost(This,e)	\
    ( (This)->lpVtbl -> OnPointerCaptureLost(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerCanceled(This,e)	\
    ( (This)->lpVtbl -> OnPointerCanceled(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnPointerWheelChanged(This,e)	\
    ( (This)->lpVtbl -> OnPointerWheelChanged(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnTapped(This,e)	\
    ( (This)->lpVtbl -> OnTapped(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnDoubleTapped(This,e)	\
    ( (This)->lpVtbl -> OnDoubleTapped(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnHolding(This,e)	\
    ( (This)->lpVtbl -> OnHolding(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnRightTapped(This,e)	\
    ( (This)->lpVtbl -> OnRightTapped(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnManipulationStarting(This,e)	\
    ( (This)->lpVtbl -> OnManipulationStarting(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnManipulationInertiaStarting(This,e)	\
    ( (This)->lpVtbl -> OnManipulationInertiaStarting(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnManipulationStarted(This,e)	\
    ( (This)->lpVtbl -> OnManipulationStarted(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnManipulationDelta(This,e)	\
    ( (This)->lpVtbl -> OnManipulationDelta(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnManipulationCompleted(This,e)	\
    ( (This)->lpVtbl -> OnManipulationCompleted(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnKeyUp(This,e)	\
    ( (This)->lpVtbl -> OnKeyUp(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnKeyDown(This,e)	\
    ( (This)->lpVtbl -> OnKeyDown(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnGotFocus(This,e)	\
    ( (This)->lpVtbl -> OnGotFocus(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnLostFocus(This,e)	\
    ( (This)->lpVtbl -> OnLostFocus(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnDragEnter(This,e)	\
    ( (This)->lpVtbl -> OnDragEnter(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnDragLeave(This,e)	\
    ( (This)->lpVtbl -> OnDragLeave(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnDragOver(This,e)	\
    ( (This)->lpVtbl -> OnDragOver(This,e) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_OnDrop(This,e)	\
    ( (This)->lpVtbl -> OnDrop(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0514 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlProtected[] = L"Windows.UI.Xaml.Controls.IControlProtected";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0514 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0514_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0514_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IControlProtected */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("1791587A-2A7C-4981-A2D8-AB99FFFC65B9")
                        IControlProtected : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultStyleKey( 
                                /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DefaultStyleKey( 
                                /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetTemplateChild( 
                                /* [in] */ __RPC__in HSTRING childName,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IControlProtected = __uuidof(IControlProtected);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultStyleKey )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultStyleKey )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetTemplateChild )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected * This,
            /* [in] */ __RPC__in HSTRING childName,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtectedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_get_DefaultStyleKey(This,value)	\
    ( (This)->lpVtbl -> get_DefaultStyleKey(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_put_DefaultStyleKey(This,value)	\
    ( (This)->lpVtbl -> put_DefaultStyleKey(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_GetTemplateChild(This,childName,returnValue)	\
    ( (This)->lpVtbl -> GetTemplateChild(This,childName,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlProtected_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0515 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlStatics[] = L"Windows.UI.Xaml.Controls.IControlStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0515 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0515_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0515_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IControlStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("473B305B-877D-4C35-8FCA-46A05F96607A")
                        IControlStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontSizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontFamilyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontWeightProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStyleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FontStretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterSpacingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForegroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTabStopProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsEnabledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TabIndexProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TabNavigationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TemplateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PaddingProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalContentAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalContentAlignmentProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BackgroundProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderThicknessProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BorderBrushProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultStyleKeyProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FocusStateProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IControlStatics = __uuidof(IControlStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontSizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontFamilyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontWeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FontStretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharacterSpacingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForegroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTabStopProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TabIndexProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TabNavigationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PaddingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalContentAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalContentAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackgroundProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderThicknessProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderBrushProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultStyleKeyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FocusStateProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_FontSizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontSizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_FontFamilyProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontFamilyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_FontWeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontWeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_FontStyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStyleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_FontStretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_FontStretchProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_CharacterSpacingProperty(This,value)	\
    ( (This)->lpVtbl -> get_CharacterSpacingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_ForegroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_ForegroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_IsTabStopProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTabStopProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_IsEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_TabIndexProperty(This,value)	\
    ( (This)->lpVtbl -> get_TabIndexProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_TabNavigationProperty(This,value)	\
    ( (This)->lpVtbl -> get_TabNavigationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_TemplateProperty(This,value)	\
    ( (This)->lpVtbl -> get_TemplateProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_PaddingProperty(This,value)	\
    ( (This)->lpVtbl -> get_PaddingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_HorizontalContentAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalContentAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_VerticalContentAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalContentAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_BackgroundProperty(This,value)	\
    ( (This)->lpVtbl -> get_BackgroundProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_BorderThicknessProperty(This,value)	\
    ( (This)->lpVtbl -> get_BorderThicknessProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_BorderBrushProperty(This,value)	\
    ( (This)->lpVtbl -> get_BorderBrushProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_DefaultStyleKeyProperty(This,value)	\
    ( (This)->lpVtbl -> get_DefaultStyleKeyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_get_FocusStateProperty(This,value)	\
    ( (This)->lpVtbl -> get_FocusStateProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0516 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlFactory[] = L"Windows.UI.Xaml.Controls.IControlFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0516 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0516_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0516_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IControlFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("B12B1D5A-6419-4E16-B212-A45336B75778")
                        IControlFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IControl **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IControlFactory = __uuidof(IControlFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0517 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_IControlTemplate[] = L"Windows.UI.Xaml.Controls.IControlTemplate";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0517 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0517_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0517_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Controls::IControlTemplate */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Controls {
                        
                        MIDL_INTERFACE("EFD2418E-41E0-48BB-8B82-91EDA1BA3FE2")
                        IControlTemplate : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetType( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Interop::TypeName *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetType( 
                                /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IControlTemplate = __uuidof(IControlTemplate);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_get_TargetType(This,value)	\
    ( (This)->lpVtbl -> get_TargetType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_put_TargetType(This,value)	\
    ( (This)->lpVtbl -> put_TargetType(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CControls_CIControlTemplate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0518 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_BackClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_BackClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_BackClickEventArgs[] = L"Windows.UI.Xaml.Controls.BackClickEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_DragItemsStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_DragItemsStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DragItemsStartingEventArgs[] = L"Windows.UI.Xaml.Controls.DragItemsStartingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_NotifyEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_NotifyEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_NotifyEventArgs[] = L"Windows.UI.Xaml.Controls.NotifyEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SemanticZoomViewChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SemanticZoomViewChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SemanticZoomViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_TextControlPasteEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_TextControlPasteEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextControlPasteEventArgs[] = L"Windows.UI.Xaml.Controls.TextControlPasteEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ColumnDefinitionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ColumnDefinitionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ColumnDefinitionCollection[] = L"Windows.UI.Xaml.Controls.ColumnDefinitionCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_DataTemplateSelector_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_DataTemplateSelector_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DataTemplateSelector[] = L"Windows.UI.Xaml.Controls.DataTemplateSelector";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_DatePickerValueChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_DatePickerValueChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_RowDefinitionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_RowDefinitionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RowDefinitionCollection[] = L"Windows.UI.Xaml.Controls.RowDefinitionCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_StyleSelector_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_StyleSelector_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_StyleSelector[] = L"Windows.UI.Xaml.Controls.StyleSelector";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_GroupStyle_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_GroupStyle_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GroupStyle[] = L"Windows.UI.Xaml.Controls.GroupStyle";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_GroupStyleSelector_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_GroupStyleSelector_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GroupStyleSelector[] = L"Windows.UI.Xaml.Controls.GroupStyleSelector";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SemanticZoomLocation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SemanticZoomLocation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SemanticZoomLocation[] = L"Windows.UI.Xaml.Controls.SemanticZoomLocation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemCollection[] = L"Windows.UI.Xaml.Controls.ItemCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemContainerGenerator_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemContainerGenerator_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemContainerGenerator[] = L"Windows.UI.Xaml.Controls.ItemContainerGenerator";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_UIElementCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_UIElementCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_UIElementCollection[] = L"Windows.UI.Xaml.Controls.UIElementCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs[] = L"Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewerView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewerView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewerView[] = L"Windows.UI.Xaml.Controls.ScrollViewerView";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ToolTipService_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ToolTipService_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToolTipService[] = L"Windows.UI.Xaml.Controls.ToolTipService";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_HubSectionHeaderClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_HubSectionHeaderClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HubSectionHeaderClickEventArgs[] = L"Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SectionsInViewChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SectionsInViewChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SectionsInViewChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewNavigationFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewNavigationFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNavigationFailedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_HubSectionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_HubSectionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HubSectionCollection[] = L"Windows.UI.Xaml.Controls.HubSectionCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxQueryChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxQueryChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxQueryChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxSuggestionsRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxSuggestionsRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxSuggestionsRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxQuerySubmittedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxQuerySubmittedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxQuerySubmittedEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxResultSuggestionChosenEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBoxResultSuggestionChosenEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBoxResultSuggestionChosenEventArgs[] = L"Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_TimePickerValueChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_TimePickerValueChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePickerValueChangedEventArgs[] = L"Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewLongRunningScriptDetectedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewLongRunningScriptDetectedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewLongRunningScriptDetectedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewUnviewableContentIdentifiedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewUnviewableContentIdentifiedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewUnviewableContentIdentifiedEventArgs[] = L"Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ColumnDefinition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ColumnDefinition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ColumnDefinition[] = L"Windows.UI.Xaml.Controls.ColumnDefinition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_RowDefinition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_RowDefinition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RowDefinition[] = L"Windows.UI.Xaml.Controls.RowDefinition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Flyout_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Flyout_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Flyout[] = L"Windows.UI.Xaml.Controls.Flyout";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyout_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyout_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyout[] = L"Windows.UI.Xaml.Controls.MenuFlyout";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_CleanUpVirtualizedItemEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_CleanUpVirtualizedItemEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CleanUpVirtualizedItemEventArgs[] = L"Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ContextMenuEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ContextMenuEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContextMenuEventArgs[] = L"Windows.UI.Xaml.Controls.ContextMenuEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemClickEventArgs[] = L"Windows.UI.Xaml.Controls.ItemClickEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SelectionChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SelectionChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SelectionChangedEventArgs[] = L"Windows.UI.Xaml.Controls.SelectionChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_TextChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_TextChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextChangedEventArgs[] = L"Windows.UI.Xaml.Controls.TextChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsPanelTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsPanelTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsPanelTemplate[] = L"Windows.UI.Xaml.Controls.ItemsPanelTemplate";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Border_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Border_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Border[] = L"Windows.UI.Xaml.Controls.Border";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_CaptureElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_CaptureElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CaptureElement[] = L"Windows.UI.Xaml.Controls.CaptureElement";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ContentPresenter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ContentPresenter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentPresenter[] = L"Windows.UI.Xaml.Controls.ContentPresenter";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Image_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Image_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Image[] = L"Windows.UI.Xaml.Controls.Image";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Panel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Panel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Panel[] = L"Windows.UI.Xaml.Controls.Panel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Canvas_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Canvas_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Canvas[] = L"Windows.UI.Xaml.Controls.Canvas";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Grid_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Grid_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Grid[] = L"Windows.UI.Xaml.Controls.Grid";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsPresenter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsPresenter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsPresenter[] = L"Windows.UI.Xaml.Controls.ItemsPresenter";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_MediaElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_MediaElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MediaElement[] = L"Windows.UI.Xaml.Controls.MediaElement";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_RichTextBlockOverflow_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_RichTextBlockOverflow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichTextBlockOverflow[] = L"Windows.UI.Xaml.Controls.RichTextBlockOverflow";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_RichTextBlock_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_RichTextBlock_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichTextBlock[] = L"Windows.UI.Xaml.Controls.RichTextBlock";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollContentPresenter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollContentPresenter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollContentPresenter[] = L"Windows.UI.Xaml.Controls.ScrollContentPresenter";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_StackPanel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_StackPanel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_StackPanel[] = L"Windows.UI.Xaml.Controls.StackPanel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_TextBlock_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_TextBlock_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBlock[] = L"Windows.UI.Xaml.Controls.TextBlock";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_VariableSizedWrapGrid_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_VariableSizedWrapGrid_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_VariableSizedWrapGrid[] = L"Windows.UI.Xaml.Controls.VariableSizedWrapGrid";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Viewbox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Viewbox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Viewbox[] = L"Windows.UI.Xaml.Controls.Viewbox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_VirtualizingPanel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_VirtualizingPanel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_VirtualizingPanel[] = L"Windows.UI.Xaml.Controls.VirtualizingPanel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_VirtualizingStackPanel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_VirtualizingStackPanel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_VirtualizingStackPanel[] = L"Windows.UI.Xaml.Controls.VirtualizingStackPanel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_IconElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_IconElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_IconElement[] = L"Windows.UI.Xaml.Controls.IconElement";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_BitmapIcon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_BitmapIcon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_BitmapIcon[] = L"Windows.UI.Xaml.Controls.BitmapIcon";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_FontIcon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_FontIcon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FontIcon[] = L"Windows.UI.Xaml.Controls.FontIcon";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsStackPanel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsStackPanel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsStackPanel[] = L"Windows.UI.Xaml.Controls.ItemsStackPanel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsWrapGrid_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsWrapGrid_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsWrapGrid[] = L"Windows.UI.Xaml.Controls.ItemsWrapGrid";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_PathIcon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_PathIcon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PathIcon[] = L"Windows.UI.Xaml.Controls.PathIcon";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SwapChainBackgroundPanel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SwapChainBackgroundPanel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwapChainBackgroundPanel[] = L"Windows.UI.Xaml.Controls.SwapChainBackgroundPanel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SwapChainPanel_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SwapChainPanel_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SwapChainPanel[] = L"Windows.UI.Xaml.Controls.SwapChainPanel";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SymbolIcon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SymbolIcon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SymbolIcon[] = L"Windows.UI.Xaml.Controls.SymbolIcon";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebView[] = L"Windows.UI.Xaml.Controls.WebView";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WrapGrid_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WrapGrid_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WrapGrid[] = L"Windows.UI.Xaml.Controls.WrapGrid";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_WebViewBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_WebViewBrush[] = L"Windows.UI.Xaml.Controls.WebViewBrush";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Control_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Control_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Control[] = L"Windows.UI.Xaml.Controls.Control";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ContentControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ContentControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ContentControl[] = L"Windows.UI.Xaml.Controls.ContentControl";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ComboBoxItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ComboBoxItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ComboBoxItem[] = L"Windows.UI.Xaml.Controls.ComboBoxItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_DatePicker_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_DatePicker_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_DatePicker[] = L"Windows.UI.Xaml.Controls.DatePicker";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_FlipViewItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_FlipViewItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FlipViewItem[] = L"Windows.UI.Xaml.Controls.FlipViewItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_GridViewItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_GridViewItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GridViewItem[] = L"Windows.UI.Xaml.Controls.GridViewItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_GroupItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_GroupItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GroupItem[] = L"Windows.UI.Xaml.Controls.GroupItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SemanticZoom_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SemanticZoom_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SemanticZoom[] = L"Windows.UI.Xaml.Controls.SemanticZoom";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ItemsControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ItemsControl[] = L"Windows.UI.Xaml.Controls.ItemsControl";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListBoxItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListBoxItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListBoxItem[] = L"Windows.UI.Xaml.Controls.ListBoxItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewItem[] = L"Windows.UI.Xaml.Controls.ListViewItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_PasswordBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_PasswordBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_PasswordBox[] = L"Windows.UI.Xaml.Controls.PasswordBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ProgressRing_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ProgressRing_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ProgressRing[] = L"Windows.UI.Xaml.Controls.ProgressRing";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_RichEditBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_RichEditBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RichEditBox[] = L"Windows.UI.Xaml.Controls.RichEditBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ScrollViewer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ScrollViewer[] = L"Windows.UI.Xaml.Controls.ScrollViewer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SettingsFlyout_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SettingsFlyout_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SettingsFlyout[] = L"Windows.UI.Xaml.Controls.SettingsFlyout";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_TextBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_TextBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TextBox[] = L"Windows.UI.Xaml.Controls.TextBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ToggleSwitch_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ToggleSwitch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleSwitch[] = L"Windows.UI.Xaml.Controls.ToggleSwitch";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ToolTip_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ToolTip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToolTip[] = L"Windows.UI.Xaml.Controls.ToolTip";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_UserControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_UserControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_UserControl[] = L"Windows.UI.Xaml.Controls.UserControl";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Button_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Button_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Button[] = L"Windows.UI.Xaml.Controls.Button";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_HyperlinkButton_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_HyperlinkButton_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HyperlinkButton[] = L"Windows.UI.Xaml.Controls.HyperlinkButton";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ProgressBar_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ProgressBar_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ProgressBar[] = L"Windows.UI.Xaml.Controls.ProgressBar";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Slider_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Slider_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Slider[] = L"Windows.UI.Xaml.Controls.Slider";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ComboBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ComboBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ComboBox[] = L"Windows.UI.Xaml.Controls.ComboBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewBase[] = L"Windows.UI.Xaml.Controls.ListViewBase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_FlipView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_FlipView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FlipView[] = L"Windows.UI.Xaml.Controls.FlipView";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_GridView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_GridView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GridView[] = L"Windows.UI.Xaml.Controls.GridView";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListBox[] = L"Windows.UI.Xaml.Controls.ListBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListView[] = L"Windows.UI.Xaml.Controls.ListView";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_CheckBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_CheckBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CheckBox[] = L"Windows.UI.Xaml.Controls.CheckBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_RadioButton_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_RadioButton_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_RadioButton[] = L"Windows.UI.Xaml.Controls.RadioButton";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBar_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBar_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBar[] = L"Windows.UI.Xaml.Controls.AppBar";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBarButton_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBarButton_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarButton[] = L"Windows.UI.Xaml.Controls.AppBarButton";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBarSeparator_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBarSeparator_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarSeparator[] = L"Windows.UI.Xaml.Controls.AppBarSeparator";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBarToggleButton_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_AppBarToggleButton_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_AppBarToggleButton[] = L"Windows.UI.Xaml.Controls.AppBarToggleButton";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_CommandBar_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_CommandBar_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_CommandBar[] = L"Windows.UI.Xaml.Controls.CommandBar";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_FlyoutPresenter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_FlyoutPresenter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_FlyoutPresenter[] = L"Windows.UI.Xaml.Controls.FlyoutPresenter";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Frame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Frame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Frame[] = L"Windows.UI.Xaml.Controls.Frame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_HubSection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_HubSection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_HubSection[] = L"Windows.UI.Xaml.Controls.HubSection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Hub_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Hub_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Hub[] = L"Windows.UI.Xaml.Controls.Hub";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewBaseHeaderItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewBaseHeaderItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewBaseHeaderItem[] = L"Windows.UI.Xaml.Controls.ListViewBaseHeaderItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_GridViewHeaderItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_GridViewHeaderItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_GridViewHeaderItem[] = L"Windows.UI.Xaml.Controls.GridViewHeaderItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewHeaderItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ListViewHeaderItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ListViewHeaderItem[] = L"Windows.UI.Xaml.Controls.ListViewHeaderItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutItemBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutItemBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutItemBase[] = L"Windows.UI.Xaml.Controls.MenuFlyoutItemBase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.MenuFlyoutItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutPresenter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutPresenter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutPresenter[] = L"Windows.UI.Xaml.Controls.MenuFlyoutPresenter";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutSeparator_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_MenuFlyoutSeparator_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_MenuFlyoutSeparator[] = L"Windows.UI.Xaml.Controls.MenuFlyoutSeparator";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Page_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Page_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Page[] = L"Windows.UI.Xaml.Controls.Page";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBox_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_SearchBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_SearchBox[] = L"Windows.UI.Xaml.Controls.SearchBox";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_TimePicker_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_TimePicker_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_TimePicker[] = L"Windows.UI.Xaml.Controls.TimePicker";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ToggleMenuFlyoutItem_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ToggleMenuFlyoutItem_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ToggleMenuFlyoutItem[] = L"Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_ControlTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_ControlTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_ControlTemplate[] = L"Windows.UI.Xaml.Controls.ControlTemplate";
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0518 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0518_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Econtrols_0000_0518_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


