// wkspbkax.idl : IDL source for wkspbkax
//

// This file will be processed by the MIDL tool to
// produce the type library (wkspbkax.tlb) and marshalling code.

cpp_quote("//+-------------------------------------------------------------------------")
cpp_quote("//")
cpp_quote("//  Microsoft Windows")
cpp_quote("//  Copyright (c) Microsoft Corporation. All rights reserved.")
cpp_quote("//")
cpp_quote("//--------------------------------------------------------------------------")

import "oaidl.idl";
import "ocidl.idl";

cpp_quote("#if (NTDDI_VERSION >= NTDDI_WIN8)")

[
    object,
    uuid(2F93474C-2ED7-4A68-AFD1-D3C9781F341E),
    dual,
    nonextensible,
    pointer_default(unique)
]
interface IWorkspaceBrokerAx : IDispatch{
    [id(1), helpstring("SetupWorkspace")] HRESULT SetupWorkspace();
    [id(2), helpstring("InitializeWorkspaceConfiguration")] HRESULT InitializeWorkspaceConfiguration();
    
    [propget, id(3), helpstring("WorkspacesCount")] HRESULT WorkspacesCount([out, retval] LONG* pVal);
    [propget, id(4), helpstring("WorkspaceName")] HRESULT WorkspaceName([in] LONG itr, [out, retval] BSTR* pVl);
    [propget, id(5), helpstring("WorkspaceId")] HRESULT WorkspaceId([in] LONG itr, [out, retval] BSTR* pVal);
    [propget, id(6), helpstring("WorkspaceFoldersCount")] HRESULT WorkspaceFoldersCount([in] BSTR WkspId,[out, retval] LONG* pVal);
    [propget, id(7), helpstring("WorkspaceFolderName")] HRESULT WorkspaceFolderName([in] BSTR WkspId, [in] LONG itr, [out, retval] BSTR* pVal);
    [propget, id(8), helpstring("WorkspaceFolderContentsCount")] HRESULT WorkspaceFolderContentsCount([in] BSTR WkspId, [in] BSTR WkspFolder,[out, retval] LONG* pVal);
    [propget, id(9), helpstring("WorkspaceFolderImageData")] HRESULT WorkspaceFolderImageData([in] BSTR WkspId, [in] BSTR WkspFolder, [in] LONG itr,[out, retval] BSTR* pVal);
    [propget, id(10), helpstring("WorkspaceFolderItemName")] HRESULT WorkspaceFolderItemName([in] BSTR WkspId, [in] BSTR WkspFolder, [in] LONG itr,[out, retval] BSTR* pVal);
    [propget, id(11), helpstring("WorkspaceFolderItemFileExtension")] HRESULT WorkspaceFolderItemFileExtension([in] BSTR WkspId, [in] BSTR WkspFolder, [in] LONG itr,[out, retval] BSTR* pVal);
    [propget, id(12), helpstring("IsWorkspaceFolderItemRemoteDesktop")] HRESULT IsWorkspaceFolderItemRemoteDesktop([in] BSTR WkspId, [in] BSTR WkspFolder, [in] LONG itr, [out, retval] VARIANT_BOOL* pVal);    

    [id(13),helpstring("LaunchWorkspaceItem")] HRESULT LaunchWorkspaceItem([in] BSTR WkspId, [in] BSTR WkspFolder, [in] BSTR WkspItemName, [in] BSTR ActivationContext);
};
[
    uuid(A47EDEDD-2921-4E5A-9B91-13C953EC7FE3),
    version(1.0),
]
library wkspbkaxLib
{
    importlib("stdole2.tlb");
    [
        uuid(7A3D0ADC-0CC4-473D-B327-D37886308F28)      
    ]
    dispinterface _IWorkspaceBrokerAxEvents
    {
        properties:
        methods:
            [id(1), helpstring("OnWorkspaceSetupCompleted")] void OnWorkspaceSetupCompleted([in] ULONG Result);         
    };
    [
        uuid(CD70A734-B6DB-4588-9813-FF2E37A4661F),
        control
    ]
    coclass WorkspaceBrokerAx
    {
        [default] interface IWorkspaceBrokerAx;
        [default, source] dispinterface _IWorkspaceBrokerAxEvents;
    };
};

cpp_quote("#endif //(NTDDI_VERSION >= NTDDI_WIN8)")
