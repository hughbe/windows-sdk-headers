//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0008
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.Media.Capture.idl";
import "Windows.Media.PlayTo.idl";
import "Windows.Media.Protection.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.Text.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.Xaml.Data.idl";
import "Windows.UI.Xaml.Documents.idl";
import "Windows.UI.Xaml.Input.idl";
import "Windows.UI.Xaml.Interop.idl";
import "Windows.UI.Xaml.Media.idl";
import "Windows.UI.Xaml.Media.Animation.idl";
import "Windows.UI.Xaml.Navigation.idl";
import "Windows.Web.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Eapplicationmodel2Edatatransfer_h__)")
cpp_quote("#include <Windows.ApplicationModel.DataTransfer.h>")
cpp_quote("#endif // !defined(__windows2Eapplicationmodel2Edatatransfer_h__)")
cpp_quote("#if !defined(__windows2Emedia2Ecapture_h__)")
cpp_quote("#include <Windows.Media.Capture.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Ecapture_h__)")
cpp_quote("#if !defined(__windows2Emedia2Eplayto_h__)")
cpp_quote("#include <Windows.Media.PlayTo.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Eplayto_h__)")
cpp_quote("#if !defined(__windows2Emedia2Eprotection_h__)")
cpp_quote("#include <Windows.Media.Protection.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Eprotection_h__)")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if !defined(__windows2Eui2Etext_h__)")
cpp_quote("#include <Windows.UI.Text.h>")
cpp_quote("#endif // !defined(__windows2Eui2Etext_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl_h__)")
cpp_quote("#include <Windows.UI.Xaml.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)")
cpp_quote("#include <Windows.UI.Xaml.Controls.Primitives.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Edata_h__)")
cpp_quote("#include <Windows.UI.Xaml.Data.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Edata_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Edocuments_h__)")
cpp_quote("#include <Windows.UI.Xaml.Documents.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Edocuments_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Einput_h__)")
cpp_quote("#include <Windows.UI.Xaml.Input.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Einput_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Einterop_h__)")
cpp_quote("#include <Windows.UI.Xaml.Interop.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Einterop_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Emedia_h__)")
cpp_quote("#include <Windows.UI.Xaml.Media.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Emedia_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)")
cpp_quote("#include <Windows.UI.Xaml.Media.Animation.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Enavigation_h__)")
cpp_quote("#include <Windows.UI.Xaml.Navigation.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Enavigation_h__)")
cpp_quote("#if !defined(__windows2Eweb_h__)")
cpp_quote("#include <Windows.Web.h>")
cpp_quote("#endif // !defined(__windows2Eweb_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            runtimeclass DataPackage;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct TimeSpan TimeSpan;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            runtimeclass MediaCapture;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace PlayTo
        {
            runtimeclass PlayToSource;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Protection
        {
            runtimeclass MediaProtectionManager;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStream;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Text
        {
            typedef enum FontStretch FontStretch;

            typedef enum FontStyle FontStyle;

            typedef struct FontWeight FontWeight;

            interface ITextDocument;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass ComboBoxTemplateSettings;

                    typedef enum GeneratorDirection GeneratorDirection;

                    typedef struct GeneratorPosition GeneratorPosition;

                    runtimeclass GridViewItemTemplateSettings;

                    interface IScrollSnapPointsInfo;

                    runtimeclass ItemsChangedEventArgs;

                    delegate ItemsChangedEventHandler;

                    runtimeclass ListViewItemTemplateSettings;

                    typedef enum PlacementMode PlacementMode;

                    runtimeclass ProgressBarTemplateSettings;

                    runtimeclass ProgressRingTemplateSettings;

                    typedef enum SliderSnapsTo SliderSnapsTo;

                    typedef enum SnapPointsAlignment SnapPointsAlignment;

                    typedef enum TickPlacement TickPlacement;

                    runtimeclass ToggleSwitchTemplateSettings;

                    runtimeclass ToolTipTemplateSettings;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef struct CornerRadius CornerRadius;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                interface INotifyPropertyChanged;

                interface IValueConverter;

                typedef struct LoadMoreItemsResult LoadMoreItemsResult;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DataTemplate;

            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            delegate DependencyPropertyChangedEventHandler;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                runtimeclass BlockCollection;

                runtimeclass InlineCollection;

                runtimeclass TextPointer;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DragEventArgs;

            typedef struct Duration Duration;

            delegate ExceptionRoutedEventHandler;

            typedef enum FocusState FocusState;

            runtimeclass FrameworkElement;

            typedef struct GridLength GridLength;

            typedef enum HorizontalAlignment HorizontalAlignment;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Input
            {
                runtimeclass DoubleTappedRoutedEventArgs;

                runtimeclass HoldingRoutedEventArgs;

                runtimeclass InputScope;

                runtimeclass KeyRoutedEventArgs;

                typedef enum KeyboardNavigationMode KeyboardNavigationMode;

                runtimeclass ManipulationCompletedRoutedEventArgs;

                runtimeclass ManipulationDeltaRoutedEventArgs;

                runtimeclass ManipulationInertiaStartingRoutedEventArgs;

                runtimeclass ManipulationStartedRoutedEventArgs;

                runtimeclass ManipulationStartingRoutedEventArgs;

                runtimeclass PointerRoutedEventArgs;

                runtimeclass RightTappedRoutedEventArgs;

                runtimeclass TappedRoutedEventArgs;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Interop
            {
                typedef struct TypeName TypeName;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum LineStackingStrategy LineStackingStrategy;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    runtimeclass TransitionCollection;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                typedef enum AudioCategory AudioCategory;

                typedef enum AudioDeviceType AudioDeviceType;

                runtimeclass Brush;

                runtimeclass FontFamily;

                runtimeclass ImageSource;

                typedef enum MediaCanPlayResponse MediaCanPlayResponse;

                typedef enum MediaElementState MediaElementState;

                delegate RateChangedRoutedEventHandler;

                typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;

                typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;

                typedef enum Stretch Stretch;

                runtimeclass TimelineMarkerCollection;

                delegate TimelineMarkerRoutedEventHandler;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Navigation
            {
                delegate LoadCompletedEventHandler;

                delegate NavigatedEventHandler;

                runtimeclass NavigatingCancelEventArgs;

                delegate NavigatingCancelEventHandler;

                typedef enum NavigationCacheMode NavigationCacheMode;

                runtimeclass NavigationEventArgs;

                delegate NavigationFailedEventHandler;

                delegate NavigationStoppedEventHandler;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass RoutedEventArgs;

            delegate RoutedEventHandler;

            runtimeclass Style;

            typedef enum TextAlignment TextAlignment;

            typedef enum TextTrimming TextTrimming;

            typedef enum TextWrapping TextWrapping;

            typedef struct Thickness Thickness;

            runtimeclass UIElement;

            typedef enum VerticalAlignment VerticalAlignment;

            typedef enum Visibility Visibility;
        }
    }
}
namespace Windows
{
    namespace Web
    {
        typedef enum WebErrorStatus WebErrorStatus;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum IncrementalLoadingTrigger IncrementalLoadingTrigger;

                typedef enum Orientation Orientation;

                typedef enum StretchDirection StretchDirection;

                typedef enum ScrollBarVisibility ScrollBarVisibility;

                typedef enum ClickMode ClickMode;

                typedef enum SelectionMode SelectionMode;

                typedef enum VirtualizationMode VirtualizationMode;

                typedef enum ListViewSelectionMode ListViewSelectionMode;

                typedef enum ScrollMode ScrollMode;

                typedef enum ZoomMode ZoomMode;

                typedef enum SnapPointsType SnapPointsType;

                typedef enum ScrollIntoViewAlignment ScrollIntoViewAlignment;

                delegate TextChangedEventHandler;

                delegate SelectionChangedEventHandler;

                delegate ContextMenuOpeningEventHandler;

                delegate CleanUpVirtualizedItemEventHandler;

                delegate NotifyEventHandler;

                delegate WebViewNavigationFailedEventHandler;

                delegate ItemClickEventHandler;

                delegate DragItemsStartingEventHandler;

                delegate SemanticZoomViewChangedEventHandler;

                interface INavigate;

                interface IFrame;

                interface IFrameStatics;

                interface IFrameFactory;

                interface IPage;

                interface IPageOverrides;

                interface IPageStatics;

                interface IPageFactory;

                interface IWebView;

                interface IWebViewStatics;

                interface IWebViewNavigationFailedEventArgs;

                interface IWebViewBrush;

                interface IWebViewBrushStatics;

                interface IAppBar;

                interface IAppBarOverrides;

                interface IAppBarStatics;

                interface IAppBarFactory;

                interface IProgressRing;

                interface IProgressRingStatics;

                interface IToggleSwitch;

                interface IToggleSwitchOverrides;

                interface IToggleSwitchStatics;

                interface IButton;

                interface IButtonFactory;

                interface ICheckBox;

                interface ICheckBoxFactory;

                interface IComboBox;

                interface IComboBoxOverrides;

                interface IComboBoxStatics;

                interface IComboBoxFactory;

                interface IGroupItem;

                interface IGroupItemFactory;

                interface IStyleSelector;

                interface IStyleSelectorOverrides;

                interface IStyleSelectorFactory;

                interface IDataTemplateSelector;

                interface IDataTemplateSelectorOverrides;

                interface IDataTemplateSelectorFactory;

                interface IGroupStyleSelector;

                interface IGroupStyleSelectorOverrides;

                interface IGroupStyleSelectorFactory;

                interface IGroupStyle;

                interface IGroupStyleFactory;

                interface IListBoxItem;

                interface IListBoxItemFactory;

                interface IComboBoxItem;

                interface IComboBoxItemFactory;

                interface IFlipView;

                interface IFlipViewFactory;

                interface IFlipViewItem;

                interface IFlipViewItemFactory;

                interface IHyperlinkButton;

                interface IHyperlinkButtonStatics;

                interface IHyperlinkButtonFactory;

                interface IListBox;

                interface IListBoxStatics;

                interface IListBoxFactory;

                interface IRadioButton;

                interface IRadioButtonStatics;

                interface IRadioButtonFactory;

                interface IScrollContentPresenter;

                interface IScrollViewer;

                interface IScrollViewerStatics;

                interface ISlider;

                interface ISliderStatics;

                interface ISliderFactory;

                interface IProgressBar;

                interface IProgressBarStatics;

                interface IProgressBarFactory;

                interface IPanel;

                interface IPanelStatics;

                interface IPanelFactory;

                interface IImage;

                interface IImageStatics;

                interface ICanvas;

                interface ICanvasStatics;

                interface ICanvasFactory;

                interface ITextBlock;

                interface ITextBlockStatics;

                interface ICaptureElement;

                interface ICaptureElementStatics;

                interface IRichTextBlockOverflow;

                interface IRichTextBlockOverflowStatics;

                interface IRichTextBlock;

                interface IRichTextBlockStatics;

                interface IMediaElement;

                interface IMediaElementStatics;

                interface INotifyEventArgs;

                interface IStackPanel;

                interface IStackPanelStatics;

                interface IStackPanelFactory;

                interface ITextBox;

                interface ITextBoxStatics;

                interface ITextBoxFactory;

                interface IRichEditBox;

                interface IRichEditBoxStatics;

                interface IRichEditBoxFactory;

                interface ITextChangedEventArgs;

                interface IPasswordBox;

                interface IPasswordBoxStatics;

                interface IRowDefinition;

                interface IRowDefinitionStatics;

                interface IColumnDefinition;

                interface IColumnDefinitionStatics;

                interface IGrid;

                interface IGridStatics;

                interface IGridFactory;

                interface ISwapChainBackgroundPanel;

                interface ISwapChainBackgroundPanelFactory;

                interface IUserControl;

                interface IUserControlStatics;

                interface IUserControlFactory;

                interface IItemsControl;

                interface IItemsControlOverrides;

                interface IItemsControlStatics;

                interface IItemsControlFactory;

                interface IItemContainerGenerator;

                interface IVirtualizingPanel;

                interface IVirtualizingPanelOverrides;

                interface IVirtualizingPanelProtected;

                interface IVirtualizingPanelFactory;

                interface IVirtualizingStackPanel;

                interface IVirtualizingStackPanelOverrides;

                interface IVirtualizingStackPanelStatics;

                interface IVariableSizedWrapGrid;

                interface IVariableSizedWrapGridStatics;

                interface IViewbox;

                interface IViewboxStatics;

                interface IBorder;

                interface IBorderStatics;

                interface IContentControl;

                interface IContentControlOverrides;

                interface IContentControlStatics;

                interface IContentControlFactory;

                interface IContentPresenter;

                interface IContentPresenterOverrides;

                interface IContentPresenterStatics;

                interface IContentPresenterFactory;

                interface IItemsPanelTemplate;

                interface IItemsPresenter;

                interface IItemsPresenterStatics;

                interface ISelectionChangedEventArgs;

                interface ISelectionChangedEventArgsFactory;

                interface IContextMenuEventArgs;

                interface ICleanUpVirtualizedItemEventArgs;

                interface IListViewBase;

                interface IListViewBaseStatics;

                interface IListViewBaseFactory;

                interface IItemClickEventArgs;

                interface IGridViewItem;

                interface IGridViewItemFactory;

                interface IListViewItem;

                interface IListViewItemFactory;

                interface IListView;

                interface IListViewFactory;

                interface IGridView;

                interface IGridViewFactory;

                interface IWrapGrid;

                interface IWrapGridStatics;

                interface IToolTip;

                interface IToolTipStatics;

                interface IToolTipFactory;

                interface IToolTipService;

                interface IToolTipServiceStatics;

                interface IDragItemsStartingEventArgs;

                interface ISemanticZoom;

                interface ISemanticZoomInformation;

                interface ISemanticZoomStatics;

                interface ISemanticZoomLocation;

                interface ISemanticZoomViewChangedEventArgs;

                interface IScrollViewerViewChangedEventArgs;

                interface IControl;

                interface IControlOverrides;

                interface IControlProtected;

                interface IControlStatics;

                interface IControlFactory;

                interface IControlTemplate;

                runtimeclass NotifyEventArgs;

                runtimeclass WebViewNavigationFailedEventArgs;

                runtimeclass DragItemsStartingEventArgs;

                runtimeclass SemanticZoomViewChangedEventArgs;

                runtimeclass StyleSelector;

                runtimeclass DataTemplateSelector;

                runtimeclass GroupStyle;

                runtimeclass GroupStyleSelector;

                runtimeclass ScrollViewerViewChangedEventArgs;

                runtimeclass UIElementCollection;

                runtimeclass RowDefinitionCollection;

                runtimeclass ColumnDefinitionCollection;

                runtimeclass ItemCollection;

                runtimeclass ItemContainerGenerator;

                runtimeclass ToolTipService;

                runtimeclass SemanticZoomLocation;

                runtimeclass RowDefinition;

                runtimeclass ColumnDefinition;

                runtimeclass TextChangedEventArgs;

                runtimeclass SelectionChangedEventArgs;

                runtimeclass ContextMenuEventArgs;

                runtimeclass CleanUpVirtualizedItemEventArgs;

                runtimeclass ItemClickEventArgs;

                runtimeclass WebView;

                runtimeclass Panel;

                runtimeclass Image;

                runtimeclass Canvas;

                runtimeclass TextBlock;

                runtimeclass CaptureElement;

                runtimeclass RichTextBlockOverflow;

                runtimeclass RichTextBlock;

                runtimeclass MediaElement;

                runtimeclass StackPanel;

                runtimeclass Grid;

                runtimeclass SwapChainBackgroundPanel;

                runtimeclass VirtualizingPanel;

                runtimeclass VariableSizedWrapGrid;

                runtimeclass Viewbox;

                runtimeclass Border;

                runtimeclass ContentPresenter;

                runtimeclass ScrollContentPresenter;

                runtimeclass ItemsPresenter;

                runtimeclass VirtualizingStackPanel;

                runtimeclass WrapGrid;

                runtimeclass ItemsPanelTemplate;

                runtimeclass WebViewBrush;

                runtimeclass Control;

                runtimeclass ProgressRing;

                runtimeclass ToggleSwitch;

                runtimeclass TextBox;

                runtimeclass RichEditBox;

                runtimeclass PasswordBox;

                runtimeclass UserControl;

                runtimeclass Page;

                runtimeclass ItemsControl;

                runtimeclass ContentControl;

                runtimeclass Frame;

                runtimeclass AppBar;

                runtimeclass GroupItem;

                runtimeclass ScrollViewer;

                runtimeclass ToolTip;

                runtimeclass SemanticZoom;

                runtimeclass Button;

                runtimeclass HyperlinkButton;

                runtimeclass CheckBox;

                runtimeclass RadioButton;

                runtimeclass Slider;

                runtimeclass ProgressBar;

                runtimeclass ComboBox;

                runtimeclass FlipView;

                runtimeclass ListBox;

                runtimeclass ListViewBase;

                runtimeclass ListView;

                runtimeclass GridView;

                runtimeclass ListBoxItem;

                runtimeclass ComboBoxItem;

                runtimeclass FlipViewItem;

                runtimeclass GridViewItem;

                runtimeclass ListViewItem;

                runtimeclass ControlTemplate;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ColumnDefinition*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.GroupStyle*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.RowDefinition*>;

                    interface Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                [version(0x06020000)]
                enum IncrementalLoadingTrigger
                {
                    None = 0,
                    Edge = 1
                };

                [version(0x06020000)]
                enum Orientation
                {
                    Vertical   = 0,
                    Horizontal = 1
                };

                [version(0x06020000)]
                enum StretchDirection
                {
                    UpOnly   = 0,
                    DownOnly = 1,
                    Both     = 2
                };

                [version(0x06020000)]
                enum ScrollBarVisibility
                {
                    Disabled = 0,
                    Auto     = 1,
                    Hidden   = 2,
                    Visible  = 3
                };

                [version(0x06020000)]
                enum ClickMode
                {
                    Release = 0,
                    Press   = 1,
                    Hover   = 2
                };

                [version(0x06020000)]
                enum SelectionMode
                {
                    Single   = 0,
                    Multiple = 1,
                    Extended = 2
                };

                [version(0x06020000)]
                enum VirtualizationMode
                {
                    Standard  = 0,
                    Recycling = 1
                };

                [version(0x06020000)]
                enum ListViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2,
                    Extended = 3
                };

                [version(0x06020000)]
                enum ScrollMode
                {
                    Disabled = 0,
                    Enabled  = 1,
                    Auto     = 2
                };

                [version(0x06020000)]
                enum ZoomMode
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [version(0x06020000)]
                enum SnapPointsType
                {
                    None            = 0,
                    Optional        = 1,
                    Mandatory       = 2,
                    OptionalSingle  = 3,
                    MandatorySingle = 4
                };

                [version(0x06020000)]
                enum ScrollIntoViewAlignment
                {
                    Default = 0,
                    Leading = 1
                };

                [uuid(8EB35B97-AD87-40E8-818B-77DB24759566)]
                [version(0x06020000)]
                delegate
                    HRESULT TextChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.TextChangedEventArgs* e);

                [uuid(E1A05352-5AA0-42CA-9CD9-068A14DB6E68)]
                [version(0x06020000)]
                delegate
                    HRESULT SelectionChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SelectionChangedEventArgs* e);

                [uuid(DF945151-745C-4446-B2FC-216D765847A0)]
                [version(0x06020000)]
                delegate
                    HRESULT ContextMenuOpeningEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.ContextMenuEventArgs* e);

                [uuid(CACAD0D6-0F0D-4870-884D-F2DEDF674288)]
                [version(0x06020000)]
                delegate
                    HRESULT CleanUpVirtualizedItemEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs* e);

                [uuid(C2FDD1F8-7105-4A74-A109-DE29DFF56B98)]
                [version(0x06020000)]
                delegate
                    HRESULT NotifyEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.NotifyEventArgs* e);

                [uuid(A31EAFE1-41DC-47F8-AE22-9706C8F143D4)]
                [version(0x06020000)]
                delegate
                    HRESULT WebViewNavigationFailedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs* e);

                [uuid(3DF6D14E-E18A-4A75-9395-627C5F3CD489)]
                [version(0x06020000)]
                delegate
                    HRESULT ItemClickEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.ItemClickEventArgs* e);

                [uuid(3AAEAB4C-14CB-4434-BECC-88A8585C2F89)]
                [version(0x06020000)]
                delegate
                    HRESULT DragItemsStartingEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.DragItemsStartingEventArgs* e);

                [uuid(1FA9161D-5D73-44FB-81AC-D1C9384919D4)]
                [version(0x06020000)]
                delegate
                    HRESULT SemanticZoomViewChangedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs* e);

                [uuid(BF2195A9-F4EA-4336-977C-F8FCF78B0D9E)]
                [version(0x06020000)]
                interface INavigate : IInspectable
                {
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [out] [retval] boolean* returnValue);
                }

                [uuid(68EA500B-3FE9-4735-B6A0-E7601933B089)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                interface IFrame : IInspectable
                {
                    [propget] HRESULT CacheSize([out] [retval] INT32* value);
                    [propput] HRESULT CacheSize([in] INT32 value);
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propget] HRESULT CurrentSourcePageType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propget] HRESULT SourcePageType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propput] HRESULT SourcePageType([in] Windows.UI.Xaml.Interop.TypeName value);
                    [propget] HRESULT BackStackDepth([out] [retval] INT32* value);
                    [eventadd] HRESULT Navigated([in] Windows.UI.Xaml.Navigation.NavigatedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Navigated([in] EventRegistrationToken token);
                    [eventadd] HRESULT Navigating([in] Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Navigating([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationFailed([in] Windows.UI.Xaml.Navigation.NavigationFailedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationStopped([in] Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStopped([in] EventRegistrationToken token);
                    HRESULT GoBack();
                    HRESULT GoForward();
                    HRESULT Navigate([in] Windows.UI.Xaml.Interop.TypeName sourcePageType, [in] IInspectable* parameter, [out] [retval] boolean* returnValue);
                    HRESULT GetNavigationState([out] [retval] HSTRING* returnValue);
                    HRESULT SetNavigationState([in] HSTRING navigationState);
                }

                [uuid(D5ACF0E9-D967-471B-8459-C8AF4341511B)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                [version(0x06020000)]
                interface IFrameStatics : IInspectable
                {
                    [propget] HRESULT CacheSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoBackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoForwardProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CurrentSourcePageTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourcePageTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackStackDepthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(02EE93D4-448E-469E-9799-0A8A1F70F171)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Frame)]
                interface IFrameFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Frame** instance);
                }

                [uuid(C4B27075-E641-453E-824D-012FC7CF95CF)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                interface IPage : IInspectable
                {
                    [propget] HRESULT Frame([out] [retval] Windows.UI.Xaml.Controls.Frame** value);
                    [propget] HRESULT NavigationCacheMode([out] [retval] Windows.UI.Xaml.Navigation.NavigationCacheMode* value);
                    [propput] HRESULT NavigationCacheMode([in] Windows.UI.Xaml.Navigation.NavigationCacheMode value);
                    [propget] HRESULT TopAppBar([out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                    [propput] HRESULT TopAppBar([in] Windows.UI.Xaml.Controls.AppBar* value);
                    [propget] HRESULT BottomAppBar([out] [retval] Windows.UI.Xaml.Controls.AppBar** value);
                    [propput] HRESULT BottomAppBar([in] Windows.UI.Xaml.Controls.AppBar* value);
                }

                [uuid(230B9CB8-3419-4306-AABE-4A8E680D3627)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                [version(0x06020000)]
                interface IPageOverrides : IInspectable
                {
                    HRESULT OnNavigatedFrom([in] Windows.UI.Xaml.Navigation.NavigationEventArgs* e);
                    HRESULT OnNavigatedTo([in] Windows.UI.Xaml.Navigation.NavigationEventArgs* e);
                    HRESULT OnNavigatingFrom([in] Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs* e);
                }

                [uuid(376DDE71-F725-46DD-8D80-EEEAF7DA74E5)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                interface IPageStatics : IInspectable
                {
                    [propget] HRESULT FrameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopAppBarProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BottomAppBarProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(DFA149AC-1849-445E-937C-40A9590CC076)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Page)]
                interface IPageFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Page** instance);
                }

                [uuid(5862CC46-1F7D-479B-92A6-DE7858FE8D54)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                interface IWebView : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT AllowedScriptNotifyUris([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>** value);
                    [propput] HRESULT AllowedScriptNotifyUris([in] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>* value);
                    [propget] HRESULT DataTransferPackage([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [eventadd] HRESULT LoadCompleted([in] Windows.UI.Xaml.Navigation.LoadCompletedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT LoadCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ScriptNotify([in] Windows.UI.Xaml.Controls.NotifyEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ScriptNotify([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationFailed([in] Windows.UI.Xaml.Controls.WebViewNavigationFailedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationFailed([in] EventRegistrationToken token);
                    HRESULT InvokeScript([in] HSTRING scriptName, [in] UINT32 __argumentsSize, [in] [size_is(__argumentsSize)] HSTRING* arguments, [out] [retval] HSTRING* returnValue);
                    HRESULT Navigate([in] Windows.Foundation.Uri* source);
                    HRESULT NavigateToString([in] HSTRING text);
                }

                [uuid(A0B561DE-5FDB-443B-B9F0-5C30F6B7A1F4)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebView)]
                interface IWebViewStatics : IInspectable
                {
                    [propget] HRESULT AnyScriptNotifyUri([out] [retval] Windows.Foundation.Collections.IVector<Windows.Foundation.Uri*>** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AllowedScriptNotifyUrisProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DataTransferPackageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(AF09609A-129C-4170-9E9C-E2CDF025DCA4)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs)]
                interface IWebViewNavigationFailedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT WebErrorStatus([out] [retval] Windows.Web.WebErrorStatus* value);
                }

                [uuid(40E86F75-0CF4-4B72-A4D6-CF5D15780116)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewBrush)]
                [version(0x06020000)]
                interface IWebViewBrush : IInspectable
                {
                    [propget] HRESULT SourceName([out] [retval] HSTRING* value);
                    [propput] HRESULT SourceName([in] HSTRING value);
                    HRESULT Redraw();
                    HRESULT SetSource([in] Windows.UI.Xaml.Controls.WebView* source);
                }

                [uuid(D74DAA24-1D05-463E-B028-6BAA4420E762)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.WebViewBrush)]
                interface IWebViewBrushStatics : IInspectable
                {
                    [propget] HRESULT SourceNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(7B0FC253-86A5-4B43-9872-0B8A6234B74B)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                interface IAppBar : IInspectable
                {
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT IsSticky([out] [retval] boolean* value);
                    [propput] HRESULT IsSticky([in] boolean value);
                    [eventadd] HRESULT Opened([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                }

                [uuid(F003E4E2-7B0F-4F4A-970D-AE8A0EAA9B70)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                [version(0x06020000)]
                interface IAppBarOverrides : IInspectable
                {
                    HRESULT OnClosed([in] IInspectable* e);
                    HRESULT OnOpened([in] IInspectable* e);
                }

                [uuid(79BB7E8D-DCA9-4B5F-A448-37B13238ED76)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                interface IAppBarStatics : IInspectable
                {
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStickyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(614708D1-8E65-43CB-92D7-8EEE17515F8D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.AppBar)]
                interface IAppBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.AppBar** instance);
                }

                [uuid(6DA5E49E-6E9D-425C-BD7C-02173E39763F)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressRing)]
                interface IProgressRing : IInspectable
                {
                    [propget] HRESULT IsActive([out] [retval] boolean* value);
                    [propput] HRESULT IsActive([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings** value);
                }

                [uuid(E8B62507-4E2C-47D5-A54A-C6C48A5E6989)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressRing)]
                [version(0x06020000)]
                interface IProgressRingStatics : IInspectable
                {
                    [propget] HRESULT IsActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(331D8F00-C5F9-46A5-B6C8-EDE539304567)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                [version(0x06020000)]
                interface IToggleSwitch : IInspectable
                {
                    [propget] HRESULT IsOn([out] [retval] boolean* value);
                    [propput] HRESULT IsOn([in] boolean value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT OnContent([out] [retval] IInspectable** value);
                    [propput] HRESULT OnContent([in] IInspectable* value);
                    [propget] HRESULT OnContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT OnContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT OffContent([out] [retval] IInspectable** value);
                    [propput] HRESULT OffContent([in] IInspectable* value);
                    [propget] HRESULT OffContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT OffContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings** value);
                    [eventadd] HRESULT Toggled([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Toggled([in] EventRegistrationToken token);
                }

                [uuid(BFD07F53-F8CA-4E47-949E-9E80429B3D16)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                interface IToggleSwitchOverrides : IInspectable
                {
                    HRESULT OnToggled();
                    HRESULT OnOnContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnOffContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnHeaderChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                }

                [uuid(1D37147F-97DF-4226-92CA-DDF453D7FD5A)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToggleSwitch)]
                interface IToggleSwitchStatics : IInspectable
                {
                    [propget] HRESULT IsOnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OnContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OnContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(280335AE-5570-46C7-8E0B-602BE71229A2)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                interface IButton : IInspectable
                {
                }

                [uuid(80A13C19-843A-451C-8CF5-44C701B0E216)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Button)]
                interface IButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Button** instance);
                }

                [uuid(2294C894-7E2A-4B70-B088-8F5D814875BA)]
                [exclusiveto(Windows.UI.Xaml.Controls.CheckBox)]
                [version(0x06020000)]
                interface ICheckBox : IInspectable
                {
                }

                [uuid(4FA6AABB-3F4B-4301-BE07-1172EA61EEFB)]
                [exclusiveto(Windows.UI.Xaml.Controls.CheckBox)]
                [version(0x06020000)]
                interface ICheckBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.CheckBox** instance);
                }

                [uuid(B9A8D05C-AC97-47F1-A5F4-3F9F4D4B116C)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [version(0x06020000)]
                interface IComboBox : IInspectable
                {
                    [propget] HRESULT IsDropDownOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsDropDownOpen([in] boolean value);
                    [propget] HRESULT IsEditable([out] [retval] boolean* value);
                    [propget] HRESULT IsSelectionBoxHighlighted([out] [retval] boolean* value);
                    [propget] HRESULT MaxDropDownHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxDropDownHeight([in] DOUBLE value);
                    [propget] HRESULT SelectionBoxItem([out] [retval] IInspectable** value);
                    [propget] HRESULT SelectionBoxItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings** value);
                    [eventadd] HRESULT DropDownClosed([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DropDownClosed([in] EventRegistrationToken token);
                    [eventadd] HRESULT DropDownOpened([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DropDownOpened([in] EventRegistrationToken token);
                }

                [uuid(4F016541-BCFE-4A22-8932-C914981C2240)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                interface IComboBoxOverrides : IInspectable
                {
                    HRESULT OnDropDownClosed([in] IInspectable* e);
                    HRESULT OnDropDownOpened([in] IInspectable* e);
                }

                [uuid(3E14C9B1-D15B-4DC9-8110-CF3A117B96E7)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                [version(0x06020000)]
                interface IComboBoxStatics : IInspectable
                {
                    [propget] HRESULT IsDropDownOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxDropDownHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(AC0D0444-A65B-4ABD-86DF-3016049EFEDC)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBox)]
                interface IComboBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ComboBox** instance);
                }

                [uuid(4AE8D5D1-7228-4A16-A61F-88C0E8F45C76)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupItem)]
                interface IGroupItem : IInspectable
                {
                }

                [uuid(D9A1D53E-B1E0-4319-9808-7A9E887E13B0)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupItem)]
                [version(0x06020000)]
                interface IGroupItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GroupItem** instance);
                }

                [uuid(D1113F67-D8C1-4AE4-98F0-D8504502F08B)]
                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [version(0x06020000)]
                interface IStyleSelector : IInspectable
                {
                    HRESULT SelectStyle([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Style** returnValue);
                }

                [uuid(08ADD66D-0E2E-43A0-AECA-8FAA94B9D017)]
                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [version(0x06020000)]
                interface IStyleSelectorOverrides : IInspectable
                {
                    HRESULT SelectStyleCore([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Style** returnValue);
                }

                [uuid(9E942AE7-3761-447F-8F97-29E39D5EB310)]
                [exclusiveto(Windows.UI.Xaml.Controls.StyleSelector)]
                [version(0x06020000)]
                interface IStyleSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.StyleSelector** instance);
                }

                [uuid(A907D496-46A0-4CD7-8DBE-F9A581DF60B1)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [version(0x06020000)]
                interface IDataTemplateSelector : IInspectable
                {
                    HRESULT SelectTemplate([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.DataTemplate** returnValue);
                }

                [uuid(2D162925-5966-4BFA-8638-4D345689F6CF)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                interface IDataTemplateSelectorOverrides : IInspectable
                {
                    HRESULT SelectTemplateCore([in] IInspectable* item, [in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.DataTemplate** returnValue);
                }

                [uuid(511BAAD0-210A-457D-9521-433D2B11B7D2)]
                [exclusiveto(Windows.UI.Xaml.Controls.DataTemplateSelector)]
                [version(0x06020000)]
                interface IDataTemplateSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** instance);
                }

                [uuid(6DDA119E-9A74-478F-A339-5BB52DE6C51E)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                interface IGroupStyleSelector : IInspectable
                {
                    HRESULT SelectGroupStyle([in] IInspectable* group, [in] UINT32 level, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** returnValue);
                }

                [uuid(F691CAB2-77AD-4D3D-A51C-8EF9C3836456)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                interface IGroupStyleSelectorOverrides : IInspectable
                {
                    HRESULT SelectGroupStyleCore([in] IInspectable* group, [in] UINT32 level, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** returnValue);
                }

                [uuid(BF570D33-B2F6-481F-A450-C80C291FB22D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyleSelector)]
                interface IGroupStyleSelectorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GroupStyleSelector** instance);
                }

                [uuid(71CA300B-B89E-4184-B0DF-A9E95447DE8D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                interface IGroupStyle : IInspectable
                {
                    [propget] HRESULT Panel([out] [retval] Windows.UI.Xaml.Controls.ItemsPanelTemplate** value);
                    [propput] HRESULT Panel([in] Windows.UI.Xaml.Controls.ItemsPanelTemplate* value);
                    [propget] HRESULT ContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT HeaderTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT HidesIfEmpty([out] [retval] boolean* value);
                    [propput] HRESULT HidesIfEmpty([in] boolean value);
                }

                [uuid(56FF664F-E2D7-4F49-803D-C727CDF9372D)]
                [exclusiveto(Windows.UI.Xaml.Controls.GroupStyle)]
                [version(0x06020000)]
                interface IGroupStyleFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GroupStyle** instance);
                }

                [uuid(43C13323-6EDF-4E4B-B6B2-3A93EEC41D95)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBoxItem)]
                interface IListBoxItem : IInspectable
                {
                }

                [uuid(4398B8D4-A3DE-402C-B23D-190384B27CA8)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBoxItem)]
                interface IListBoxItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListBoxItem** instance);
                }

                [uuid(993FD6D2-2AAE-4F3B-B44D-5648F4D06114)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxItem)]
                interface IComboBoxItem : IInspectable
                {
                }

                [uuid(8FFFE867-D94C-4E87-8FC4-6EBCD63C5AC2)]
                [exclusiveto(Windows.UI.Xaml.Controls.ComboBoxItem)]
                [version(0x06020000)]
                interface IComboBoxItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ComboBoxItem** instance);
                }

                [uuid(A1582F68-3D7D-4D3B-B71D-488EED1E3493)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                interface IFlipView : IInspectable
                {
                }

                [uuid(F1DEA9BE-9AE8-4D4B-AB43-16D31E05F4F3)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipView)]
                interface IFlipViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.FlipView** instance);
                }

                [uuid(56196565-CE2B-4BDA-A36B-82A2B8B0D4C0)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipViewItem)]
                interface IFlipViewItem : IInspectable
                {
                }

                [uuid(F21D91FE-22A0-4412-A853-9D6A6E8F2AAF)]
                [exclusiveto(Windows.UI.Xaml.Controls.FlipViewItem)]
                [version(0x06020000)]
                interface IFlipViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.FlipViewItem** instance);
                }

                [uuid(CCEBACA3-3B5C-4F4C-9BFD-86887BC79772)]
                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [version(0x06020000)]
                interface IHyperlinkButton : IInspectable
                {
                    [propget] HRESULT NavigateUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT NavigateUri([in] Windows.Foundation.Uri* value);
                }

                [uuid(FBAEB5C7-CDB7-4263-B7D6-3C0D2904ED98)]
                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [version(0x06020000)]
                interface IHyperlinkButtonStatics : IInspectable
                {
                    [propget] HRESULT NavigateUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(43521BAD-4E97-4DA9-A64D-935DFD8CEDF2)]
                [exclusiveto(Windows.UI.Xaml.Controls.HyperlinkButton)]
                [version(0x06020000)]
                interface IHyperlinkButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.HyperlinkButton** instance);
                }

                [uuid(E9F3B9FF-8E91-4ECF-A707-C927F694F881)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [version(0x06020000)]
                interface IListBox : IInspectable
                {
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.SelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.SelectionMode value);
                    HRESULT ScrollIntoView([in] IInspectable* item);
                    HRESULT SelectAll();
                }

                [uuid(6D3F7F73-706A-4E53-A9AA-C9A53C9CDD70)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                [version(0x06020000)]
                interface IListBoxStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(60CDFDA2-2F44-444B-9C94-B8C9FDA46F59)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListBox)]
                interface IListBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListBox** instance);
                }

                [uuid(325C44E0-9A03-4BF3-ABD6-6FBB46C9A486)]
                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [version(0x06020000)]
                interface IRadioButton : IInspectable
                {
                    [propget] HRESULT GroupName([out] [retval] HSTRING* value);
                    [propput] HRESULT GroupName([in] HSTRING value);
                }

                [uuid(6B149293-F50F-4BD8-B0AC-5C162F33A208)]
                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [version(0x06020000)]
                interface IRadioButtonStatics : IInspectable
                {
                    [propget] HRESULT GroupNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(F1D04933-34E1-4A5C-B2AE-CA3B1C0B20DE)]
                [exclusiveto(Windows.UI.Xaml.Controls.RadioButton)]
                [version(0x06020000)]
                interface IRadioButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.RadioButton** instance);
                }

                [uuid(5712EE2B-0EEB-46D3-AA31-5F6801B8DE20)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollContentPresenter)]
                interface IScrollContentPresenter : IInspectable
                {
                    [propget] HRESULT CanVerticallyScroll([out] [retval] boolean* value);
                    [propput] HRESULT CanVerticallyScroll([in] boolean value);
                    [propget] HRESULT CanHorizontallyScroll([out] [retval] boolean* value);
                    [propput] HRESULT CanHorizontallyScroll([in] boolean value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollOwner([out] [retval] IInspectable** value);
                    [propput] HRESULT ScrollOwner([in] IInspectable* value);
                    HRESULT LineUp();
                    HRESULT LineDown();
                    HRESULT LineLeft();
                    HRESULT LineRight();
                    HRESULT PageUp();
                    HRESULT PageDown();
                    HRESULT PageLeft();
                    HRESULT PageRight();
                    HRESULT MouseWheelUp();
                    HRESULT MouseWheelDown();
                    HRESULT MouseWheelLeft();
                    HRESULT MouseWheelRight();
                    HRESULT SetHorizontalOffset([in] DOUBLE offset);
                    HRESULT SetVerticalOffset([in] DOUBLE offset);
                    HRESULT MakeVisible([in] Windows.UI.Xaml.UIElement* visual, [in] Windows.Foundation.Rect rectangle, [out] [retval] Windows.Foundation.Rect* returnValue);
                }

                [uuid(64E9BE00-4DC1-493D-ABE7-CBD3C577490D)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [version(0x06020000)]
                interface IScrollViewer : IInspectable
                {
                    [propget] HRESULT HorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* value);
                    [propput] HRESULT HorizontalScrollBarVisibility([in] Windows.UI.Xaml.Controls.ScrollBarVisibility value);
                    [propget] HRESULT VerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* value);
                    [propput] HRESULT VerticalScrollBarVisibility([in] Windows.UI.Xaml.Controls.ScrollBarVisibility value);
                    [propget] HRESULT IsHorizontalRailEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalRailEnabled([in] boolean value);
                    [propget] HRESULT IsVerticalRailEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalRailEnabled([in] boolean value);
                    [propget] HRESULT IsHorizontalScrollChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalScrollChainingEnabled([in] boolean value);
                    [propget] HRESULT IsVerticalScrollChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalScrollChainingEnabled([in] boolean value);
                    [propget] HRESULT IsZoomChainingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomChainingEnabled([in] boolean value);
                    [propget] HRESULT IsScrollInertiaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsScrollInertiaEnabled([in] boolean value);
                    [propget] HRESULT IsZoomInertiaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomInertiaEnabled([in] boolean value);
                    [propget] HRESULT HorizontalScrollMode([out] [retval] Windows.UI.Xaml.Controls.ScrollMode* value);
                    [propput] HRESULT HorizontalScrollMode([in] Windows.UI.Xaml.Controls.ScrollMode value);
                    [propget] HRESULT VerticalScrollMode([out] [retval] Windows.UI.Xaml.Controls.ScrollMode* value);
                    [propput] HRESULT VerticalScrollMode([in] Windows.UI.Xaml.Controls.ScrollMode value);
                    [propget] HRESULT ZoomMode([out] [retval] Windows.UI.Xaml.Controls.ZoomMode* value);
                    [propput] HRESULT ZoomMode([in] Windows.UI.Xaml.Controls.ZoomMode value);
                    [propget] HRESULT HorizontalSnapPointsAlignment([out] [retval] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment* value);
                    [propput] HRESULT HorizontalSnapPointsAlignment([in] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment value);
                    [propget] HRESULT VerticalSnapPointsAlignment([out] [retval] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment* value);
                    [propput] HRESULT VerticalSnapPointsAlignment([in] Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment value);
                    [propget] HRESULT HorizontalSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT HorizontalSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT VerticalSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT VerticalSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT ZoomSnapPointsType([out] [retval] Windows.UI.Xaml.Controls.SnapPointsType* value);
                    [propput] HRESULT ZoomSnapPointsType([in] Windows.UI.Xaml.Controls.SnapPointsType value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT MinZoomFactor([out] [retval] FLOAT* value);
                    [propput] HRESULT MinZoomFactor([in] FLOAT value);
                    [propget] HRESULT MaxZoomFactor([out] [retval] FLOAT* value);
                    [propput] HRESULT MaxZoomFactor([in] FLOAT value);
                    [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                    [propget] HRESULT ZoomSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<FLOAT>** value);
                    [eventadd] HRESULT ViewChanged([in] Windows.Foundation.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                    HRESULT ScrollToHorizontalOffset([in] DOUBLE offset);
                    HRESULT ScrollToVerticalOffset([in] DOUBLE offset);
                    HRESULT ZoomToFactor([in] FLOAT factor);
                    HRESULT InvalidateScrollInfo();
                    [propget] HRESULT IsDeferredScrollingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsDeferredScrollingEnabled([in] boolean value);
                    [propget] HRESULT BringIntoViewOnFocusChange([out] [retval] boolean* value);
                    [propput] HRESULT BringIntoViewOnFocusChange([in] boolean value);
                }

                [uuid(33D1299D-8D6E-4290-BF22-905CCCD04D31)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewer)]
                [version(0x06020000)]
                interface IScrollViewerStatics : IInspectable
                {
                    [propget] HRESULT HorizontalSnapPointsAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSnapPointsAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomSnapPointsTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewportWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollableWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExtentWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewportHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollableHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExtentHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomSnapPointsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHorizontalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* horizontalScrollBarVisibility);
                    HRESULT SetHorizontalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility);
                    [propget] HRESULT VerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVerticalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollBarVisibility* verticalScrollBarVisibility);
                    HRESULT SetVerticalScrollBarVisibility([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollBarVisibility verticalScrollBarVisibility);
                    [propget] HRESULT IsHorizontalRailEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsHorizontalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isHorizontalRailEnabled);
                    HRESULT SetIsHorizontalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isHorizontalRailEnabled);
                    [propget] HRESULT IsVerticalRailEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVerticalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isVerticalRailEnabled);
                    HRESULT SetIsVerticalRailEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isVerticalRailEnabled);
                    [propget] HRESULT IsHorizontalScrollChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsHorizontalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isHorizontalScrollChainingEnabled);
                    HRESULT SetIsHorizontalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isHorizontalScrollChainingEnabled);
                    [propget] HRESULT IsVerticalScrollChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVerticalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isVerticalScrollChainingEnabled);
                    HRESULT SetIsVerticalScrollChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isVerticalScrollChainingEnabled);
                    [propget] HRESULT IsZoomChainingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsZoomChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isZoomChainingEnabled);
                    HRESULT SetIsZoomChainingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isZoomChainingEnabled);
                    [propget] HRESULT IsScrollInertiaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsScrollInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isScrollInertiaEnabled);
                    HRESULT SetIsScrollInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isScrollInertiaEnabled);
                    [propget] HRESULT IsZoomInertiaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsZoomInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isZoomInertiaEnabled);
                    HRESULT SetIsZoomInertiaEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isZoomInertiaEnabled);
                    [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHorizontalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollMode* horizontalScrollMode);
                    HRESULT SetHorizontalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode);
                    [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVerticalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ScrollMode* verticalScrollMode);
                    HRESULT SetVerticalScrollMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ScrollMode verticalScrollMode);
                    [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetZoomMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ZoomMode* zoomMode);
                    HRESULT SetZoomMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.ZoomMode zoomMode);
                    [propget] HRESULT IsDeferredScrollingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsDeferredScrollingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* isDeferredScrollingEnabled);
                    HRESULT SetIsDeferredScrollingEnabled([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean isDeferredScrollingEnabled);
                    [propget] HRESULT BringIntoViewOnFocusChangeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetBringIntoViewOnFocusChange([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* bringIntoViewOnFocusChange);
                    HRESULT SetBringIntoViewOnFocusChange([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean bringIntoViewOnFocusChange);
                }

                [uuid(89572027-4C48-4700-8076-497BA73D9C18)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                interface ISlider : IInspectable
                {
                    [propget] HRESULT IntermediateValue([out] [retval] DOUBLE* value);
                    [propput] HRESULT IntermediateValue([in] DOUBLE value);
                    [propget] HRESULT StepFrequency([out] [retval] DOUBLE* value);
                    [propput] HRESULT StepFrequency([in] DOUBLE value);
                    [propget] HRESULT SnapsTo([out] [retval] Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo* value);
                    [propput] HRESULT SnapsTo([in] Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo value);
                    [propget] HRESULT TickFrequency([out] [retval] DOUBLE* value);
                    [propput] HRESULT TickFrequency([in] DOUBLE value);
                    [propget] HRESULT TickPlacement([out] [retval] Windows.UI.Xaml.Controls.Primitives.TickPlacement* value);
                    [propput] HRESULT TickPlacement([in] Windows.UI.Xaml.Controls.Primitives.TickPlacement value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT IsDirectionReversed([out] [retval] boolean* value);
                    [propput] HRESULT IsDirectionReversed([in] boolean value);
                    [propget] HRESULT IsThumbToolTipEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsThumbToolTipEnabled([in] boolean value);
                    [propget] HRESULT ThumbToolTipValueConverter([out] [retval] Windows.UI.Xaml.Data.IValueConverter** value);
                    [propput] HRESULT ThumbToolTipValueConverter([in] Windows.UI.Xaml.Data.IValueConverter* value);
                }

                [uuid(8A4363D7-7FDF-4D30-98FE-CE78C05B31CF)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [version(0x06020000)]
                interface ISliderStatics : IInspectable
                {
                    [propget] HRESULT IntermediateValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StepFrequencyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SnapsToProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TickFrequencyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TickPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsDirectionReversedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsThumbToolTipEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ThumbToolTipValueConverterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(03A67B37-C7BF-437C-848F-8CB5B753EAB4)]
                [exclusiveto(Windows.UI.Xaml.Controls.Slider)]
                [version(0x06020000)]
                interface ISliderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Slider** instance);
                }

                [uuid(AE752C89-0067-4963-BF4C-29DB0C4A507E)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                interface IProgressBar : IInspectable
                {
                    [propget] HRESULT IsIndeterminate([out] [retval] boolean* value);
                    [propput] HRESULT IsIndeterminate([in] boolean value);
                    [propget] HRESULT ShowError([out] [retval] boolean* value);
                    [propput] HRESULT ShowError([in] boolean value);
                    [propget] HRESULT ShowPaused([out] [retval] boolean* value);
                    [propput] HRESULT ShowPaused([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings** value);
                }

                [uuid(7A129FDA-5837-4E26-B3B4-E1C092CEBBEC)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                interface IProgressBarStatics : IInspectable
                {
                    [propget] HRESULT IsIndeterminateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowErrorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowPausedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(DA9A8C11-1591-400B-A993-0F1C5CC12F3B)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ProgressBar)]
                interface IProgressBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ProgressBar** instance);
                }

                [uuid(A50A4BBD-8361-469C-90DA-E9A40C7474DF)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                interface IPanel : IInspectable
                {
                    [propget] HRESULT Children([out] [retval] Windows.UI.Xaml.Controls.UIElementCollection** value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsItemsHost([out] [retval] boolean* value);
                    [propget] HRESULT ChildrenTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ChildrenTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [uuid(F23D6B5D-8330-47A6-A046-25F509B25232)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                interface IPanelStatics : IInspectable
                {
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsItemsHostProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildrenTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(EEE68111-C7CC-433F-95CD-D630C34302DD)]
                [exclusiveto(Windows.UI.Xaml.Controls.Panel)]
                [version(0x06020000)]
                interface IPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Panel** instance);
                }

                [uuid(495B7402-9AF3-4E50-AA90-03388F3086D2)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                interface IImage : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT NineGrid([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT NineGrid([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT PlayToSource([out] [retval] Windows.Media.PlayTo.PlayToSource** value);
                    [eventadd] HRESULT ImageFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT ImageOpened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageOpened([in] EventRegistrationToken token);
                }

                [uuid(89903772-C336-43D1-9D51-C3BBD5D5D691)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Image)]
                interface IImageStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NineGridProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlayToSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(79190E19-CD38-4823-AEAE-64A77132F519)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                interface ICanvas : IInspectable
                {
                }

                [uuid(40CE5C46-2962-446F-AAFB-4CDC486939C9)]
                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                [version(0x06020000)]
                interface ICanvasStatics : IInspectable
                {
                    [propget] HRESULT LeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLeft([in] Windows.UI.Xaml.UIElement* element, [out] [retval] DOUBLE* length);
                    HRESULT SetLeft([in] Windows.UI.Xaml.UIElement* element, [in] DOUBLE length);
                    [propget] HRESULT TopProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetTop([in] Windows.UI.Xaml.UIElement* element, [out] [retval] DOUBLE* length);
                    HRESULT SetTop([in] Windows.UI.Xaml.UIElement* element, [in] DOUBLE length);
                    [propget] HRESULT ZIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetZIndex([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* value);
                    HRESULT SetZIndex([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                }

                [uuid(1B328BD1-B400-4A8E-943B-5AD2C45BE0DF)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Canvas)]
                interface ICanvasFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Canvas** instance);
                }

                [uuid(AE2D9271-3B4A-45FC-8468-F7949548F4D5)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                interface ITextBlock : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT TextTrimming([out] [retval] Windows.UI.Xaml.TextTrimming* value);
                    [propput] HRESULT TextTrimming([in] Windows.UI.Xaml.TextTrimming value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT Inlines([out] [retval] Windows.UI.Xaml.Documents.InlineCollection** value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT IsTextSelectionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSelectionEnabled([in] boolean value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                    HRESULT Select([in] Windows.UI.Xaml.Documents.TextPointer* start, [in] Windows.UI.Xaml.Documents.TextPointer* end);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [uuid(193EC042-A847-4552-B4E8-DB36655B840A)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBlock)]
                interface ITextBlockStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextTrimmingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSelectionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(31A5C0E7-F307-4D4A-B626-E978863F5B74)]
                [exclusiveto(Windows.UI.Xaml.Controls.CaptureElement)]
                [version(0x06020000)]
                interface ICaptureElement : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Media.Capture.MediaCapture** value);
                    [propput] HRESULT Source([in] Windows.Media.Capture.MediaCapture* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                }

                [uuid(1E438DED-7DA6-409E-806E-305AE4AD9B3F)]
                [exclusiveto(Windows.UI.Xaml.Controls.CaptureElement)]
                [version(0x06020000)]
                interface ICaptureElementStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(4F93749B-DAC3-4A42-9CBB-99F0DE37C071)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [version(0x06020000)]
                interface IRichTextBlockOverflow : IInspectable
                {
                    [propget] HRESULT OverflowContentTarget([out] [retval] Windows.UI.Xaml.Controls.RichTextBlockOverflow** value);
                    [propput] HRESULT OverflowContentTarget([in] Windows.UI.Xaml.Controls.RichTextBlockOverflow* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT ContentSource([out] [retval] Windows.UI.Xaml.Controls.RichTextBlock** value);
                    [propget] HRESULT HasOverflowContent([out] [retval] boolean* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    HRESULT GetPositionFromPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** returnValue);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [uuid(041AC2F7-4F2B-43C3-A122-3FEA9CA9DC87)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlockOverflow)]
                [version(0x06020000)]
                interface IRichTextBlockOverflowStatics : IInspectable
                {
                    [propget] HRESULT OverflowContentTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasOverflowContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(E5FFF9E2-B968-49E7-97D4-8CCA2AC3AE7C)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [version(0x06020000)]
                interface IRichTextBlock : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT TextTrimming([out] [retval] Windows.UI.Xaml.TextTrimming* value);
                    [propput] HRESULT TextTrimming([in] Windows.UI.Xaml.TextTrimming value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT Blocks([out] [retval] Windows.UI.Xaml.Documents.BlockCollection** value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT OverflowContentTarget([out] [retval] Windows.UI.Xaml.Controls.RichTextBlockOverflow** value);
                    [propput] HRESULT OverflowContentTarget([in] Windows.UI.Xaml.Controls.RichTextBlockOverflow* value);
                    [propget] HRESULT IsTextSelectionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextSelectionEnabled([in] boolean value);
                    [propget] HRESULT HasOverflowContent([out] [retval] boolean* value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT SelectionEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT BaselineOffset([out] [retval] DOUBLE* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                    HRESULT Select([in] Windows.UI.Xaml.Documents.TextPointer* start, [in] Windows.UI.Xaml.Documents.TextPointer* end);
                    HRESULT GetPositionFromPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** returnValue);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                    [propget] HRESULT TextIndent([out] [retval] DOUBLE* value);
                    [propput] HRESULT TextIndent([in] DOUBLE value);
                }

                [uuid(492D883C-ADEA-433C-BE1C-208A164262BE)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichTextBlock)]
                [version(0x06020000)]
                interface IRichTextBlockStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextTrimmingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowContentTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextSelectionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasOverflowContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextIndentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(A38ED2CF-13DE-4299-ADE2-AE18F74ED353)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [version(0x06020000)]
                interface IMediaElement : IInspectable
                {
                    [propget] HRESULT PosterSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PosterSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT IsMuted([out] [retval] boolean* value);
                    [propput] HRESULT IsMuted([in] boolean value);
                    [propget] HRESULT IsAudioOnly([out] [retval] boolean* value);
                    [propget] HRESULT AutoPlay([out] [retval] boolean* value);
                    [propput] HRESULT AutoPlay([in] boolean value);
                    [propget] HRESULT Volume([out] [retval] DOUBLE* value);
                    [propput] HRESULT Volume([in] DOUBLE value);
                    [propget] HRESULT Balance([out] [retval] DOUBLE* value);
                    [propput] HRESULT Balance([in] DOUBLE value);
                    [propget] HRESULT NaturalVideoHeight([out] [retval] INT32* value);
                    [propget] HRESULT NaturalVideoWidth([out] [retval] INT32* value);
                    [propget] HRESULT NaturalDuration([out] [retval] Windows.UI.Xaml.Duration* value);
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Position([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT DownloadProgress([out] [retval] DOUBLE* value);
                    [propget] HRESULT BufferingProgress([out] [retval] DOUBLE* value);
                    [propget] HRESULT DownloadProgressOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT CurrentState([out] [retval] Windows.UI.Xaml.Media.MediaElementState* value);
                    [propget] HRESULT Markers([out] [retval] Windows.UI.Xaml.Media.TimelineMarkerCollection** value);
                    [propget] HRESULT CanSeek([out] [retval] boolean* value);
                    [propget] HRESULT CanPause([out] [retval] boolean* value);
                    [propget] HRESULT AudioStreamCount([out] [retval] INT32* value);
                    [propget] HRESULT AudioStreamIndex([out] [retval] Windows.Foundation.IReference<INT32>** value);
                    [propput] HRESULT AudioStreamIndex([in] Windows.Foundation.IReference<INT32>* value);
                    [propget] HRESULT PlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaybackRate([in] DOUBLE value);
                    [propget] HRESULT IsLooping([out] [retval] boolean* value);
                    [propput] HRESULT IsLooping([in] boolean value);
                    [propget] HRESULT PlayToSource([out] [retval] Windows.Media.PlayTo.PlayToSource** value);
                    [propget] HRESULT DefaultPlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT DefaultPlaybackRate([in] DOUBLE value);
                    [propget] HRESULT AspectRatioWidth([out] [retval] INT32* value);
                    [propget] HRESULT AspectRatioHeight([out] [retval] INT32* value);
                    [propget] HRESULT RealTimePlayback([out] [retval] boolean* value);
                    [propput] HRESULT RealTimePlayback([in] boolean value);
                    [propget] HRESULT AudioCategory([out] [retval] Windows.UI.Xaml.Media.AudioCategory* value);
                    [propput] HRESULT AudioCategory([in] Windows.UI.Xaml.Media.AudioCategory value);
                    [propget] HRESULT AudioDeviceType([out] [retval] Windows.UI.Xaml.Media.AudioDeviceType* value);
                    [propput] HRESULT AudioDeviceType([in] Windows.UI.Xaml.Media.AudioDeviceType value);
                    [propget] HRESULT ProtectionManager([out] [retval] Windows.Media.Protection.MediaProtectionManager** value);
                    [propput] HRESULT ProtectionManager([in] Windows.Media.Protection.MediaProtectionManager* value);
                    [propget] HRESULT Stereo3DVideoPackingMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode* value);
                    [propput] HRESULT Stereo3DVideoPackingMode([in] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode value);
                    [propget] HRESULT Stereo3DVideoRenderMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoRenderMode* value);
                    [propput] HRESULT Stereo3DVideoRenderMode([in] Windows.UI.Xaml.Media.Stereo3DVideoRenderMode value);
                    [propget] HRESULT IsStereo3DVideo([out] [retval] boolean* value);
                    [eventadd] HRESULT MediaOpened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaOpened([in] EventRegistrationToken token);
                    [eventadd] HRESULT MediaEnded([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaEnded([in] EventRegistrationToken token);
                    [eventadd] HRESULT MediaFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MediaFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT DownloadProgressChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DownloadProgressChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT BufferingProgressChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BufferingProgressChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT CurrentStateChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CurrentStateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT MarkerReached([in] Windows.UI.Xaml.Media.TimelineMarkerRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MarkerReached([in] EventRegistrationToken token);
                    [eventadd] HRESULT RateChanged([in] Windows.UI.Xaml.Media.RateChangedRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT VolumeChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT VolumeChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SeekCompleted([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SeekCompleted([in] EventRegistrationToken token);
                    HRESULT Stop();
                    HRESULT Play();
                    HRESULT Pause();
                    HRESULT CanPlayType([in] HSTRING type, [out] [retval] Windows.UI.Xaml.Media.MediaCanPlayResponse* returnValue);
                    HRESULT SetSource([in] Windows.Storage.Streams.IRandomAccessStream* stream, [in] HSTRING mimeType);
                    HRESULT GetAudioStreamLanguage([in] Windows.Foundation.IReference<INT32>* index, [out] [retval] HSTRING* returnValue);
                    HRESULT AddAudioEffect([in] HSTRING effectID, [in] boolean effectOptional, [in] Windows.Foundation.Collections.IPropertySet* effectConfiguration);
                    HRESULT AddVideoEffect([in] HSTRING effectID, [in] boolean effectOptional, [in] Windows.Foundation.Collections.IPropertySet* effectConfiguration);
                    HRESULT RemoveAllEffects();
                    [propget] HRESULT ActualStereo3DVideoPackingMode([out] [retval] Windows.UI.Xaml.Media.Stereo3DVideoPackingMode* value);
                }

                [uuid(DCCD2CB9-7568-4682-A72A-8DDF2A2665CA)]
                [exclusiveto(Windows.UI.Xaml.Controls.MediaElement)]
                [version(0x06020000)]
                interface IMediaElementStatics : IInspectable
                {
                    [propget] HRESULT PosterSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsMutedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAudioOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoPlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VolumeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BalanceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalVideoHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalVideoWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NaturalDurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PositionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DownloadProgressProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BufferingProgressProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DownloadProgressOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CurrentStateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanSeekProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanPauseProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioStreamCountProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioStreamIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLoopingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlayToSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultPlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AspectRatioWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AspectRatioHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RealTimePlaybackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioCategoryProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AudioDeviceTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProtectionManagerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Stereo3DVideoPackingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Stereo3DVideoRenderModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsStereo3DVideoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActualStereo3DVideoPackingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(AF0E05F7-C4B7-44C5-B09D-5CB7052B3A97)]
                [exclusiveto(Windows.UI.Xaml.Controls.NotifyEventArgs)]
                [version(0x06020000)]
                interface INotifyEventArgs : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] HSTRING* value);
                }

                [uuid(B8AE8FE2-D641-4FD7-80B4-7439207D2798)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [version(0x06020000)]
                interface IStackPanel : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegular([out] [retval] boolean* value);
                    [propput] HRESULT AreScrollSnapPointsRegular([in] boolean value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                }

                [uuid(F0D0CD93-4DBC-48A7-9914-954924657771)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [version(0x06020000)]
                interface IStackPanelStatics : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegularProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(63D8248A-8B34-445A-808F-B6ECD62A27D9)]
                [exclusiveto(Windows.UI.Xaml.Controls.StackPanel)]
                [version(0x06020000)]
                interface IStackPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.StackPanel** instance);
                }

                [uuid(E48F5A8B-1DFF-4352-A1F4-E516514EC882)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [version(0x06020000)]
                interface ITextBox : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT SelectedText([out] [retval] HSTRING* value);
                    [propput] HRESULT SelectedText([in] HSTRING value);
                    [propget] HRESULT SelectionLength([out] [retval] INT32* value);
                    [propput] HRESULT SelectionLength([in] INT32 value);
                    [propget] HRESULT SelectionStart([out] [retval] INT32* value);
                    [propput] HRESULT SelectionStart([in] INT32 value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT AcceptsReturn([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsReturn([in] boolean value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT IsSpellCheckEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSpellCheckEnabled([in] boolean value);
                    [propget] HRESULT IsTextPredictionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextPredictionEnabled([in] boolean value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [eventadd] HRESULT TextChanged([in] Windows.UI.Xaml.Controls.TextChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT Select([in] INT32 start, [in] INT32 length);
                    HRESULT SelectAll();
                    HRESULT GetRectFromCharacterIndex([in] INT32 charIndex, [in] boolean trailingEdge, [out] [retval] Windows.Foundation.Rect* returnValue);
                }

                [uuid(7E37F4FB-A4BC-4625-8838-8EB2A9091283)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                [version(0x06020000)]
                interface ITextBoxStatics : IInspectable
                {
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsReturnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSpellCheckEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextPredictionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(710E4278-8529-47D3-8D8E-307E34CFF081)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextBox)]
                interface ITextBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.TextBox** instance);
                }

                [uuid(90A57A40-80B6-4FCE-B1EC-E3C616284B6A)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                interface IRichEditBox : IInspectable
                {
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT AcceptsReturn([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsReturn([in] boolean value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT TextWrapping([out] [retval] Windows.UI.Xaml.TextWrapping* value);
                    [propput] HRESULT TextWrapping([in] Windows.UI.Xaml.TextWrapping value);
                    [propget] HRESULT IsSpellCheckEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSpellCheckEnabled([in] boolean value);
                    [propget] HRESULT IsTextPredictionEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextPredictionEnabled([in] boolean value);
                    [propget] HRESULT Document([out] [retval] Windows.UI.Text.ITextDocument** value);
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [eventadd] HRESULT TextChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TextChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                }

                [uuid(F5E03A74-88EA-479B-9A05-37089FF30EDE)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                interface IRichEditBoxStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsReturnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextWrappingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSpellCheckEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextPredictionEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(61A1DF62-2806-41ED-88ED-AE21F47AB422)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.RichEditBox)]
                interface IRichEditBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.RichEditBox** instance);
                }

                [uuid(4DD04F7D-7A11-4B2E-9933-577DF39252B6)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.TextChangedEventArgs)]
                interface ITextChangedEventArgs : IInspectable
                {
                }

                [uuid(02B9AA11-0B47-4E7D-AD91-3A4168ED230D)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [version(0x06020000)]
                interface IPasswordBox : IInspectable
                {
                    [propget] HRESULT Password([out] [retval] HSTRING* value);
                    [propput] HRESULT Password([in] HSTRING value);
                    [propget] HRESULT PasswordChar([out] [retval] HSTRING* value);
                    [propput] HRESULT PasswordChar([in] HSTRING value);
                    [propget] HRESULT IsPasswordRevealButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPasswordRevealButtonEnabled([in] boolean value);
                    [propget] HRESULT MaxLength([out] [retval] INT32* value);
                    [propput] HRESULT MaxLength([in] INT32 value);
                    [eventadd] HRESULT PasswordChanged([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PasswordChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContextMenuOpening([in] Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContextMenuOpening([in] EventRegistrationToken token);
                    HRESULT SelectAll();
                }

                [uuid(5EE67563-2D74-4ACE-BD79-FCAB61A7D77B)]
                [exclusiveto(Windows.UI.Xaml.Controls.PasswordBox)]
                [version(0x06020000)]
                interface IPasswordBoxStatics : IInspectable
                {
                    [propget] HRESULT PasswordProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PasswordCharProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPasswordRevealButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(4ABAE829-D80C-4A5E-A48C-F8B3D3B6533D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.RowDefinition)]
                interface IRowDefinition : IInspectable
                {
                    [propget] HRESULT Height([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Height([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT MaxHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxHeight([in] DOUBLE value);
                    [propget] HRESULT MinHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinHeight([in] DOUBLE value);
                    [propget] HRESULT ActualHeight([out] [retval] DOUBLE* value);
                }

                [uuid(5ADF3FE5-2056-4724-94D6-E4812B022EC8)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.RowDefinition)]
                interface IRowDefinitionStatics : IInspectable
                {
                    [propget] HRESULT HeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(F7F1B229-F024-467F-970A-7E705615DB7B)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColumnDefinition)]
                [version(0x06020000)]
                interface IColumnDefinition : IInspectable
                {
                    [propget] HRESULT Width([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Width([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT MaxWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxWidth([in] DOUBLE value);
                    [propget] HRESULT MinWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinWidth([in] DOUBLE value);
                    [propget] HRESULT ActualWidth([out] [retval] DOUBLE* value);
                }

                [uuid(06B0D728-D044-40C6-942E-AE60EAC74851)]
                [exclusiveto(Windows.UI.Xaml.Controls.ColumnDefinition)]
                [version(0x06020000)]
                interface IColumnDefinitionStatics : IInspectable
                {
                    [propget] HRESULT WidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(FD104460-2E15-4BA3-8B8F-FA693A4161E9)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [version(0x06020000)]
                interface IGrid : IInspectable
                {
                    [propget] HRESULT RowDefinitions([out] [retval] Windows.UI.Xaml.Controls.RowDefinitionCollection** value);
                    [propget] HRESULT ColumnDefinitions([out] [retval] Windows.UI.Xaml.Controls.ColumnDefinitionCollection** value);
                }

                [uuid(64FE2E9F-F951-42B6-A9CE-BB179AF11595)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [version(0x06020000)]
                interface IGridStatics : IInspectable
                {
                    [propget] HRESULT RowProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRow([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetRow([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumn([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetColumn([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRowSpan([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetRowSpan([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumnSpan([in] Windows.UI.Xaml.FrameworkElement* element, [out] [retval] INT32* value);
                    HRESULT SetColumnSpan([in] Windows.UI.Xaml.FrameworkElement* element, [in] INT32 value);
                }

                [uuid(AE814041-C531-43B4-BF99-12F506F7B01C)]
                [exclusiveto(Windows.UI.Xaml.Controls.Grid)]
                [version(0x06020000)]
                interface IGridFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Grid** instance);
                }

                [uuid(1C59DB48-8233-4C0C-BCF5-02A5FB35AE00)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                interface ISwapChainBackgroundPanel : IInspectable
                {
                }

                [uuid(198289D4-C89B-49B2-896C-5917BF8ADCAE)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)]
                interface ISwapChainBackgroundPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SwapChainBackgroundPanel** instance);
                }

                [uuid(A7A69EC9-EA35-4679-BF29-F4F09286D314)]
                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [version(0x06020000)]
                interface IUserControl : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                }

                [uuid(E8887976-2C5C-41CF-BE6A-9E44BEFDF655)]
                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                [version(0x06020000)]
                interface IUserControlStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(38B1ED92-A28A-4972-93DF-F4F759B8AFD2)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.UserControl)]
                interface IUserControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.UserControl** instance);
                }

                [uuid(F4A91DD8-D979-4381-8652-BDA0342A765E)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                interface IItemsControl : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT Items([out] [retval] Windows.UI.Xaml.Controls.ItemCollection** value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ItemsPanel([out] [retval] Windows.UI.Xaml.Controls.ItemsPanelTemplate** value);
                    [propput] HRESULT ItemsPanel([in] Windows.UI.Xaml.Controls.ItemsPanelTemplate* value);
                    [propget] HRESULT DisplayMemberPath([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayMemberPath([in] HSTRING value);
                    [propget] HRESULT ItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT ItemContainerGenerator([out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** value);
                    [propget] HRESULT ItemContainerTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ItemContainerTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT GroupStyle([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.GroupStyle*>** value);
                    [propget] HRESULT GroupStyleSelector([out] [retval] Windows.UI.Xaml.Controls.GroupStyleSelector** value);
                    [propput] HRESULT GroupStyleSelector([in] Windows.UI.Xaml.Controls.GroupStyleSelector* value);
                    [propget] HRESULT IsGrouping([out] [retval] boolean* value);
                }

                [uuid(C79BB41B-A084-4301-A496-72971F364ED1)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                interface IItemsControlOverrides : IInspectable
                {
                    HRESULT IsItemItsOwnContainerOverride([in] IInspectable* item, [out] [retval] boolean* returnValue);
                    HRESULT GetContainerForItemOverride([out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT ClearContainerForItemOverride([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* item);
                    HRESULT PrepareContainerForItemOverride([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* item);
                    HRESULT OnItemsChanged([in] IInspectable* e);
                    HRESULT OnItemContainerStyleChanged([in] Windows.UI.Xaml.Style* oldItemContainerStyle, [in] Windows.UI.Xaml.Style* newItemContainerStyle);
                    HRESULT OnItemContainerStyleSelectorChanged([in] Windows.UI.Xaml.Controls.StyleSelector* oldItemContainerStyleSelector, [in] Windows.UI.Xaml.Controls.StyleSelector* newItemContainerStyleSelector);
                    HRESULT OnItemTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldItemTemplate, [in] Windows.UI.Xaml.DataTemplate* newItemTemplate);
                    HRESULT OnItemTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldItemTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newItemTemplateSelector);
                    HRESULT OnGroupStyleSelectorChanged([in] Windows.UI.Xaml.Controls.GroupStyleSelector* oldGroupStyleSelector, [in] Windows.UI.Xaml.Controls.GroupStyleSelector* newGroupStyleSelector);
                }

                [uuid(37DABD89-DCFB-45B8-9AFE-874DF097905E)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                interface IItemsControlStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsPanelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayMemberPathProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemsOwner([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** returnValue);
                    HRESULT ItemsControlFromItemContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** returnValue);
                }

                [uuid(F7BBC359-F8FD-471C-BCB2-2C74BE8EBF8C)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsControl)]
                interface IItemsControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ItemsControl** instance);
                }

                [uuid(40765F00-83F0-4D7F-B1B8-F19DE4F1D5DA)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemContainerGenerator)]
                [version(0x06020000)]
                interface IItemContainerGenerator : IInspectable
                {
                    [eventadd] HRESULT ItemsChanged([in] Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemsChanged([in] EventRegistrationToken token);
                    HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** returnValue);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT IndexFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] INT32* returnValue);
                    HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT GetItemContainerGeneratorForPanel([in] Windows.UI.Xaml.Controls.Panel* panel, [out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** returnValue);
                    HRESULT StartAt([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] Windows.UI.Xaml.Controls.Primitives.GeneratorDirection direction, [in] boolean allowStartAtRealizedItem);
                    HRESULT Stop();
                    HRESULT GenerateNext([out] boolean* isNewlyRealized, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                    HRESULT PrepareItemContainer([in] Windows.UI.Xaml.DependencyObject* container);
                    HRESULT RemoveAll();
                    HRESULT Remove([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] INT32 count);
                    HRESULT GeneratorPositionFromIndex([in] INT32 itemIndex, [out] [retval] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition* returnValue);
                    HRESULT IndexFromGeneratorPosition([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [out] [retval] INT32* returnValue);
                    HRESULT Recycle([in] Windows.UI.Xaml.Controls.Primitives.GeneratorPosition position, [in] INT32 count);
                }

                [uuid(38AAD50C-12CF-4D1E-A884-C9DF85F07CD9)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                interface IVirtualizingPanel : IInspectable
                {
                    [propget] HRESULT ItemContainerGenerator([out] [retval] Windows.UI.Xaml.Controls.ItemContainerGenerator** value);
                }

                [uuid(5EF6BD7D-677F-408D-A96C-B19507750466)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                interface IVirtualizingPanelOverrides : IInspectable
                {
                    HRESULT OnItemsChanged([in] IInspectable* sender, [in] Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs* args);
                    HRESULT OnClearChildren();
                    HRESULT BringIndexIntoView([in] INT32 index);
                }

                [uuid(C9C9AB42-C232-479D-A7C9-5E7611196A45)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [version(0x06020000)]
                interface IVirtualizingPanelProtected : IInspectable
                {
                    HRESULT AddInternalChild([in] Windows.UI.Xaml.UIElement* child);
                    HRESULT InsertInternalChild([in] INT32 index, [in] Windows.UI.Xaml.UIElement* child);
                    HRESULT RemoveInternalChildRange([in] INT32 index, [in] INT32 range);
                }

                [uuid(BE19F839-CBD0-43E9-A5D0-0BDBA0FFBD38)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingPanel)]
                [version(0x06020000)]
                interface IVirtualizingPanelFactory : IInspectable
                {
                }

                [uuid(7567CD9A-A3B4-4DEA-BB11-549E2C2F919D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                interface IVirtualizingStackPanel : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegular([out] [retval] boolean* value);
                    [propput] HRESULT AreScrollSnapPointsRegular([in] boolean value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [eventadd] HRESULT CleanUpVirtualizedItemEvent([in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CleanUpVirtualizedItemEvent([in] EventRegistrationToken token);
                }

                [uuid(CBE6F72C-2892-46D1-987F-58CA1081F040)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                [version(0x06020000)]
                interface IVirtualizingStackPanelOverrides : IInspectable
                {
                    HRESULT OnCleanUpVirtualizedItem([in] Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs* e);
                }

                [uuid(8314E778-91D3-4D56-AC09-223ADCD2BD3F)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.VirtualizingStackPanel)]
                interface IVirtualizingStackPanelStatics : IInspectable
                {
                    [propget] HRESULT AreScrollSnapPointsRegularProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VirtualizationModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVirtualizationMode([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.VirtualizationMode* value);
                    HRESULT SetVirtualizationMode([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.VirtualizationMode value);
                    [propget] HRESULT IsVirtualizingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsVirtualizing([in] Windows.UI.Xaml.DependencyObject* o, [out] [retval] boolean* value);
                }

                [uuid(9CA507C7-23C9-4F01-B80F-BE5C21EEF474)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)]
                interface IVariableSizedWrapGrid : IInspectable
                {
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT HorizontalChildrenAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalChildrenAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalChildrenAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalChildrenAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [uuid(FE9DB859-8127-4AEF-B7A2-949847486E96)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)]
                interface IVariableSizedWrapGridStatics : IInspectable
                {
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetRowSpan([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* value);
                    HRESULT SetRowSpan([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetColumnSpan([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* value);
                    HRESULT SetColumnSpan([in] Windows.UI.Xaml.UIElement* element, [in] INT32 value);
                }

                [uuid(05252C58-BA9D-4809-9EC3-FA0D16710BA1)]
                [exclusiveto(Windows.UI.Xaml.Controls.Viewbox)]
                [version(0x06020000)]
                interface IViewbox : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT StretchDirection([out] [retval] Windows.UI.Xaml.Controls.StretchDirection* value);
                    [propput] HRESULT StretchDirection([in] Windows.UI.Xaml.Controls.StretchDirection value);
                }

                [uuid(5CD1E72D-E8D3-4865-8F08-B6B2D689ADF1)]
                [exclusiveto(Windows.UI.Xaml.Controls.Viewbox)]
                [version(0x06020000)]
                interface IViewboxStatics : IInspectable
                {
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(797C4539-45BD-4633-A044-BFB02EF5170F)]
                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [version(0x06020000)]
                interface IBorder : IInspectable
                {
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ChildTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ChildTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [uuid(B81D1639-E911-4FD7-A4C4-B9C7F008B7FC)]
                [exclusiveto(Windows.UI.Xaml.Controls.Border)]
                [version(0x06020000)]
                interface IBorderStatics : IInspectable
                {
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(A26DD1DC-CD44-435C-BE94-01D6241C231C)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                interface IContentControl : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ContentTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ContentTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ContentTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [uuid(5F4C0B10-E38E-4B5D-BE1A-5ED04246A635)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [version(0x06020000)]
                interface IContentControlOverrides : IInspectable
                {
                    HRESULT OnContentChanged([in] IInspectable* oldContent, [in] IInspectable* newContent);
                    HRESULT OnContentTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldContentTemplate, [in] Windows.UI.Xaml.DataTemplate* newContentTemplate);
                    HRESULT OnContentTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldContentTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newContentTemplateSelector);
                }

                [uuid(116982A4-5CF5-4C05-A53F-15E4876C85EC)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                [version(0x06020000)]
                interface IContentControlStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(AB017B19-196E-4ED5-A27F-55C58FB1673F)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentControl)]
                interface IContentControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ContentControl** instance);
                }

                [uuid(79FDE5B4-CD37-491C-8845-DAF472DEFFF6)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [version(0x06020000)]
                interface IContentPresenter : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ContentTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ContentTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ContentTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ContentTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [uuid(A76339ED-32FF-438B-AAD5-1D68FAE93426)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [version(0x06020000)]
                interface IContentPresenterOverrides : IInspectable
                {
                    HRESULT OnContentTemplateChanged([in] Windows.UI.Xaml.DataTemplate* oldContentTemplate, [in] Windows.UI.Xaml.DataTemplate* newContentTemplate);
                    HRESULT OnContentTemplateSelectorChanged([in] Windows.UI.Xaml.Controls.DataTemplateSelector* oldContentTemplateSelector, [in] Windows.UI.Xaml.Controls.DataTemplateSelector* newContentTemplateSelector);
                }

                [uuid(18C2893B-DA2E-4426-B85A-2C7E2171BEDF)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                [version(0x06020000)]
                interface IContentPresenterStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(3339D4F7-4815-44C4-9F76-68C83880EF10)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContentPresenter)]
                interface IContentPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ContentPresenter** instance);
                }

                [uuid(14EAD768-34B2-4B97-BF3C-E8D73230A2AA)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPanelTemplate)]
                interface IItemsPanelTemplate : IInspectable
                {
                }

                [uuid(C271569B-6DCA-4E2B-8E14-C55136B02A71)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                interface IItemsPresenter : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT HeaderTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                }

                [uuid(18DE66CD-4A6C-4B2E-AA86-CB126C9A2920)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemsPresenter)]
                interface IItemsPresenterStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(C972D2DC-B609-4758-851E-A799C21DE97D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)]
                interface ISelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT RemovedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [uuid(11A8B6B5-2830-4517-84CD-5524C8B88B45)]
                [exclusiveto(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)]
                [version(0x06020000)]
                interface ISelectionChangedEventArgsFactory : IInspectable
                {
                    HRESULT CreateInstanceWithRemovedItemsAndAddedItems([in] Windows.Foundation.Collections.IVector<IInspectable*>* removedItems, [in] Windows.Foundation.Collections.IVector<IInspectable*>* addedItems, [in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.SelectionChangedEventArgs** instance);
                }

                [uuid(1F7DF263-C14B-4528-B6F0-637999D83CC6)]
                [exclusiveto(Windows.UI.Xaml.Controls.ContextMenuEventArgs)]
                [version(0x06020000)]
                interface IContextMenuEventArgs : IInspectable
                {
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT CursorLeft([out] [retval] DOUBLE* value);
                    [propget] HRESULT CursorTop([out] [retval] DOUBLE* value);
                }

                [uuid(EA05CCE9-937C-4120-8406-792185784338)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs)]
                interface ICleanUpVirtualizedItemEventArgs : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] IInspectable** value);
                    [propget] HRESULT UIElement([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [uuid(3D0813BA-6890-4537-BFE5-796D9458EDD6)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [version(0x06020000)]
                interface IListViewBase : IInspectable
                {
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Windows.UI.Xaml.Controls.ListViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Windows.UI.Xaml.Controls.ListViewSelectionMode value);
                    [propget] HRESULT IsSwipeEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSwipeEnabled([in] boolean value);
                    [propget] HRESULT CanDragItems([out] [retval] boolean* value);
                    [propput] HRESULT CanDragItems([in] boolean value);
                    [propget] HRESULT CanReorderItems([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderItems([in] boolean value);
                    [propget] HRESULT IsItemClickEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsItemClickEnabled([in] boolean value);
                    [propget] HRESULT DataFetchSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT DataFetchSize([in] DOUBLE value);
                    [propget] HRESULT IncrementalLoadingThreshold([out] [retval] DOUBLE* value);
                    [propput] HRESULT IncrementalLoadingThreshold([in] DOUBLE value);
                    [propget] HRESULT IncrementalLoadingTrigger([out] [retval] Windows.UI.Xaml.Controls.IncrementalLoadingTrigger* value);
                    [propput] HRESULT IncrementalLoadingTrigger([in] Windows.UI.Xaml.Controls.IncrementalLoadingTrigger value);
                    [eventadd] HRESULT ItemClick([in] Windows.UI.Xaml.Controls.ItemClickEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT DragItemsStarting([in] Windows.UI.Xaml.Controls.DragItemsStartingEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsStarting([in] EventRegistrationToken token);
                    [overload("ScrollIntoView")] HRESULT ScrollIntoView([in] IInspectable* item);
                    HRESULT SelectAll();
                    HRESULT LoadMoreItemsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Data.LoadMoreItemsResult>** returnValue);
                    [overload("ScrollIntoView")] HRESULT ScrollIntoViewWithAlignment([in] IInspectable* item, [in] Windows.UI.Xaml.Controls.ScrollIntoViewAlignment alignment);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT HeaderTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                }

                [uuid(8532B8F7-3E16-455B-89A8-C1346223F6D3)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [version(0x06020000)]
                interface IListViewBaseStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSwipeEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanDragItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsItemClickEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DataFetchSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IncrementalLoadingThresholdProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IncrementalLoadingTriggerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SemanticZoomOwnerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsActiveViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(E67E6C7F-150F-46D0-A6AC-C5002BD9CA53)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewBase)]
                [version(0x06020000)]
                interface IListViewBaseFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListViewBase** instance);
                }

                [uuid(9C314242-F29A-494D-A3A5-D4C7B2A46852)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ItemClickEventArgs)]
                interface IItemClickEventArgs : IInspectable
                {
                    [propget] HRESULT ClickedItem([out] [retval] IInspectable** value);
                }

                [uuid(7D9901F1-E7C1-4E83-B470-C9D6D7BDA9F5)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridViewItem)]
                [version(0x06020000)]
                interface IGridViewItem : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings** value);
                }

                [uuid(229B00AF-3FA6-43E9-979D-07EA0D6280DC)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridViewItem)]
                interface IGridViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GridViewItem** instance);
                }

                [uuid(B7BB4305-3DD9-43DE-A8C0-C472F085BC11)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewItem)]
                interface IListViewItem : IInspectable
                {
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings** value);
                }

                [uuid(F431073D-9CAC-42A2-82DF-0F4490BC4E2E)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListViewItem)]
                [version(0x06020000)]
                interface IListViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListViewItem** instance);
                }

                [uuid(F6CE8C6D-FE96-41AD-A64A-C2B81C4AF7F8)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListView)]
                interface IListView : IInspectable
                {
                }

                [uuid(BDFF696D-3F22-41F9-97A6-883134A76113)]
                [exclusiveto(Windows.UI.Xaml.Controls.ListView)]
                [version(0x06020000)]
                interface IListViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ListView** instance);
                }

                [uuid(026AE934-B67E-4D80-8F72-8AA64B4D827B)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridView)]
                [version(0x06020000)]
                interface IGridView : IInspectable
                {
                }

                [uuid(D9BCCA89-09F9-4C6E-A83E-F199146F0E7D)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.GridView)]
                interface IGridViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.GridView** instance);
                }

                [uuid(0552178B-7567-47C2-BD5C-AD8394C828BA)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.WrapGrid)]
                interface IWrapGrid : IInspectable
                {
                    [propget] HRESULT ItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemWidth([in] DOUBLE value);
                    [propget] HRESULT ItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT ItemHeight([in] DOUBLE value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT HorizontalChildrenAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalChildrenAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalChildrenAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalChildrenAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [uuid(D04A6B97-13CB-479C-A285-E4E56846C4CB)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.WrapGrid)]
                interface IWrapGridStatics : IInspectable
                {
                    [propget] HRESULT ItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalChildrenAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(7DE5D75F-4415-429F-B523-699BDB8C30DB)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [version(0x06020000)]
                interface IToolTip : IInspectable
                {
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalOffset([in] DOUBLE value);
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT Placement([out] [retval] Windows.UI.Xaml.Controls.Primitives.PlacementMode* value);
                    [propput] HRESULT Placement([in] Windows.UI.Xaml.Controls.Primitives.PlacementMode value);
                    [propget] HRESULT PlacementTarget([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PlacementTarget([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalOffset([in] DOUBLE value);
                    [propget] HRESULT TemplateSettings([out] [retval] Windows.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings** value);
                    [eventadd] HRESULT Closed([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                    [eventadd] HRESULT Opened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Opened([in] EventRegistrationToken token);
                }

                [uuid(F00285B8-4BA9-4F4F-86A7-86003813CEB3)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                interface IToolTipStatics : IInspectable
                {
                    [propget] HRESULT HorizontalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(89839403-B538-49E3-A430-3AC037DC6FE0)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTip)]
                [version(0x06020000)]
                interface IToolTipFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.ToolTip** instance);
                }

                [uuid(03A55F87-BFCC-4A1E-8FEA-98F610832CEA)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTipService)]
                [version(0x06020000)]
                interface IToolTipService : IInspectable
                {
                }

                [uuid(86E649F8-E245-48AA-A8C8-D1073ED76319)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ToolTipService)]
                interface IToolTipServiceStatics : IInspectable
                {
                    [propget] HRESULT PlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPlacement([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Controls.Primitives.PlacementMode* value);
                    HRESULT SetPlacement([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Controls.Primitives.PlacementMode value);
                    [propget] HRESULT PlacementTargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPlacementTarget([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.UIElement** value);
                    HRESULT SetPlacementTarget([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ToolTipProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetToolTip([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] IInspectable** value);
                    HRESULT SetToolTip([in] Windows.UI.Xaml.DependencyObject* element, [in] IInspectable* value);
                }

                [uuid(71CF215C-DAED-4783-AA11-DC574D2713E9)]
                [exclusiveto(Windows.UI.Xaml.Controls.DragItemsStartingEventArgs)]
                [version(0x06020000)]
                interface IDragItemsStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                }

                [uuid(019FFF21-ECE6-4FBC-BF40-8938D4813E27)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoom)]
                interface ISemanticZoom : IInspectable
                {
                    [propget] HRESULT ZoomedInView([out] [retval] Windows.UI.Xaml.Controls.ISemanticZoomInformation** value);
                    [propput] HRESULT ZoomedInView([in] Windows.UI.Xaml.Controls.ISemanticZoomInformation* value);
                    [propget] HRESULT ZoomedOutView([out] [retval] Windows.UI.Xaml.Controls.ISemanticZoomInformation** value);
                    [propput] HRESULT ZoomedOutView([in] Windows.UI.Xaml.Controls.ISemanticZoomInformation* value);
                    [propget] HRESULT IsZoomedInViewActive([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomedInViewActive([in] boolean value);
                    [propget] HRESULT CanChangeViews([out] [retval] boolean* value);
                    [propput] HRESULT CanChangeViews([in] boolean value);
                    [eventadd] HRESULT ViewChangeStarted([in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChangeStarted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ViewChangeCompleted([in] Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChangeCompleted([in] EventRegistrationToken token);
                    HRESULT ToggleActiveView();
                    [propget] HRESULT IsZoomOutButtonEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomOutButtonEnabled([in] boolean value);
                }

                [uuid(A76A3B63-229B-4DC5-AA11-9D922FBF8A98)]
                [version(0x06020000)]
                interface ISemanticZoomInformation : IInspectable
                {
                    [propget] HRESULT SemanticZoomOwner([out] [retval] Windows.UI.Xaml.Controls.SemanticZoom** value);
                    [propput] HRESULT SemanticZoomOwner([in] Windows.UI.Xaml.Controls.SemanticZoom* value);
                    [propget] HRESULT IsActiveView([out] [retval] boolean* value);
                    [propput] HRESULT IsActiveView([in] boolean value);
                    [propget] HRESULT IsZoomedInView([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomedInView([in] boolean value);
                    HRESULT InitializeViewChange();
                    HRESULT CompleteViewChange();
                    HRESULT MakeVisible([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* item);
                    HRESULT StartViewChangeFrom([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT StartViewChangeTo([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT CompleteViewChangeFrom([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                    HRESULT CompleteViewChangeTo([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* source, [in] Windows.UI.Xaml.Controls.SemanticZoomLocation* destination);
                }

                [uuid(8EF17EF2-9898-4666-B285-3ED38A07910E)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoom)]
                [version(0x06020000)]
                interface ISemanticZoomStatics : IInspectable
                {
                    [propget] HRESULT ZoomedInViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomedOutViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomedInViewActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanChangeViewsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsZoomOutButtonEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(42011736-E3C2-496B-BC4E-D750D4375B9A)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoomLocation)]
                interface ISemanticZoomLocation : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propput] HRESULT Item([in] IInspectable* value);
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT Bounds([in] Windows.Foundation.Rect value);
                }

                [uuid(47DFC068-B569-4B19-842D-8E6CF90989AF)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs)]
                interface ISemanticZoomViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsSourceZoomedInView([out] [retval] boolean* value);
                    [propput] HRESULT IsSourceZoomedInView([in] boolean value);
                    [propget] HRESULT SourceItem([out] [retval] Windows.UI.Xaml.Controls.SemanticZoomLocation** value);
                    [propput] HRESULT SourceItem([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* value);
                    [propget] HRESULT DestinationItem([out] [retval] Windows.UI.Xaml.Controls.SemanticZoomLocation** value);
                    [propput] HRESULT DestinationItem([in] Windows.UI.Xaml.Controls.SemanticZoomLocation* value);
                }

                [uuid(4DD04F7E-7A11-4B2E-9933-577DF39252B6)]
                [exclusiveto(Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs)]
                [version(0x06020000)]
                interface IScrollViewerViewChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsIntermediate([out] [retval] boolean* value);
                }

                [uuid(A8912263-2951-4F58-A9C5-5A134EAA7F07)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                interface IControl : IInspectable
                {
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsTabStop([out] [retval] boolean* value);
                    [propput] HRESULT IsTabStop([in] boolean value);
                    [propget] HRESULT IsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsEnabled([in] boolean value);
                    [propget] HRESULT TabIndex([out] [retval] INT32* value);
                    [propput] HRESULT TabIndex([in] INT32 value);
                    [propget] HRESULT TabNavigation([out] [retval] Windows.UI.Xaml.Input.KeyboardNavigationMode* value);
                    [propput] HRESULT TabNavigation([in] Windows.UI.Xaml.Input.KeyboardNavigationMode value);
                    [propget] HRESULT Template([out] [retval] Windows.UI.Xaml.Controls.ControlTemplate** value);
                    [propput] HRESULT Template([in] Windows.UI.Xaml.Controls.ControlTemplate* value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT HorizontalContentAlignment([out] [retval] Windows.UI.Xaml.HorizontalAlignment* value);
                    [propput] HRESULT HorizontalContentAlignment([in] Windows.UI.Xaml.HorizontalAlignment value);
                    [propget] HRESULT VerticalContentAlignment([out] [retval] Windows.UI.Xaml.VerticalAlignment* value);
                    [propput] HRESULT VerticalContentAlignment([in] Windows.UI.Xaml.VerticalAlignment value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT FocusState([out] [retval] Windows.UI.Xaml.FocusState* value);
                    [eventadd] HRESULT IsEnabledChanged([in] Windows.UI.Xaml.DependencyPropertyChangedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsEnabledChanged([in] EventRegistrationToken token);
                    HRESULT ApplyTemplate([out] [retval] boolean* returnValue);
                    HRESULT Focus([in] Windows.UI.Xaml.FocusState value, [out] [retval] boolean* returnValue);
                }

                [uuid(A09691DF-9824-41FE-B530-B0D8990E64C1)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                interface IControlOverrides : IInspectable
                {
                    HRESULT OnPointerEntered([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerPressed([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerMoved([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerReleased([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerExited([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerCaptureLost([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerCanceled([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnPointerWheelChanged([in] Windows.UI.Xaml.Input.PointerRoutedEventArgs* e);
                    HRESULT OnTapped([in] Windows.UI.Xaml.Input.TappedRoutedEventArgs* e);
                    HRESULT OnDoubleTapped([in] Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs* e);
                    HRESULT OnHolding([in] Windows.UI.Xaml.Input.HoldingRoutedEventArgs* e);
                    HRESULT OnRightTapped([in] Windows.UI.Xaml.Input.RightTappedRoutedEventArgs* e);
                    HRESULT OnManipulationStarting([in] Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs* e);
                    HRESULT OnManipulationInertiaStarting([in] Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs* e);
                    HRESULT OnManipulationStarted([in] Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs* e);
                    HRESULT OnManipulationDelta([in] Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs* e);
                    HRESULT OnManipulationCompleted([in] Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs* e);
                    HRESULT OnKeyUp([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnKeyDown([in] Windows.UI.Xaml.Input.KeyRoutedEventArgs* e);
                    HRESULT OnGotFocus([in] Windows.UI.Xaml.RoutedEventArgs* e);
                    HRESULT OnLostFocus([in] Windows.UI.Xaml.RoutedEventArgs* e);
                    HRESULT OnDragEnter([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDragLeave([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDragOver([in] Windows.UI.Xaml.DragEventArgs* e);
                    HRESULT OnDrop([in] Windows.UI.Xaml.DragEventArgs* e);
                }

                [uuid(1791587A-2A7C-4981-A2D8-AB99FFFC65B9)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [version(0x06020000)]
                interface IControlProtected : IInspectable
                {
                    [propget] HRESULT DefaultStyleKey([out] [retval] IInspectable** value);
                    [propput] HRESULT DefaultStyleKey([in] IInspectable* value);
                    HRESULT GetTemplateChild([in] HSTRING childName, [out] [retval] Windows.UI.Xaml.DependencyObject** returnValue);
                }

                [uuid(473B305B-877D-4C35-8FCA-46A05F96607A)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [version(0x06020000)]
                interface IControlStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTabStopProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabNavigationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalContentAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DefaultStyleKeyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusStateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [uuid(B12B1D5A-6419-4E16-B212-A45336B75778)]
                [exclusiveto(Windows.UI.Xaml.Controls.Control)]
                [version(0x06020000)]
                interface IControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Controls.Control** instance);
                }

                [uuid(EFD2418E-41E0-48BB-8B82-91EDA1BA3FE2)]
                [version(0x06020000)]
                [exclusiveto(Windows.UI.Xaml.Controls.ControlTemplate)]
                interface IControlTemplate : IInspectable
                {
                    [propget] HRESULT TargetType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propput] HRESULT TargetType([in] Windows.UI.Xaml.Interop.TypeName value);
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                runtimeclass NotifyEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.INotifyEventArgs;
                }

                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass WebViewNavigationFailedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewNavigationFailedEventArgs;
                }

                [activatable(0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                runtimeclass DragItemsStartingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs;
                }

                [version(0x06020000)]
                [activatable(0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                runtimeclass SemanticZoomViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs;
                }

                [version(0x06020000)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IStyleSelectorFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass StyleSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IStyleSelector;
                    [overridable] interface Windows.UI.Xaml.Controls.IStyleSelectorOverrides;
                }

                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IDataTemplateSelectorFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                runtimeclass DataTemplateSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IDataTemplateSelector;
                    [overridable] interface Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides;
                }

                [version(0x06020000)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IGroupStyleFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass GroupStyle
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupStyle;
                    interface Windows.UI.Xaml.Data.INotifyPropertyChanged;
                }

                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.IGroupStyleSelectorFactory, public, 0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass GroupStyleSelector
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupStyleSelector;
                    [overridable] interface Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides;
                }

                [activatable(0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ScrollViewerViewChangedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass UIElementCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>;
                }

                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RowDefinitionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.RowDefinition*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.RowDefinition*>;
                }

                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass ColumnDefinitionCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.ColumnDefinition*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Controls.ColumnDefinition*>;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ItemCollection
                {
                    [default] interface Windows.Foundation.Collections.IObservableVector<IInspectable*>;
                    interface Windows.Foundation.Collections.IVector<IInspectable*>;
                    interface Windows.Foundation.Collections.IIterable<IInspectable*>;
                }

                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass ItemContainerGenerator
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemContainerGenerator;
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IToolTipServiceStatics, 0x06020000)]
                runtimeclass ToolTipService
                {
                    [default] interface Windows.UI.Xaml.Controls.IToolTipService;
                }

                [activatable(0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SemanticZoomLocation
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoomLocation;
                }

                [marshaling_behavior(agile)]
                [activatable(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IRowDefinitionStatics, 0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass RowDefinition : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IRowDefinition;
                }

                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [activatable(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IColumnDefinitionStatics, 0x06020000)]
                runtimeclass ColumnDefinition : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Controls.IColumnDefinition;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TextChangedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.ISelectionChangedEventArgsFactory, public, 0x06020000)]
                [version(0x06020000)]
                runtimeclass SelectionChangedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ISelectionChangedEventArgs;
                }

                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ContextMenuEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IContextMenuEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass CleanUpVirtualizedItemEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs;
                }

                [activatable(0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemClickEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemClickEventArgs;
                }

                [static(Windows.UI.Xaml.Controls.IWebViewStatics, 0x06020000)]
                [activatable(0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                runtimeclass WebView : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebView;
                }

                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IPanelStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.IPanelFactory, protected, 0x06020000)]
                [threading(both)]
                runtimeclass Panel : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IPanel;
                }

                [activatable(0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IImageStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass Image : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IImage;
                }

                [threading(both)]
                [static(Windows.UI.Xaml.Controls.ICanvasStatics, 0x06020000)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.ICanvasFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass Canvas : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.ICanvas;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.ITextBlockStatics, 0x06020000)]
                [threading(both)]
                runtimeclass TextBlock : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBlock;
                }

                [activatable(0x06020000)]
                [static(Windows.UI.Xaml.Controls.ICaptureElementStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass CaptureElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.ICaptureElement;
                }

                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockOverflowStatics, 0x06020000)]
                [activatable(0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass RichTextBlockOverflow : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichTextBlockOverflow;
                }

                [version(0x06020000)]
                [activatable(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IRichTextBlockStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RichTextBlock : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichTextBlock;
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IMediaElementStatics, 0x06020000)]
                [version(0x06020000)]
                [activatable(0x06020000)]
                runtimeclass MediaElement : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IMediaElement;
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IStackPanelStatics, 0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IStackPanelFactory, public, 0x06020000)]
                runtimeclass StackPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IStackPanel;
                    interface Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo;
                }

                [composable(Windows.UI.Xaml.Controls.IGridFactory, public, 0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IGridStatics, 0x06020000)]
                runtimeclass Grid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IGrid;
                }

                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory, public, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SwapChainBackgroundPanel : Windows.UI.Xaml.Controls.Grid
                {
                    [default] interface Windows.UI.Xaml.Controls.ISwapChainBackgroundPanel;
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IVirtualizingPanelFactory, protected, 0x06020000)]
                runtimeclass VirtualizingPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVirtualizingPanel;
                    [overridable] interface Windows.UI.Xaml.Controls.IVirtualizingPanelOverrides;
                    [protected] interface Windows.UI.Xaml.Controls.IVirtualizingPanelProtected;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IVariableSizedWrapGridStatics, 0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass VariableSizedWrapGrid : Windows.UI.Xaml.Controls.Panel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVariableSizedWrapGrid;
                }

                [static(Windows.UI.Xaml.Controls.IViewboxStatics, 0x06020000)]
                [threading(both)]
                [activatable(0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass Viewbox : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IViewbox;
                }

                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IBorderStatics, 0x06020000)]
                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Border : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IBorder;
                }

                [version(0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.IContentPresenterFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IContentPresenterStatics, 0x06020000)]
                runtimeclass ContentPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentPresenter;
                    [overridable] interface Windows.UI.Xaml.Controls.IContentPresenterOverrides;
                }

                [version(0x06020000)]
                [threading(both)]
                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ScrollContentPresenter : Windows.UI.Xaml.Controls.ContentPresenter
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollContentPresenter;
                }

                [threading(both)]
                [activatable(0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IItemsPresenterStatics, 0x06020000)]
                runtimeclass ItemsPresenter : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPresenter;
                    interface Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo;
                }

                [version(0x06020000)]
                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IVirtualizingStackPanelStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [activatable(0x06020000)]
                runtimeclass VirtualizingStackPanel : Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
                {
                    [default] interface Windows.UI.Xaml.Controls.IVirtualizingStackPanel;
                    [overridable] interface Windows.UI.Xaml.Controls.IVirtualizingStackPanelOverrides;
                }

                [static(Windows.UI.Xaml.Controls.IWrapGridStatics, 0x06020000)]
                [version(0x06020000)]
                [activatable(0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                runtimeclass WrapGrid : Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
                {
                    [default] interface Windows.UI.Xaml.Controls.IWrapGrid;
                }

                [threading(both)]
                [activatable(0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ItemsPanelTemplate : Windows.UI.Xaml.FrameworkTemplate
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsPanelTemplate;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IWebViewBrushStatics, 0x06020000)]
                [activatable(0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass WebViewBrush : Windows.UI.Xaml.Media.TileBrush
                {
                    [default] interface Windows.UI.Xaml.Controls.IWebViewBrush;
                }

                [composable(Windows.UI.Xaml.Controls.IControlFactory, protected, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IControlStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass Control : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Controls.IControl;
                    [overridable] interface Windows.UI.Xaml.Controls.IControlOverrides;
                    [protected] interface Windows.UI.Xaml.Controls.IControlProtected;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Controls.IProgressRingStatics, 0x06020000)]
                [activatable(0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                runtimeclass ProgressRing : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IProgressRing;
                }

                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [activatable(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IToggleSwitchStatics, 0x06020000)]
                [threading(both)]
                runtimeclass ToggleSwitch : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IToggleSwitch;
                    [overridable] interface Windows.UI.Xaml.Controls.IToggleSwitchOverrides;
                }

                [threading(both)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.ITextBoxFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.ITextBoxStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass TextBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ITextBox;
                }

                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IRichEditBoxFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IRichEditBoxStatics, 0x06020000)]
                runtimeclass RichEditBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IRichEditBox;
                }

                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.IPasswordBoxStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [activatable(0x06020000)]
                runtimeclass PasswordBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IPasswordBox;
                }

                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IUserControlFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IUserControlStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass UserControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IUserControl;
                }

                [static(Windows.UI.Xaml.Controls.IPageStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IPageFactory, public, 0x06020000)]
                [version(0x06020000)]
                runtimeclass Page : Windows.UI.Xaml.Controls.UserControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IPage;
                    [overridable] interface Windows.UI.Xaml.Controls.IPageOverrides;
                }

                [static(Windows.UI.Xaml.Controls.IItemsControlStatics, 0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IItemsControlFactory, public, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ItemsControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IItemsControl;
                    [overridable] interface Windows.UI.Xaml.Controls.IItemsControlOverrides;
                }

                [composable(Windows.UI.Xaml.Controls.IContentControlFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IContentControlStatics, 0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                runtimeclass ContentControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.IContentControl;
                    [overridable] interface Windows.UI.Xaml.Controls.IContentControlOverrides;
                }

                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IFrameStatics, 0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IFrameFactory, public, 0x06020000)]
                runtimeclass Frame : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IFrame;
                    interface Windows.UI.Xaml.Controls.INavigate;
                }

                [composable(Windows.UI.Xaml.Controls.IAppBarFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IAppBarStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass AppBar : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IAppBar;
                    [overridable] interface Windows.UI.Xaml.Controls.IAppBarOverrides;
                }

                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IGroupItemFactory, public, 0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass GroupItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IGroupItem;
                }

                [activatable(0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IScrollViewerStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ScrollViewer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IScrollViewer;
                }

                [composable(Windows.UI.Xaml.Controls.IToolTipFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IToolTipStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ToolTip : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Windows.UI.Xaml.Controls.IToolTip;
                }

                [static(Windows.UI.Xaml.Controls.ISemanticZoomStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [activatable(0x06020000)]
                [threading(both)]
                runtimeclass SemanticZoom : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Windows.UI.Xaml.Controls.ISemanticZoom;
                }

                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.IButtonFactory, public, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Button : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IButton;
                }

                [static(Windows.UI.Xaml.Controls.IHyperlinkButtonStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IHyperlinkButtonFactory, public, 0x06020000)]
                [version(0x06020000)]
                runtimeclass HyperlinkButton : Windows.UI.Xaml.Controls.Primitives.ButtonBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IHyperlinkButton;
                }

                [composable(Windows.UI.Xaml.Controls.ICheckBoxFactory, public, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass CheckBox : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.ICheckBox;
                }

                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IRadioButtonStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IRadioButtonFactory, public, 0x06020000)]
                runtimeclass RadioButton : Windows.UI.Xaml.Controls.Primitives.ToggleButton
                {
                    [default] interface Windows.UI.Xaml.Controls.IRadioButton;
                }

                [composable(Windows.UI.Xaml.Controls.ISliderFactory, public, 0x06020000)]
                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [static(Windows.UI.Xaml.Controls.ISliderStatics, 0x06020000)]
                runtimeclass Slider : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Windows.UI.Xaml.Controls.ISlider;
                }

                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.IProgressBarFactory, public, 0x06020000)]
                [version(0x06020000)]
                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IProgressBarStatics, 0x06020000)]
                runtimeclass ProgressBar : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IProgressBar;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [static(Windows.UI.Xaml.Controls.IComboBoxStatics, 0x06020000)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IComboBoxFactory, public, 0x06020000)]
                runtimeclass ComboBox : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBox;
                    [overridable] interface Windows.UI.Xaml.Controls.IComboBoxOverrides;
                }

                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IFlipViewFactory, public, 0x06020000)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass FlipView : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlipView;
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IListBoxFactory, public, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IListBoxStatics, 0x06020000)]
                runtimeclass ListBox : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IListBox;
                }

                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IListViewBaseFactory, protected, 0x06020000)]
                [static(Windows.UI.Xaml.Controls.IListViewBaseStatics, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ListViewBase : Windows.UI.Xaml.Controls.Primitives.Selector
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewBase;
                    interface Windows.UI.Xaml.Controls.ISemanticZoomInformation;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewFactory, public, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ListView : Windows.UI.Xaml.Controls.ListViewBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IListView;
                }

                [threading(both)]
                [marshaling_behavior(agile)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IGridViewFactory, public, 0x06020000)]
                runtimeclass GridView : Windows.UI.Xaml.Controls.ListViewBase
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridView;
                }

                [threading(both)]
                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IListBoxItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ListBoxItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListBoxItem;
                }

                [version(0x06020000)]
                [marshaling_behavior(agile)]
                [composable(Windows.UI.Xaml.Controls.IComboBoxItemFactory, public, 0x06020000)]
                [threading(both)]
                runtimeclass ComboBoxItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IComboBoxItem;
                }

                [version(0x06020000)]
                [composable(Windows.UI.Xaml.Controls.IFlipViewItemFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass FlipViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IFlipViewItem;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [composable(Windows.UI.Xaml.Controls.IGridViewItemFactory, public, 0x06020000)]
                [version(0x06020000)]
                runtimeclass GridViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IGridViewItem;
                }

                [composable(Windows.UI.Xaml.Controls.IListViewItemFactory, public, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                [marshaling_behavior(agile)]
                runtimeclass ListViewItem : Windows.UI.Xaml.Controls.Primitives.SelectorItem
                {
                    [default] interface Windows.UI.Xaml.Controls.IListViewItem;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                [activatable(0x06020000)]
                runtimeclass ControlTemplate : Windows.UI.Xaml.FrameworkTemplate
                {
                    [default] interface Windows.UI.Xaml.Controls.IControlTemplate;
                }
            }
        }
    }
}
