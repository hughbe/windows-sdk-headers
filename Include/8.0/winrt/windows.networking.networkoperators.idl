//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0008
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Data.Xml.Dom.idl";
import "Windows.Devices.Sms.idl";
import "Windows.Networking.Connectivity.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Edata2Exml2Edom_h__)")
cpp_quote("#include <Windows.Data.Xml.Dom.h>")
cpp_quote("#endif // !defined(__windows2Edata2Exml2Edom_h__)")
cpp_quote("#if !defined(__windows2Edevices2Esms_h__)")
cpp_quote("#include <Windows.Devices.Sms.h>")
cpp_quote("#endif // !defined(__windows2Edevices2Esms_h__)")
cpp_quote("#if !defined(__windows2Enetworking2Econnectivity_h__)")
cpp_quote("#include <Windows.Networking.Connectivity.h>")
cpp_quote("#endif // !defined(__windows2Enetworking2Econnectivity_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Data
    {
        namespace Xml
        {
            namespace Dom
            {
                runtimeclass XmlDocument;
            }
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Sms
        {
            typedef enum CellularClass CellularClass;

            interface ISmsMessage;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace Connectivity
        {
            runtimeclass NetworkAdapter;

            typedef enum NetworkCostType NetworkCostType;
        }
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            typedef enum DataClasses DataClasses;

            typedef enum MobileBroadbandDeviceType MobileBroadbandDeviceType;

            typedef enum NetworkDeviceStatus NetworkDeviceStatus;

            typedef enum NetworkRegistrationState NetworkRegistrationState;

            typedef enum MobileBroadbandRadioState MobileBroadbandRadioState;

            typedef enum NetworkOperatorEventMessageType NetworkOperatorEventMessageType;

            typedef enum MobileBroadbandAccountWatcherStatus MobileBroadbandAccountWatcherStatus;

            typedef enum ProfileMediaType ProfileMediaType;

            typedef enum UssdResultCode UssdResultCode;

            typedef struct ProfileUsage ProfileUsage;

            interface IMobileBroadbandAccountStatics;

            interface IMobileBroadbandAccount;

            interface IMobileBroadbandDeviceInformation;

            interface IMobileBroadbandNetwork;

            interface INetworkOperatorNotificationEventDetails;

            interface IMobileBroadbandAccountEventArgs;

            interface IMobileBroadbandAccountUpdatedEventArgs;

            interface IMobileBroadbandAccountWatcher;

            interface IHotspotAuthenticationEventDetails;

            interface IHotspotAuthenticationContextStatics;

            interface IHotspotAuthenticationContext;

            interface IProvisionFromXmlDocumentResults;

            interface IProvisionedProfile;

            interface IProvisioningAgent;

            interface IProvisioningAgentStaticMethods;

            interface IUssdMessage;

            interface IUssdMessageFactory;

            interface IUssdReply;

            interface IUssdSession;

            interface IUssdSessionStatics;

            runtimeclass MobileBroadbandAccount;

            runtimeclass MobileBroadbandNetwork;

            runtimeclass MobileBroadbandDeviceInformation;

            runtimeclass NetworkOperatorNotificationEventDetails;

            runtimeclass MobileBroadbandAccountEventArgs;

            runtimeclass MobileBroadbandAccountUpdatedEventArgs;

            runtimeclass MobileBroadbandAccountWatcher;

            runtimeclass HotspotAuthenticationEventDetails;

            runtimeclass HotspotAuthenticationContext;

            runtimeclass ProvisionFromXmlDocumentResults;

            runtimeclass ProvisionedProfile;

            runtimeclass ProvisioningAgent;

            runtimeclass UssdMessage;

            runtimeclass UssdReply;

            runtimeclass UssdSession;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            [flags]
            [version(0x06020000)]
            enum DataClasses
            {
                None           = 0x0,
                Gprs           = 0x1,
                Edge           = 0x2,
                Umts           = 0x4,
                Hsdpa          = 0x8,
                Hsupa          = 0x10,
                LteAdvanced    = 0x20,
                Cdma1xRtt      = 0x10000,
                Cdma1xEvdo     = 0x20000,
                Cdma1xEvdoRevA = 0x40000,
                Cdma1xEvdv     = 0x80000,
                Cdma3xRtt      = 0x100000,
                Cdma1xEvdoRevB = 0x200000,
                CdmaUmb        = 0x400000,
                Custom         = 0x80000000
            };

            [version(0x06020000)]
            enum MobileBroadbandDeviceType
            {
                Unknown   = 0,
                Embedded  = 1,
                Removable = 2,
                Remote    = 3
            };

            [version(0x06020000)]
            enum NetworkDeviceStatus
            {
                DeviceNotReady        = 0,
                DeviceReady           = 1,
                SimNotInserted        = 2,
                BadSim                = 3,
                DeviceHardwareFailure = 4,
                AccountNotActivated   = 5,
                DeviceLocked          = 6,
                DeviceBlocked         = 7
            };

            [version(0x06020000)]
            enum NetworkRegistrationState
            {
                None         = 0,
                Deregistered = 1,
                Searching    = 2,
                Home         = 3,
                Roaming      = 4,
                Partner      = 5,
                Denied       = 6
            };

            [version(0x06020000)]
            enum MobileBroadbandRadioState
            {
                Off = 0,
                On  = 1
            };

            [version(0x06020000)]
            enum NetworkOperatorEventMessageType
            {
                Gsm                      = 0,
                Cdma                     = 1,
                Ussd                     = 2,
                DataPlanThresholdReached = 3,
                DataPlanReset            = 4,
                DataPlanDeleted          = 5,
                ProfileConnected         = 6,
                ProfileDisconnected      = 7,
                RegisteredRoaming        = 8,
                RegisteredHome           = 9
            };

            [version(0x06020000)]
            enum MobileBroadbandAccountWatcherStatus
            {
                Created              = 0,
                Started              = 1,
                EnumerationCompleted = 2,
                Stopped              = 3,
                Aborted              = 4
            };

            [version(0x06020000)]
            enum ProfileMediaType
            {
                Wlan = 0,
                Wwan = 1
            };

            [version(0x06020000)]
            enum UssdResultCode
            {
                NoActionRequired      = 0,
                ActionRequired        = 1,
                Terminated            = 2,
                OtherLocalClient      = 3,
                OperationNotSupported = 4,
                NetworkTimeout        = 5
            };

            [version(0x06020000)]
            struct ProfileUsage
            {
                UINT32 UsageInMegabytes;
                Windows.Foundation.DateTime LastSyncTime;
            };

            [uuid(AA7F4D24-AFC1-4FC8-AE9A-A9175310FAAD)]
            [version(0x06020000)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            interface IMobileBroadbandAccountStatics : IInspectable
            {
                [propget] HRESULT AvailableNetworkAccountIds([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** ppAccountIds);
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccount** ppAccount);
            }

            [uuid(36C24CCD-CEE2-43E0-A603-EE86A36D6570)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [version(0x06020000)]
            interface IMobileBroadbandAccount : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT ServiceProviderGuid([out] [retval] GUID* value);
                [propget] HRESULT ServiceProviderName([out] [retval] HSTRING* value);
                [propget] HRESULT CurrentNetwork([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** network);
                [propget] HRESULT CurrentDeviceInformation([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation** deviceInformation);
            }

            [uuid(E6D08168-E381-4C6E-9BE8-FE156969A446)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation)]
            [version(0x06020000)]
            interface IMobileBroadbandDeviceInformation : IInspectable
            {
                [propget] HRESULT NetworkDeviceStatus([out] [retval] Windows.Networking.NetworkOperators.NetworkDeviceStatus* value);
                [propget] HRESULT Manufacturer([out] [retval] HSTRING* value);
                [propget] HRESULT Model([out] [retval] HSTRING* value);
                [propget] HRESULT FirmwareInformation([out] [retval] HSTRING* value);
                [propget] HRESULT CellularClass([out] [retval] Windows.Devices.Sms.CellularClass* value);
                [propget] HRESULT DataClasses([out] [retval] Windows.Networking.NetworkOperators.DataClasses* value);
                [propget] HRESULT CustomDataClass([out] [retval] HSTRING* value);
                [propget] HRESULT MobileEquipmentId([out] [retval] HSTRING* value);
                [propget] HRESULT TelephoneNumbers([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT SubscriberId([out] [retval] HSTRING* value);
                [propget] HRESULT SimIccId([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceType([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceType* pDeviceType);
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT CurrentRadioState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandRadioState* pCurrentState);
            }

            [uuid(CB63928C-0309-4CB6-A8C1-6A5A3C8E1FF6)]
            [version(0x06020000)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetwork)]
            interface IMobileBroadbandNetwork : IInspectable
            {
                [propget] HRESULT NetworkAdapter([out] [retval] Windows.Networking.Connectivity.NetworkAdapter** value);
                [propget] HRESULT NetworkRegistrationState([out] [retval] Windows.Networking.NetworkOperators.NetworkRegistrationState* registrationState);
                [propget] HRESULT RegistrationNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT PacketAttachNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT ActivationNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT AccessPointName([out] [retval] HSTRING* apn);
                [propget] HRESULT RegisteredDataClass([out] [retval] Windows.Networking.NetworkOperators.DataClasses* value);
                [propget] HRESULT RegisteredProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT RegisteredProviderName([out] [retval] HSTRING* value);
                HRESULT ShowConnectionUI();
            }

            [uuid(BC68A9D1-82E1-4488-9F2C-1276C2468FAC)]
            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)]
            [version(0x06020000)]
            interface INetworkOperatorNotificationEventDetails : IInspectable
            {
                [propget] HRESULT NotificationType([out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType* value);
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT EncodingType([out] [retval] BYTE* value);
                [propget] HRESULT Message([out] [retval] HSTRING* value);
                [propget] HRESULT RuleId([out] [retval] HSTRING* value);
                [propget] HRESULT SmsMessage([out] [retval] Windows.Devices.Sms.ISmsMessage** value);
            }

            [uuid(3853C880-77DE-4C04-BEAD-A123B08C9F59)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs)]
            [version(0x06020000)]
            interface IMobileBroadbandAccountEventArgs : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
            }

            [uuid(7BC31D88-A6BD-49E1-80AB-6B91354A57D4)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs)]
            [version(0x06020000)]
            interface IMobileBroadbandAccountUpdatedEventArgs : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT HasDeviceInformationChanged([out] [retval] boolean* value);
                [propget] HRESULT HasNetworkChanged([out] [retval] boolean* value);
            }

            [uuid(6BF3335E-23B5-449F-928D-5E0D3E04471D)]
            [version(0x06020000)]
            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher)]
            interface IMobileBroadbandAccountWatcher : IInspectable
            {
                [eventadd] HRESULT AccountAdded([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountAdded([in] EventRegistrationToken cookie);
                [eventadd] HRESULT AccountUpdated([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountUpdated([in] EventRegistrationToken cookie);
                [eventadd] HRESULT AccountRemoved([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountRemoved([in] EventRegistrationToken cookie);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken cookie);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken cookie);
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcherStatus* status);
                HRESULT Start();
                HRESULT Stop();
            }

            [uuid(E756C791-1001-4DE5-83C7-DE61D88831D0)]
            [version(0x06020000)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails)]
            interface IHotspotAuthenticationEventDetails : IInspectable
            {
                [propget] HRESULT EventToken([out] [retval] HSTRING* value);
            }

            [uuid(E756C791-1002-4DE5-83C7-DE61D88831D0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [version(0x06020000)]
            interface IHotspotAuthenticationContextStatics : IInspectable
            {
                HRESULT TryGetAuthenticationContext([in] HSTRING evenToken, [out] Windows.Networking.NetworkOperators.HotspotAuthenticationContext** context, [out] [retval] boolean* isValid);
            }

            [uuid(E756C791-1003-4DE5-83C7-DE61D88831D0)]
            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [version(0x06020000)]
            interface IHotspotAuthenticationContext : IInspectable
            {
                [propget] HRESULT WirelessNetworkId([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                [propget] HRESULT NetworkAdapter([out] [retval] Windows.Networking.Connectivity.NetworkAdapter** value);
                [propget] HRESULT RedirectMessageUrl([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT RedirectMessageXml([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propget] HRESULT AuthenticationUrl([out] [retval] Windows.Foundation.Uri** value);
                HRESULT IssueCredentials([in] HSTRING userName, [in] HSTRING password, [in] HSTRING extraParameters, [in] boolean markAsManualConnectOnFailure);
                HRESULT AbortAuthentication([in] boolean markAsManual);
                HRESULT SkipAuthentication();
                HRESULT TriggerAttentionRequired([in] HSTRING packageRelativeApplicationId, [in] HSTRING applicationParameters);
            }

            [uuid(217700E0-8203-11DF-ADB9-F4CE462D9137)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults)]
            [version(0x06020000)]
            interface IProvisionFromXmlDocumentResults : IInspectable
            {
                [propget] HRESULT AllElementsProvisioned([out] [retval] boolean* value);
                [propget] HRESULT ProvisionResultsXml([out] [retval] HSTRING* value);
            }

            [uuid(217700E0-8202-11DF-ADB9-F4CE462D9137)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisionedProfile)]
            [version(0x06020000)]
            interface IProvisionedProfile : IInspectable
            {
                HRESULT UpdateCost([in] Windows.Networking.Connectivity.NetworkCostType value);
                HRESULT UpdateUsage([in] Windows.Networking.NetworkOperators.ProfileUsage value);
            }

            [uuid(217700E0-8201-11DF-ADB9-F4CE462D9137)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisioningAgent)]
            [version(0x06020000)]
            interface IProvisioningAgent : IInspectable
            {
                HRESULT ProvisionFromXmlDocumentAsync([in] HSTRING provisioningXmlDocument, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults*>** asyncInfo);
                HRESULT GetProvisionedProfile([in] Windows.Networking.NetworkOperators.ProfileMediaType mediaType, [in] HSTRING profileName, [out] [retval] Windows.Networking.NetworkOperators.ProvisionedProfile** provisionedProfile);
            }

            [uuid(217700E0-8101-11DF-ADB9-F4CE462D9137)]
            [exclusiveto(Windows.Networking.NetworkOperators.ProvisioningAgent)]
            [version(0x06020000)]
            interface IProvisioningAgentStaticMethods : IInspectable
            {
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.ProvisioningAgent** provisioningAgent);
            }

            [uuid(2F9ACF82-2004-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdMessage)]
            interface IUssdMessage : IInspectable
            {
                [propget] HRESULT DataCodingScheme([out] [retval] BYTE* value);
                [propput] HRESULT DataCodingScheme([in] BYTE value);
                HRESULT GetPayload([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                HRESULT SetPayload([range(0x00000000, 0x000000A0)] [in] UINT32 __valueSize, [in] [size_is(__valueSize)] BYTE* value);
                [propget] HRESULT PayloadAsText([out] [retval] HSTRING* value);
                [propput] HRESULT PayloadAsText([in] HSTRING value);
            }

            [uuid(2F9ACF82-1003-4D5D-BF81-2ABA1B4BE4A8)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdMessage)]
            [version(0x06020000)]
            interface IUssdMessageFactory : IInspectable
            {
                HRESULT CreateMessage([in] HSTRING messageText, [out] [retval] Windows.Networking.NetworkOperators.UssdMessage** ussdMessage);
            }

            [uuid(2F9ACF82-2005-4D5D-BF81-2ABA1B4BE4A8)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdReply)]
            [version(0x06020000)]
            interface IUssdReply : IInspectable
            {
                [propget] HRESULT ResultCode([out] [retval] Windows.Networking.NetworkOperators.UssdResultCode* value);
                [propget] HRESULT Message([out] [retval] Windows.Networking.NetworkOperators.UssdMessage** value);
            }

            [uuid(2F9ACF82-2002-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdSession)]
            interface IUssdSession : IInspectable
            {
                HRESULT SendMessageAndGetReplyAsync([in] Windows.Networking.NetworkOperators.UssdMessage* message, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply*>** asyncInfo);
                HRESULT Close();
            }

            [uuid(2F9ACF82-1001-4D5D-BF81-2ABA1B4BE4A8)]
            [exclusiveto(Windows.Networking.NetworkOperators.UssdSession)]
            [version(0x06020000)]
            interface IUssdSessionStatics : IInspectable
            {
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.UssdSession** ussdSession);
                HRESULT CreateFromNetworkInterfaceId([in] HSTRING networkInterfaceId, [out] [retval] Windows.Networking.NetworkOperators.UssdSession** ussdSession);
            }

            [version(0x06020000)]
            [static(Windows.Networking.NetworkOperators.IMobileBroadbandAccountStatics, 0x06020000)]
            [threading(both)]
            runtimeclass MobileBroadbandAccount
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccount;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandNetwork
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetwork;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandDeviceInformation
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation;
            }

            [version(0x06020000)]
            [marshaling_behavior(agile)]
            runtimeclass NetworkOperatorNotificationEventDetails
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorNotificationEventDetails;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandAccountEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountEventArgs;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandAccountUpdatedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountUpdatedEventArgs;
            }

            [version(0x06020000)]
            [activatable(0x06020000)]
            runtimeclass MobileBroadbandAccountWatcher
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher;
            }

            [version(0x06020000)]
            runtimeclass HotspotAuthenticationEventDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationEventDetails;
            }

            [static(Windows.Networking.NetworkOperators.IHotspotAuthenticationContextStatics, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass HotspotAuthenticationContext
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationContext;
            }

            [version(0x06020000)]
            runtimeclass ProvisionFromXmlDocumentResults
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisionFromXmlDocumentResults;
            }

            [version(0x06020000)]
            runtimeclass ProvisionedProfile
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisionedProfile;
            }

            [static(Windows.Networking.NetworkOperators.IProvisioningAgentStaticMethods, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            [activatable(0x06020000)]
            runtimeclass ProvisioningAgent
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisioningAgent;
            }

            [activatable(Windows.Networking.NetworkOperators.IUssdMessageFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass UssdMessage
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdMessage;
            }

            [version(0x06020000)]
            runtimeclass UssdReply
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdReply;
            }

            [static(Windows.Networking.NetworkOperators.IUssdSessionStatics, 0x06020000)]
            [version(0x06020000)]
            [threading(mta)]
            runtimeclass UssdSession
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdSession;
            }
        }
    }
}
