//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Perception.Spatial.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Quaternion Quaternion;

            typedef struct Vector3 Vector3;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        apicontract UniversalApiContract;
    }
}
namespace Windows
{
    namespace Perception
    {
        namespace Spatial
        {
            runtimeclass SpatialCoordinateSystem;

            runtimeclass SpatialLocator;
        }
    }
}
namespace Windows
{
    namespace Perception
    {
        namespace Spatial
        {
            namespace Preview
            {
                interface ISpatialGraphInteropPreviewStatics;

                runtimeclass SpatialGraphInteropPreview;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace Perception
    {
        namespace Spatial
        {
            namespace Preview
            {
                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [exclusiveto(Windows.Perception.Spatial.Preview.SpatialGraphInteropPreview)]
                [uuid(C042644C-20D8-4ED0-AEF7-6805B8E53F55)]
                interface ISpatialGraphInteropPreviewStatics : IInspectable
                {
                    [overload("CreateCoordinateSystemForNode")] HRESULT CreateCoordinateSystemForNode([in] GUID nodeId, [out] [retval] Windows.Perception.Spatial.SpatialCoordinateSystem** result);
                    [overload("CreateCoordinateSystemForNode")] HRESULT CreateCoordinateSystemForNodeWithPosition([in] GUID nodeId, [in] Windows.Foundation.Numerics.Vector3 relativePosition, [out] [retval] Windows.Perception.Spatial.SpatialCoordinateSystem** result);
                    [overload("CreateCoordinateSystemForNode")] HRESULT CreateCoordinateSystemForNodeWithPositionAndOrientation([in] GUID nodeId, [in] Windows.Foundation.Numerics.Vector3 relativePosition, [in] Windows.Foundation.Numerics.Quaternion relativeOrientation, [out] [retval] Windows.Perception.Spatial.SpatialCoordinateSystem** result);
                    HRESULT CreateLocatorForNode([in] GUID nodeId, [out] [retval] Windows.Perception.Spatial.SpatialLocator** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 7.0)]
                [marshaling_behavior(agile)]
                [static(Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics, Windows.Foundation.UniversalApiContract, 7.0)]
                [threading(both)]
                runtimeclass SpatialGraphInteropPreview
                {
                }
            }
        }
    }
}
